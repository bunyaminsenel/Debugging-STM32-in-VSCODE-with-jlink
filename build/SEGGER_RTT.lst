ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"SEGGER_RTT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.data._aTerminalId,"aw"
  20              		.align	2
  23              	_aTerminalId:
  24 0000 30313233 		.ascii	"0123456789ABCDEF"
  24      34353637 
  24      38394142 
  24      43444546 
  25              		.global	_SEGGER_RTT
  26              		.section	.bss._SEGGER_RTT,"aw",%nobits
  27              		.align	2
  30              	_SEGGER_RTT:
  31 0000 00000000 		.space	168
  31      00000000 
  31      00000000 
  31      00000000 
  31      00000000 
  32              		.section	.bss._acUpBuffer,"aw",%nobits
  33              		.align	2
  36              	_acUpBuffer:
  37 0000 00000000 		.space	1024
  37      00000000 
  37      00000000 
  37      00000000 
  37      00000000 
  38              		.section	.bss._acDownBuffer,"aw",%nobits
  39              		.align	2
  42              	_acDownBuffer:
  43 0000 00000000 		.space	64
  43      00000000 
  43      00000000 
  43      00000000 
  43      00000000 
  44              		.section	.bss._ActiveTerminal,"aw",%nobits
  47              	_ActiveTerminal:
  48 0000 00       		.space	1
  49              		.section	.rodata
  50              		.align	2
  51              	.LC0:
  52 0000 5465726D 		.ascii	"Terminal\000"
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 2


  52      696E616C 
  52      00
  53 0009 000000   		.align	2
  54              	.LC1:
  55 000c 52545400 		.ascii	"RTT\000"
  56              		.align	2
  57              	.LC2:
  58 0010 53454747 		.ascii	"SEGGER\000"
  58      455200
  59              		.section	.text._DoInit,"ax",%progbits
  60              		.align	1
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	_DoInit:
  66              	.LFB0:
  67              		.file 1 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c"
   1:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
   2:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                    SEGGER Microcontroller GmbH                     *
   3:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                        The Embedded Experts                        *
   4:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** **********************************************************************
   5:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                                                                    *
   6:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *            (c) 1995 - 2018 SEGGER Microcontroller GmbH             *
   7:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                                                                    *
   8:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       www.segger.com     Support: support@segger.com               *
   9:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                                                                    *
  10:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** **********************************************************************
  11:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                                                                    *
  12:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER RTT * Real Time Transfer for embedded targets         *
  13:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                                                                    *
  14:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** **********************************************************************
  15:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                                                                    *
  16:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * All rights reserved.                                               *
  17:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                                                                    *
  18:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * SEGGER strongly recommends to not make any changes                 *
  19:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * to or modify the source code of this software in order to stay     *
  20:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * compatible with the RTT protocol and J-Link.                       *
  21:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                                                                    *
  22:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * Redistribution and use in source and binary forms, with or         *
  23:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * without modification, are permitted provided that the following    *
  24:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * conditions are met:                                                *
  25:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                                                                    *
  26:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * o Redistributions of source code must retain the above copyright   *
  27:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *   notice, this list of conditions and the following disclaimer.    *
  28:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                                                                    *
  29:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * o Redistributions in binary form must reproduce the above          *
  30:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *   copyright notice, this list of conditions and the following      *
  31:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *   disclaimer in the documentation and/or other materials provided  *
  32:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *   with the distribution.                                           *
  33:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                                                                    *
  34:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * o Neither the name of SEGGER Microcontroller GmbH                  *
  35:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *   nor the names of its contributors may be used to endorse or      *
  36:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *   promote products derived from this software without specific     *
  37:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *   prior written permission.                                        *
  38:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                                                                    *
  39:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND             *
  40:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,        *
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 3


  41:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF           *
  42:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE           *
  43:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * DISCLAIMED. IN NO EVENT SHALL SEGGER Microcontroller BE LIABLE FOR *
  44:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           *
  45:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  *
  46:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;    *
  47:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF      *
  48:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          *
  49:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  *
  50:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
  51:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** * DAMAGE.                                                            *
  52:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                                                                    *
  53:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** **********************************************************************
  54:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** ---------------------------END-OF-HEADER------------------------------
  55:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** File    : SEGGER_RTT.c
  56:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** Purpose : Implementation of SEGGER real-time transfer (RTT) which
  57:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****           allows real-time communication on targets which support
  58:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****           debugger memory accesses while the CPU is running.
  59:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** Revision: $Rev: 13375 $
  60:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
  61:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** Additional information:
  62:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****           Type "int" is assumed to be 32-bits in size
  63:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****           H->T    Host to target communication
  64:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****           T->H    Target to host communication
  65:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
  66:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****           RTT channel 0 is always present and reserved for Terminal usage.
  67:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****           Name is fixed to "Terminal"
  68:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
  69:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****           Effective buffer size: SizeOfBuffer - 1
  70:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
  71:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****           WrOff == RdOff:       Buffer is empty
  72:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****           WrOff == (RdOff - 1): Buffer is full
  73:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****           WrOff >  RdOff:       Free space includes wrap-around
  74:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****           WrOff <  RdOff:       Used space includes wrap-around
  75:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****           (WrOff == (SizeOfBuffer - 1)) && (RdOff == 0):  
  76:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****                                 Buffer full and wrap-around after next byte
  77:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
  78:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
  79:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** ----------------------------------------------------------------------
  80:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
  81:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
  82:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #include "SEGGER_RTT.h"
  83:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
  84:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #include <string.h>                 // for memcpy
  85:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
  86:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
  87:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
  88:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       Configuration, default values
  89:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
  90:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** **********************************************************************
  91:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
  92:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
  93:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_UP
  94:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define BUFFER_SIZE_UP                                  1024  // Size of the buffer for terminal 
  95:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
  96:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
  97:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_DOWN
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 4


  98:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define BUFFER_SIZE_DOWN                                16    // Size of the buffer for terminal 
  99:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 100:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 101:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_UP_BUFFERS
 102:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_UP_BUFFERS                    2    // Number of up-buffers (T->H) avai
 103:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 104:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 105:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_DOWN_BUFFERS
 106:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_DOWN_BUFFERS                  2    // Number of down-buffers (H->T) av
 107:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 108:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 109:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef SEGGER_RTT_BUFFER_SECTION
 110:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #if defined(SEGGER_RTT_SECTION)
 111:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_BUFFER_SECTION SEGGER_RTT_SECTION
 112:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #endif
 113:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 114:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 115:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_ALIGNMENT
 116:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGNMENT                            0
 117:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 118:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 119:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_BUFFER_ALIGNMENT
 120:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGNMENT                     0
 121:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 122:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 123:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MODE_DEFAULT
 124:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_MODE_DEFAULT                         SEGGER_RTT_MODE_NO_BLOCK_SKIP
 125:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 126:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 127:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_LOCK
 128:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_LOCK()
 129:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 130:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 131:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_UNLOCK
 132:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_UNLOCK()
 133:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 134:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 135:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef   STRLEN
 136:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define STRLEN(a)                                       strlen((a))
 137:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 138:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 139:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MEMCPY_USE_BYTELOOP
 140:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_MEMCPY_USE_BYTELOOP                  0
 141:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 142:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 143:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MEMCPY
 144:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #ifdef  MEMCPY
 145:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_MEMCPY(pDest, pSrc, NumBytes)      MEMCPY((pDest), (pSrc), (NumBytes))
 146:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #else
 147:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_MEMCPY(pDest, pSrc, NumBytes)      memcpy((pDest), (pSrc), (NumBytes))
 148:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #endif
 149:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 150:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 151:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef   MIN
 152:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define MIN(a, b)         (((a) < (b)) ? (a) : (b))
 153:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 154:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 5


 155:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef   MAX
 156:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define MAX(a, b)         (((a) > (b)) ? (a) : (b))
 157:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 158:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** //
 159:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** // For some environments, NULL may not be defined until certain headers are included
 160:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** //
 161:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #ifndef NULL
 162:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define NULL 0
 163:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 164:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 165:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 166:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 167:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       Defines, fixed
 168:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 169:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** **********************************************************************
 170:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 171:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if (defined __ICCARM__) || (defined __ICCRX__)
 172:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define RTT_PRAGMA(P) _Pragma(#P)
 173:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 174:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 175:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT || SEGGER_RTT_BUFFER_ALIGNMENT
 176:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #if (defined __GNUC__)
 177:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 178:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
 179:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     #define PRAGMA(A) _Pragma(#A)
 180:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #define SEGGER_RTT_ALIGN(Var, Alignment) RTT_PRAGMA(data_alignment=Alignment) \
 181:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****                                   Var
 182:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 183:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 184:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #else
 185:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     #error "Alignment not supported for this compiler."
 186:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #endif
 187:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #else
 188:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGN(Var, Alignment) Var
 189:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 190:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 191:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION) || defined (SEGGER_RTT_BUFFER_SECTION)
 192:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #if (defined __GNUC__)
 193:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section))) Var
 194:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
 195:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #define SEGGER_RTT_PUT_SECTION(Var, Section) RTT_PRAGMA(location=Section) \
 196:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****                                         Var
 197:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 198:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section), zero_init))  Va
 199:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #else
 200:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     #error "Section placement not supported for this compiler."
 201:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #endif
 202:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #else
 203:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_SECTION(Var, Section) Var
 204:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 205:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 206:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 207:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT
 208:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_ALIGNMENT)
 209:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #else
 210:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  Var
 211:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 6


 212:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 213:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_BUFFER_ALIGNMENT
 214:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_BUFFER_ALIGNMENT)
 215:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #else
 216:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  Var
 217:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 218:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 219:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 220:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION)
 221:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_SECTION)
 222:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #else
 223:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) Var
 224:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 225:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 226:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if defined(SEGGER_RTT_BUFFER_SECTION)
 227:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_BUFFER_SECTION)
 228:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #else
 229:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) Var
 230:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 231:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 232:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 233:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 234:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       Static const data
 235:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 236:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** **********************************************************************
 237:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 238:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 239:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** static unsigned char _aTerminalId[16] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B
 240:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 241:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 242:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 243:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       Static data
 244:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 245:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** **********************************************************************
 246:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 247:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** //
 248:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** // RTT Control Block and allocate buffers for channel 0
 249:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** //
 250:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** SEGGER_RTT_PUT_CB_SECTION(SEGGER_RTT_CB_ALIGN(SEGGER_RTT_CB _SEGGER_RTT));
 251:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 252:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acUpBuffer  [BUFFER_SIZE_UP]));
 253:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acDownBuffer[BUFFER_SIZE_DOWN]))
 254:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 255:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** static char _ActiveTerminal;
 256:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 257:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 258:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 259:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       Static functions
 260:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 261:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** **********************************************************************
 262:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 263:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 264:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 265:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 266:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       _DoInit()
 267:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 268:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 7


 269:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Initializes the control block an buffers.
 270:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    May only be called via INIT() to avoid overriding settings.
 271:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 272:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 273:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #define INIT()  do {                                            \
 274:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****                   if (_SEGGER_RTT.acID[0] == '\0') { _DoInit(); }  \
 275:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****                 } while (0)
 276:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** static void _DoInit(void) {
  68              		.loc 1 276 27
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 8
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73 0000 80B4     		push	{r7}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 7, -4
  77 0002 83B0     		sub	sp, sp, #12
  78              	.LCFI1:
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              	.LCFI2:
  82              		.cfi_def_cfa_register 7
 277:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_CB* p;
 278:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 279:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Initialize control block
 280:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 281:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p = &_SEGGER_RTT;
  83              		.loc 1 281 5
  84 0006 214B     		ldr	r3, .L2
  85 0008 7B60     		str	r3, [r7, #4]
 282:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
  86              		.loc 1 282 25
  87 000a 7B68     		ldr	r3, [r7, #4]
  88 000c 0322     		movs	r2, #3
  89 000e 1A61     		str	r2, [r3, #16]
 283:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
  90              		.loc 1 283 25
  91 0010 7B68     		ldr	r3, [r7, #4]
  92 0012 0322     		movs	r2, #3
  93 0014 5A61     		str	r2, [r3, #20]
 284:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 285:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Initialize up buffer 0
 286:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 287:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p->aUp[0].sName         = "Terminal";
  94              		.loc 1 287 27
  95 0016 7B68     		ldr	r3, [r7, #4]
  96 0018 1D4A     		ldr	r2, .L2+4
  97 001a 9A61     		str	r2, [r3, #24]
 288:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
  98              		.loc 1 288 27
  99 001c 7B68     		ldr	r3, [r7, #4]
 100 001e 1D4A     		ldr	r2, .L2+8
 101 0020 DA61     		str	r2, [r3, #28]
 289:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = sizeof(_acUpBuffer);
 102              		.loc 1 289 27
 103 0022 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 8


 104 0024 4FF48062 		mov	r2, #1024
 105 0028 1A62     		str	r2, [r3, #32]
 290:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 106              		.loc 1 290 27
 107 002a 7B68     		ldr	r3, [r7, #4]
 108 002c 0022     		movs	r2, #0
 109 002e 9A62     		str	r2, [r3, #40]
 291:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 110              		.loc 1 291 27
 111 0030 7B68     		ldr	r3, [r7, #4]
 112 0032 0022     		movs	r2, #0
 113 0034 5A62     		str	r2, [r3, #36]
 292:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 114              		.loc 1 292 27
 115 0036 7B68     		ldr	r3, [r7, #4]
 116 0038 0022     		movs	r2, #0
 117 003a DA62     		str	r2, [r3, #44]
 293:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 294:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Initialize down buffer 0
 295:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 296:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p->aDown[0].sName         = "Terminal";
 118              		.loc 1 296 29
 119 003c 7B68     		ldr	r3, [r7, #4]
 120 003e 144A     		ldr	r2, .L2+4
 121 0040 1A66     		str	r2, [r3, #96]
 297:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 122              		.loc 1 297 29
 123 0042 7B68     		ldr	r3, [r7, #4]
 124 0044 144A     		ldr	r2, .L2+12
 125 0046 5A66     		str	r2, [r3, #100]
 298:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = sizeof(_acDownBuffer);
 126              		.loc 1 298 29
 127 0048 7B68     		ldr	r3, [r7, #4]
 128 004a 4022     		movs	r2, #64
 129 004c 9A66     		str	r2, [r3, #104]
 299:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 130              		.loc 1 299 29
 131 004e 7B68     		ldr	r3, [r7, #4]
 132 0050 0022     		movs	r2, #0
 133 0052 1A67     		str	r2, [r3, #112]
 300:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 134              		.loc 1 300 29
 135 0054 7B68     		ldr	r3, [r7, #4]
 136 0056 0022     		movs	r2, #0
 137 0058 DA66     		str	r2, [r3, #108]
 301:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 138              		.loc 1 301 29
 139 005a 7B68     		ldr	r3, [r7, #4]
 140 005c 0022     		movs	r2, #0
 141 005e 5A67     		str	r2, [r3, #116]
 302:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 303:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Finish initialization of the control block.
 304:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Copy Id string in three steps to make sure "SEGGER RTT" is not found
 305:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // in initializer memory (usually flash) by J-Link
 306:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 307:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   strcpy(&p->acID[7], "RTT");
 142              		.loc 1 307 3
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 9


 143 0060 7B68     		ldr	r3, [r7, #4]
 144 0062 0733     		adds	r3, r3, #7
 145 0064 0D4A     		ldr	r2, .L2+16
 146 0066 1068     		ldr	r0, [r2]
 147 0068 1860     		str	r0, [r3]	@ unaligned
 308:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   strcpy(&p->acID[0], "SEGGER");
 148              		.loc 1 308 3
 149 006a 7B68     		ldr	r3, [r7, #4]
 150 006c 0C4A     		ldr	r2, .L2+20
 151 006e 1068     		ldr	r0, [r2]
 152 0070 1860     		str	r0, [r3]	@ unaligned
 153 0072 9188     		ldrh	r1, [r2, #4]	@ unaligned
 154 0074 9279     		ldrb	r2, [r2, #6]
 155 0076 9980     		strh	r1, [r3, #4]	@ unaligned
 156 0078 9A71     		strb	r2, [r3, #6]
 309:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   p->acID[6] = ' ';
 157              		.loc 1 309 14
 158 007a 7B68     		ldr	r3, [r7, #4]
 159 007c 2022     		movs	r2, #32
 160 007e 9A71     		strb	r2, [r3, #6]
 310:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 161              		.loc 1 310 1
 162 0080 00BF     		nop
 163 0082 0C37     		adds	r7, r7, #12
 164              	.LCFI3:
 165              		.cfi_def_cfa_offset 4
 166 0084 BD46     		mov	sp, r7
 167              	.LCFI4:
 168              		.cfi_def_cfa_register 13
 169              		@ sp needed
 170 0086 5DF8047B 		ldr	r7, [sp], #4
 171              	.LCFI5:
 172              		.cfi_restore 7
 173              		.cfi_def_cfa_offset 0
 174 008a 7047     		bx	lr
 175              	.L3:
 176              		.align	2
 177              	.L2:
 178 008c 00000000 		.word	_SEGGER_RTT
 179 0090 00000000 		.word	.LC0
 180 0094 00000000 		.word	_acUpBuffer
 181 0098 00000000 		.word	_acDownBuffer
 182 009c 0C000000 		.word	.LC1
 183 00a0 10000000 		.word	.LC2
 184              		.cfi_endproc
 185              	.LFE0:
 187              		.section	.text._WriteBlocking,"ax",%progbits
 188              		.align	1
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 193              	_WriteBlocking:
 194              	.LFB1:
 311:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 312:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 313:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 314:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       _WriteBlocking()
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 10


 315:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 316:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
 317:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
 318:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 319:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    read by the host.
 320:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    The caller is responsible for managing the write chunk sizes as
 321:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    _WriteBlocking() will block until all data has been posted successfully.
 322:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 323:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
 324:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 325:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 326:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 327:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 328:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
 329:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    >= 0 - Number of bytes written into buffer.
 330:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 331:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** static unsigned _WriteBlocking(SEGGER_RTT_BUFFER_UP* pRing, const char* pBuffer, unsigned NumBytes)
 195              		.loc 1 331 101
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 32
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199 0000 80B5     		push	{r7, lr}
 200              	.LCFI6:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 7, -8
 203              		.cfi_offset 14, -4
 204 0002 88B0     		sub	sp, sp, #32
 205              	.LCFI7:
 206              		.cfi_def_cfa_offset 40
 207 0004 00AF     		add	r7, sp, #0
 208              	.LCFI8:
 209              		.cfi_def_cfa_register 7
 210 0006 F860     		str	r0, [r7, #12]
 211 0008 B960     		str	r1, [r7, #8]
 212 000a 7A60     		str	r2, [r7, #4]
 332:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 333:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 334:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned RdOff;
 335:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned WrOff;
 336:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 337:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   char*    pDst;
 338:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 339:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 340:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Write data to buffer and handle wrap-around if necessary
 341:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 342:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   NumBytesWritten = 0u;
 213              		.loc 1 342 19
 214 000c 0023     		movs	r3, #0
 215 000e BB61     		str	r3, [r7, #24]
 343:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 216              		.loc 1 343 9
 217 0010 FB68     		ldr	r3, [r7, #12]
 218 0012 DB68     		ldr	r3, [r3, #12]
 219 0014 7B61     		str	r3, [r7, #20]
 220              	.L8:
 344:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   do {
 345:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 11


 221              		.loc 1 345 11
 222 0016 FB68     		ldr	r3, [r7, #12]
 223 0018 1B69     		ldr	r3, [r3, #16]
 224 001a 3B61     		str	r3, [r7, #16]
 346:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 225              		.loc 1 346 8
 226 001c 3A69     		ldr	r2, [r7, #16]
 227 001e 7B69     		ldr	r3, [r7, #20]
 228 0020 9A42     		cmp	r2, r3
 229 0022 05D9     		bls	.L5
 347:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 230              		.loc 1 347 31
 231 0024 3A69     		ldr	r2, [r7, #16]
 232 0026 7B69     		ldr	r3, [r7, #20]
 233 0028 D31A     		subs	r3, r2, r3
 234              		.loc 1 347 23
 235 002a 013B     		subs	r3, r3, #1
 236 002c FB61     		str	r3, [r7, #28]
 237 002e 07E0     		b	.L6
 238              	.L5:
 348:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     } else {
 349:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       NumBytesToWrite = pRing->SizeOfBuffer - (WrOff - RdOff + 1u);
 239              		.loc 1 349 30
 240 0030 FB68     		ldr	r3, [r7, #12]
 241 0032 9A68     		ldr	r2, [r3, #8]
 242              		.loc 1 349 62
 243 0034 3969     		ldr	r1, [r7, #16]
 244 0036 7B69     		ldr	r3, [r7, #20]
 245 0038 CB1A     		subs	r3, r1, r3
 246              		.loc 1 349 45
 247 003a 1344     		add	r3, r3, r2
 248              		.loc 1 349 23
 249 003c 013B     		subs	r3, r3, #1
 250 003e FB61     		str	r3, [r7, #28]
 251              	.L6:
 350:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
 351:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, (pRing->SizeOfBuffer - WrOff));      // Number of bytes 
 252              		.loc 1 351 23
 253 0040 FB68     		ldr	r3, [r7, #12]
 254 0042 9A68     		ldr	r2, [r3, #8]
 255 0044 7B69     		ldr	r3, [r7, #20]
 256 0046 D31A     		subs	r3, r2, r3
 257              		.loc 1 351 21
 258 0048 FA69     		ldr	r2, [r7, #28]
 259 004a 9342     		cmp	r3, r2
 260 004c 28BF     		it	cs
 261 004e 1346     		movcs	r3, r2
 262 0050 FB61     		str	r3, [r7, #28]
 352:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 263              		.loc 1 352 21
 264 0052 FA69     		ldr	r2, [r7, #28]
 265 0054 7B68     		ldr	r3, [r7, #4]
 266 0056 9342     		cmp	r3, r2
 267 0058 28BF     		it	cs
 268 005a 1346     		movcs	r3, r2
 269 005c FB61     		str	r3, [r7, #28]
 353:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 12


 354:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pDst = pRing->pBuffer + WrOff;
 355:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 356:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 357:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 358:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     while (NumBytesToWrite--) {
 359:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       *pDst++ = *pBuffer++;
 360:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     };
 361:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #else
 362:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pBuffer, NumBytesToWrite);
 270              		.loc 1 362 5
 271 005e FB68     		ldr	r3, [r7, #12]
 272 0060 5A68     		ldr	r2, [r3, #4]
 273 0062 7B69     		ldr	r3, [r7, #20]
 274 0064 1344     		add	r3, r3, r2
 275 0066 FA69     		ldr	r2, [r7, #28]
 276 0068 B968     		ldr	r1, [r7, #8]
 277 006a 1846     		mov	r0, r3
 278 006c FFF7FEFF 		bl	memcpy
 363:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 279              		.loc 1 363 21
 280 0070 BA69     		ldr	r2, [r7, #24]
 281 0072 FB69     		ldr	r3, [r7, #28]
 282 0074 1344     		add	r3, r3, r2
 283 0076 BB61     		str	r3, [r7, #24]
 364:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 284              		.loc 1 364 21
 285 0078 BA68     		ldr	r2, [r7, #8]
 286 007a FB69     		ldr	r3, [r7, #28]
 287 007c 1344     		add	r3, r3, r2
 288 007e BB60     		str	r3, [r7, #8]
 365:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 289              		.loc 1 365 21
 290 0080 7A68     		ldr	r2, [r7, #4]
 291 0082 FB69     		ldr	r3, [r7, #28]
 292 0084 D31A     		subs	r3, r2, r3
 293 0086 7B60     		str	r3, [r7, #4]
 366:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 294              		.loc 1 366 21
 295 0088 7A69     		ldr	r2, [r7, #20]
 296 008a FB69     		ldr	r3, [r7, #28]
 297 008c 1344     		add	r3, r3, r2
 298 008e 7B61     		str	r3, [r7, #20]
 367:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 368:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     if (WrOff == pRing->SizeOfBuffer) {
 299              		.loc 1 368 23
 300 0090 FB68     		ldr	r3, [r7, #12]
 301 0092 9B68     		ldr	r3, [r3, #8]
 302              		.loc 1 368 8
 303 0094 7A69     		ldr	r2, [r7, #20]
 304 0096 9A42     		cmp	r2, r3
 305 0098 01D1     		bne	.L7
 369:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       WrOff = 0u;
 306              		.loc 1 369 13
 307 009a 0023     		movs	r3, #0
 308 009c 7B61     		str	r3, [r7, #20]
 309              	.L7:
 370:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 13


 371:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 310              		.loc 1 371 18
 311 009e FB68     		ldr	r3, [r7, #12]
 312 00a0 7A69     		ldr	r2, [r7, #20]
 313 00a2 DA60     		str	r2, [r3, #12]
 372:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } while (NumBytes);
 314              		.loc 1 372 12
 315 00a4 7B68     		ldr	r3, [r7, #4]
 316 00a6 002B     		cmp	r3, #0
 317 00a8 B5D1     		bne	.L8
 373:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 374:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return NumBytesWritten;
 318              		.loc 1 374 10
 319 00aa BB69     		ldr	r3, [r7, #24]
 375:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 320              		.loc 1 375 1
 321 00ac 1846     		mov	r0, r3
 322 00ae 2037     		adds	r7, r7, #32
 323              	.LCFI9:
 324              		.cfi_def_cfa_offset 8
 325 00b0 BD46     		mov	sp, r7
 326              	.LCFI10:
 327              		.cfi_def_cfa_register 13
 328              		@ sp needed
 329 00b2 80BD     		pop	{r7, pc}
 330              		.cfi_endproc
 331              	.LFE1:
 333              		.section	.text._WriteNoCheck,"ax",%progbits
 334              		.align	1
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 339              	_WriteNoCheck:
 340              	.LFB2:
 376:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 377:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 378:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 379:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       _WriteNoCheck()
 380:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 381:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
 382:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
 383:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 384:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    read by the host.
 385:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    It is callers responsibility to make sure data actually fits in buffer.
 386:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 387:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
 388:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 389:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 390:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 391:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 392:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Notes
 393:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (1) If there might not be enough space in the "Up"-buffer, call _WriteBlocking
 394:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 395:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** static void _WriteNoCheck(SEGGER_RTT_BUFFER_UP* pRing, const char* pData, unsigned NumBytes) {
 341              		.loc 1 395 94
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 14


 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345 0000 80B5     		push	{r7, lr}
 346              	.LCFI11:
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 7, -8
 349              		.cfi_offset 14, -4
 350 0002 88B0     		sub	sp, sp, #32
 351              	.LCFI12:
 352              		.cfi_def_cfa_offset 40
 353 0004 00AF     		add	r7, sp, #0
 354              	.LCFI13:
 355              		.cfi_def_cfa_register 7
 356 0006 F860     		str	r0, [r7, #12]
 357 0008 B960     		str	r1, [r7, #8]
 358 000a 7A60     		str	r2, [r7, #4]
 396:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 397:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned WrOff;
 398:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned Rem;
 399:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 400:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   char*    pDst;
 401:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 402:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 403:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 359              		.loc 1 403 9
 360 000c FB68     		ldr	r3, [r7, #12]
 361 000e DB68     		ldr	r3, [r3, #12]
 362 0010 FB61     		str	r3, [r7, #28]
 404:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 363              		.loc 1 404 14
 364 0012 FB68     		ldr	r3, [r7, #12]
 365 0014 9A68     		ldr	r2, [r3, #8]
 366              		.loc 1 404 7
 367 0016 FB69     		ldr	r3, [r7, #28]
 368 0018 D31A     		subs	r3, r2, r3
 369 001a BB61     		str	r3, [r7, #24]
 405:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 370              		.loc 1 405 6
 371 001c BA69     		ldr	r2, [r7, #24]
 372 001e 7B68     		ldr	r3, [r7, #4]
 373 0020 9A42     		cmp	r2, r3
 374 0022 0ED9     		bls	.L11
 406:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
 407:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     // All data fits before wrap around
 408:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
 409:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 410:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pDst = pRing->pBuffer + WrOff;
 411:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     WrOff += NumBytes;
 412:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     while (NumBytes--) {
 413:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       *pDst++ = *pData++;
 414:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     };
 415:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 416:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #else
 417:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, NumBytes);
 375              		.loc 1 417 5
 376 0024 FB68     		ldr	r3, [r7, #12]
 377 0026 5A68     		ldr	r2, [r3, #4]
 378 0028 FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 15


 379 002a 1344     		add	r3, r3, r2
 380 002c 7A68     		ldr	r2, [r7, #4]
 381 002e B968     		ldr	r1, [r7, #8]
 382 0030 1846     		mov	r0, r3
 383 0032 FFF7FEFF 		bl	memcpy
 418:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 384              		.loc 1 418 26
 385 0036 FA69     		ldr	r2, [r7, #28]
 386 0038 7B68     		ldr	r3, [r7, #4]
 387 003a 1A44     		add	r2, r2, r3
 388              		.loc 1 418 18
 389 003c FB68     		ldr	r3, [r7, #12]
 390 003e DA60     		str	r2, [r3, #12]
 419:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 420:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
 421:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
 422:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     // We reach the end of the buffer, so need to wrap around
 423:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
 424:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 425:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pDst = pRing->pBuffer + WrOff;
 426:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 427:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     while (NumBytesAtOnce--) {
 428:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       *pDst++ = *pData++;
 429:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     };
 430:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pDst = pRing->pBuffer;
 431:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 432:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     while (NumBytesAtOnce--) {
 433:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       *pDst++ = *pData++;
 434:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     };
 435:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing->WrOff = NumBytes - Rem;
 436:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #else
 437:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 438:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, NumBytesAtOnce);
 439:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 440:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pRing->pBuffer, pData + Rem, NumBytesAtOnce);
 441:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 442:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 443:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
 444:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 391              		.loc 1 444 1
 392 0040 1AE0     		b	.L13
 393              	.L11:
 437:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, NumBytesAtOnce);
 394              		.loc 1 437 20
 395 0042 BB69     		ldr	r3, [r7, #24]
 396 0044 7B61     		str	r3, [r7, #20]
 438:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 397              		.loc 1 438 5
 398 0046 FB68     		ldr	r3, [r7, #12]
 399 0048 5A68     		ldr	r2, [r3, #4]
 400 004a FB69     		ldr	r3, [r7, #28]
 401 004c 1344     		add	r3, r3, r2
 402 004e 7A69     		ldr	r2, [r7, #20]
 403 0050 B968     		ldr	r1, [r7, #8]
 404 0052 1846     		mov	r0, r3
 405 0054 FFF7FEFF 		bl	memcpy
 439:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pRing->pBuffer, pData + Rem, NumBytesAtOnce);
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 16


 406              		.loc 1 439 20
 407 0058 7A68     		ldr	r2, [r7, #4]
 408 005a BB69     		ldr	r3, [r7, #24]
 409 005c D31A     		subs	r3, r2, r3
 410 005e 7B61     		str	r3, [r7, #20]
 440:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 411              		.loc 1 440 5
 412 0060 FB68     		ldr	r3, [r7, #12]
 413 0062 5868     		ldr	r0, [r3, #4]
 414 0064 BA68     		ldr	r2, [r7, #8]
 415 0066 BB69     		ldr	r3, [r7, #24]
 416 0068 1344     		add	r3, r3, r2
 417 006a 7A69     		ldr	r2, [r7, #20]
 418 006c 1946     		mov	r1, r3
 419 006e FFF7FEFF 		bl	memcpy
 441:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 420              		.loc 1 441 18
 421 0072 FB68     		ldr	r3, [r7, #12]
 422 0074 7A69     		ldr	r2, [r7, #20]
 423 0076 DA60     		str	r2, [r3, #12]
 424              	.L13:
 425              		.loc 1 444 1
 426 0078 00BF     		nop
 427 007a 2037     		adds	r7, r7, #32
 428              	.LCFI14:
 429              		.cfi_def_cfa_offset 8
 430 007c BD46     		mov	sp, r7
 431              	.LCFI15:
 432              		.cfi_def_cfa_register 13
 433              		@ sp needed
 434 007e 80BD     		pop	{r7, pc}
 435              		.cfi_endproc
 436              	.LFE2:
 438              		.section	.text._PostTerminalSwitch,"ax",%progbits
 439              		.align	1
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 444              	_PostTerminalSwitch:
 445              	.LFB3:
 445:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 446:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 447:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 448:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       _PostTerminalSwitch()
 449:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 450:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
 451:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Switch terminal to the given terminal ID.  It is the caller's
 452:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    responsibility to ensure the terminal ID is correct and there is
 453:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    enough space in the buffer for this to complete successfully.
 454:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 455:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
 456:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 457:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    TerminalId   Terminal ID to switch to.
 458:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 459:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** static void _PostTerminalSwitch(SEGGER_RTT_BUFFER_UP* pRing, unsigned char TerminalId) {
 446              		.loc 1 459 88
 447              		.cfi_startproc
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 17


 448              		@ args = 0, pretend = 0, frame = 16
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450 0000 80B5     		push	{r7, lr}
 451              	.LCFI16:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 84B0     		sub	sp, sp, #16
 456              	.LCFI17:
 457              		.cfi_def_cfa_offset 24
 458 0004 00AF     		add	r7, sp, #0
 459              	.LCFI18:
 460              		.cfi_def_cfa_register 7
 461 0006 7860     		str	r0, [r7, #4]
 462 0008 0B46     		mov	r3, r1
 463 000a FB70     		strb	r3, [r7, #3]
 460:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned char ac[2];
 461:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 462:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 464              		.loc 1 462 9
 465 000c FF23     		movs	r3, #255
 466 000e 3B73     		strb	r3, [r7, #12]
 463:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 467              		.loc 1 463 23
 468 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 469 0012 074A     		ldr	r2, .L15
 470 0014 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 471              		.loc 1 463 9
 472 0016 7B73     		strb	r3, [r7, #13]
 464:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 473              		.loc 1 464 3
 474 0018 07F10C03 		add	r3, r7, #12
 475 001c 0222     		movs	r2, #2
 476 001e 1946     		mov	r1, r3
 477 0020 7868     		ldr	r0, [r7, #4]
 478 0022 FFF7FEFF 		bl	_WriteBlocking
 465:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 479              		.loc 1 465 1
 480 0026 00BF     		nop
 481 0028 1037     		adds	r7, r7, #16
 482              	.LCFI19:
 483              		.cfi_def_cfa_offset 8
 484 002a BD46     		mov	sp, r7
 485              	.LCFI20:
 486              		.cfi_def_cfa_register 13
 487              		@ sp needed
 488 002c 80BD     		pop	{r7, pc}
 489              	.L16:
 490 002e 00BF     		.align	2
 491              	.L15:
 492 0030 00000000 		.word	_aTerminalId
 493              		.cfi_endproc
 494              	.LFE3:
 496              		.section	.text._GetAvailWriteSpace,"ax",%progbits
 497              		.align	1
 498              		.syntax unified
 499              		.thumb
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 18


 500              		.thumb_func
 502              	_GetAvailWriteSpace:
 503              	.LFB4:
 466:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 467:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 468:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 469:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       _GetAvailWriteSpace()
 470:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 471:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
 472:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Returns the number of bytes that can be written to the ring
 473:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    buffer without blocking.
 474:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 475:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
 476:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pRing        Ring buffer to check.
 477:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 478:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
 479:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Number of bytes that are free in the buffer.
 480:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 481:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** static unsigned _GetAvailWriteSpace(SEGGER_RTT_BUFFER_UP* pRing) {
 504              		.loc 1 481 66
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 24
 507              		@ frame_needed = 1, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509 0000 80B4     		push	{r7}
 510              	.LCFI21:
 511              		.cfi_def_cfa_offset 4
 512              		.cfi_offset 7, -4
 513 0002 87B0     		sub	sp, sp, #28
 514              	.LCFI22:
 515              		.cfi_def_cfa_offset 32
 516 0004 00AF     		add	r7, sp, #0
 517              	.LCFI23:
 518              		.cfi_def_cfa_register 7
 519 0006 7860     		str	r0, [r7, #4]
 482:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned RdOff;
 483:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned WrOff;
 484:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned r;
 485:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 486:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Avoid warnings regarding volatile access order.  It's not a problem
 487:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // in this case, but dampen compiler enthusiasm.
 488:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 489:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 520              		.loc 1 489 9
 521 0008 7B68     		ldr	r3, [r7, #4]
 522 000a 1B69     		ldr	r3, [r3, #16]
 523 000c 3B61     		str	r3, [r7, #16]
 490:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 524              		.loc 1 490 9
 525 000e 7B68     		ldr	r3, [r7, #4]
 526 0010 DB68     		ldr	r3, [r3, #12]
 527 0012 FB60     		str	r3, [r7, #12]
 491:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 528              		.loc 1 491 6
 529 0014 3A69     		ldr	r2, [r7, #16]
 530 0016 FB68     		ldr	r3, [r7, #12]
 531 0018 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 19


 532 001a 08D8     		bhi	.L18
 492:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 533              		.loc 1 492 14
 534 001c 7B68     		ldr	r3, [r7, #4]
 535 001e 9A68     		ldr	r2, [r3, #8]
 536              		.loc 1 492 34
 537 0020 FB68     		ldr	r3, [r7, #12]
 538 0022 D21A     		subs	r2, r2, r3
 539              		.loc 1 492 42
 540 0024 3B69     		ldr	r3, [r7, #16]
 541 0026 1344     		add	r3, r3, r2
 542              		.loc 1 492 7
 543 0028 013B     		subs	r3, r3, #1
 544 002a 7B61     		str	r3, [r7, #20]
 545 002c 04E0     		b	.L19
 546              	.L18:
 493:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
 494:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r = RdOff - WrOff - 1u;
 547              		.loc 1 494 15
 548 002e 3A69     		ldr	r2, [r7, #16]
 549 0030 FB68     		ldr	r3, [r7, #12]
 550 0032 D31A     		subs	r3, r2, r3
 551              		.loc 1 494 7
 552 0034 013B     		subs	r3, r3, #1
 553 0036 7B61     		str	r3, [r7, #20]
 554              	.L19:
 495:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
 496:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return r;
 555              		.loc 1 496 10
 556 0038 7B69     		ldr	r3, [r7, #20]
 497:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 557              		.loc 1 497 1
 558 003a 1846     		mov	r0, r3
 559 003c 1C37     		adds	r7, r7, #28
 560              	.LCFI24:
 561              		.cfi_def_cfa_offset 4
 562 003e BD46     		mov	sp, r7
 563              	.LCFI25:
 564              		.cfi_def_cfa_register 13
 565              		@ sp needed
 566 0040 5DF8047B 		ldr	r7, [sp], #4
 567              	.LCFI26:
 568              		.cfi_restore 7
 569              		.cfi_def_cfa_offset 0
 570 0044 7047     		bx	lr
 571              		.cfi_endproc
 572              	.LFE4:
 574              		.section	.text.SEGGER_RTT_ReadNoLock,"ax",%progbits
 575              		.align	1
 576              		.global	SEGGER_RTT_ReadNoLock
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 581              	SEGGER_RTT_ReadNoLock:
 582              	.LFB5:
 498:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 499:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 20


 500:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 501:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       Public code
 502:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 503:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** **********************************************************************
 504:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 505:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 506:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 507:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_ReadNoLock()
 508:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 509:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
 510:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 511:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    which have been previously stored by the host.
 512:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Do not lock against interrupts and multiple access.
 513:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 514:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
 515:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 516:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
 517:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 518:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 519:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
 520:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Number of bytes that have been read.
 521:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 522:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadNoLock(unsigned BufferIndex, void* pData, unsigned BufferSize) {
 583              		.loc 1 522 88
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 40
 586              		@ frame_needed = 1, uses_anonymous_args = 0
 587 0000 80B5     		push	{r7, lr}
 588              	.LCFI27:
 589              		.cfi_def_cfa_offset 8
 590              		.cfi_offset 7, -8
 591              		.cfi_offset 14, -4
 592 0002 8AB0     		sub	sp, sp, #40
 593              	.LCFI28:
 594              		.cfi_def_cfa_offset 48
 595 0004 00AF     		add	r7, sp, #0
 596              	.LCFI29:
 597              		.cfi_def_cfa_register 7
 598 0006 F860     		str	r0, [r7, #12]
 599 0008 B960     		str	r1, [r7, #8]
 600 000a 7A60     		str	r2, [r7, #4]
 523:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 524:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 525:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned                RdOff;
 526:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned                WrOff;
 527:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 528:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 529:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 530:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   const char*             pSrc;
 531:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 532:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 533:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   INIT();
 601              		.loc 1 533 3
 602 000c 3C4B     		ldr	r3, .L27
 603 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 604 0010 002B     		cmp	r3, #0
 605 0012 01D1     		bne	.L22
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 21


 606              		.loc 1 533 3 is_stmt 0 discriminator 1
 607 0014 FFF7FEFF 		bl	_DoInit
 608              	.L22:
 534:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aDown[BufferIndex];
 609              		.loc 1 534 9 is_stmt 1
 610 0018 FA68     		ldr	r2, [r7, #12]
 611 001a 1346     		mov	r3, r2
 612 001c 5B00     		lsls	r3, r3, #1
 613 001e 1344     		add	r3, r3, r2
 614 0020 DB00     		lsls	r3, r3, #3
 615 0022 6033     		adds	r3, r3, #96
 616 0024 364A     		ldr	r2, .L27
 617 0026 1344     		add	r3, r3, r2
 618 0028 BB61     		str	r3, [r7, #24]
 535:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 619              		.loc 1 535 11
 620 002a BB68     		ldr	r3, [r7, #8]
 621 002c FB61     		str	r3, [r7, #28]
 536:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 622              		.loc 1 536 9
 623 002e BB69     		ldr	r3, [r7, #24]
 624 0030 1B69     		ldr	r3, [r3, #16]
 625 0032 3B62     		str	r3, [r7, #32]
 537:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 626              		.loc 1 537 9
 627 0034 BB69     		ldr	r3, [r7, #24]
 628 0036 DB68     		ldr	r3, [r3, #12]
 629 0038 7B61     		str	r3, [r7, #20]
 538:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   NumBytesRead = 0u;
 630              		.loc 1 538 16
 631 003a 0023     		movs	r3, #0
 632 003c 7B62     		str	r3, [r7, #36]
 539:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 540:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Read from current read position to wrap-around of buffer, first
 541:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 542:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (RdOff > WrOff) {
 633              		.loc 1 542 6
 634 003e 3A6A     		ldr	r2, [r7, #32]
 635 0040 7B69     		ldr	r3, [r7, #20]
 636 0042 9A42     		cmp	r2, r3
 637 0044 2AD9     		bls	.L23
 543:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 638              		.loc 1 543 24
 639 0046 BB69     		ldr	r3, [r7, #24]
 640 0048 9A68     		ldr	r2, [r3, #8]
 641              		.loc 1 543 17
 642 004a 3B6A     		ldr	r3, [r7, #32]
 643 004c D31A     		subs	r3, r2, r3
 644 004e 3B61     		str	r3, [r7, #16]
 544:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 645              		.loc 1 544 17
 646 0050 3A69     		ldr	r2, [r7, #16]
 647 0052 7B68     		ldr	r3, [r7, #4]
 648 0054 9342     		cmp	r3, r2
 649 0056 28BF     		it	cs
 650 0058 1346     		movcs	r3, r2
 651 005a 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 22


 545:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 546:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pSrc = pRing->pBuffer + RdOff;
 547:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 548:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 549:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 550:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     while (NumBytesRem--) {
 551:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 552:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     };
 553:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #else
 554:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, pRing->pBuffer + RdOff, NumBytesRem);
 652              		.loc 1 554 5
 653 005c BB69     		ldr	r3, [r7, #24]
 654 005e 5A68     		ldr	r2, [r3, #4]
 655 0060 3B6A     		ldr	r3, [r7, #32]
 656 0062 1344     		add	r3, r3, r2
 657 0064 3A69     		ldr	r2, [r7, #16]
 658 0066 1946     		mov	r1, r3
 659 0068 F869     		ldr	r0, [r7, #28]
 660 006a FFF7FEFF 		bl	memcpy
 555:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 661              		.loc 1 555 18
 662 006e 7A6A     		ldr	r2, [r7, #36]
 663 0070 3B69     		ldr	r3, [r7, #16]
 664 0072 1344     		add	r3, r3, r2
 665 0074 7B62     		str	r3, [r7, #36]
 556:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 666              		.loc 1 556 18
 667 0076 FA69     		ldr	r2, [r7, #28]
 668 0078 3B69     		ldr	r3, [r7, #16]
 669 007a 1344     		add	r3, r3, r2
 670 007c FB61     		str	r3, [r7, #28]
 557:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 671              		.loc 1 557 18
 672 007e 7A68     		ldr	r2, [r7, #4]
 673 0080 3B69     		ldr	r3, [r7, #16]
 674 0082 D31A     		subs	r3, r2, r3
 675 0084 7B60     		str	r3, [r7, #4]
 558:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 676              		.loc 1 558 18
 677 0086 3A6A     		ldr	r2, [r7, #32]
 678 0088 3B69     		ldr	r3, [r7, #16]
 679 008a 1344     		add	r3, r3, r2
 680 008c 3B62     		str	r3, [r7, #32]
 559:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 560:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
 561:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     // Handle wrap-around of buffer
 562:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
 563:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     if (RdOff == pRing->SizeOfBuffer) {
 681              		.loc 1 563 23
 682 008e BB69     		ldr	r3, [r7, #24]
 683 0090 9B68     		ldr	r3, [r3, #8]
 684              		.loc 1 563 8
 685 0092 3A6A     		ldr	r2, [r7, #32]
 686 0094 9A42     		cmp	r2, r3
 687 0096 01D1     		bne	.L23
 564:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       RdOff = 0u;
 688              		.loc 1 564 13
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 23


 689 0098 0023     		movs	r3, #0
 690 009a 3B62     		str	r3, [r7, #32]
 691              	.L23:
 565:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
 566:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
 567:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 568:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Read remaining items of buffer
 569:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 570:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   NumBytesRem = WrOff - RdOff;
 692              		.loc 1 570 15
 693 009c 7A69     		ldr	r2, [r7, #20]
 694 009e 3B6A     		ldr	r3, [r7, #32]
 695 00a0 D31A     		subs	r3, r2, r3
 696 00a2 3B61     		str	r3, [r7, #16]
 571:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 697              		.loc 1 571 15
 698 00a4 3A69     		ldr	r2, [r7, #16]
 699 00a6 7B68     		ldr	r3, [r7, #4]
 700 00a8 9342     		cmp	r3, r2
 701 00aa 28BF     		it	cs
 702 00ac 1346     		movcs	r3, r2
 703 00ae 3B61     		str	r3, [r7, #16]
 572:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 704              		.loc 1 572 6
 705 00b0 3B69     		ldr	r3, [r7, #16]
 706 00b2 002B     		cmp	r3, #0
 707 00b4 18D0     		beq	.L24
 573:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 574:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pSrc = pRing->pBuffer + RdOff;
 575:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 576:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 577:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 578:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     while (NumBytesRem--) {
 579:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 580:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     };
 581:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #else
 582:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, pRing->pBuffer + RdOff, NumBytesRem);
 708              		.loc 1 582 5
 709 00b6 BB69     		ldr	r3, [r7, #24]
 710 00b8 5A68     		ldr	r2, [r3, #4]
 711 00ba 3B6A     		ldr	r3, [r7, #32]
 712 00bc 1344     		add	r3, r3, r2
 713 00be 3A69     		ldr	r2, [r7, #16]
 714 00c0 1946     		mov	r1, r3
 715 00c2 F869     		ldr	r0, [r7, #28]
 716 00c4 FFF7FEFF 		bl	memcpy
 583:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 717              		.loc 1 583 18
 718 00c8 7A6A     		ldr	r2, [r7, #36]
 719 00ca 3B69     		ldr	r3, [r7, #16]
 720 00cc 1344     		add	r3, r3, r2
 721 00ce 7B62     		str	r3, [r7, #36]
 584:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 722              		.loc 1 584 18
 723 00d0 FA69     		ldr	r2, [r7, #28]
 724 00d2 3B69     		ldr	r3, [r7, #16]
 725 00d4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 24


 726 00d6 FB61     		str	r3, [r7, #28]
 585:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 727              		.loc 1 585 18
 728 00d8 7A68     		ldr	r2, [r7, #4]
 729 00da 3B69     		ldr	r3, [r7, #16]
 730 00dc D31A     		subs	r3, r2, r3
 731 00de 7B60     		str	r3, [r7, #4]
 586:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 732              		.loc 1 586 18
 733 00e0 3A6A     		ldr	r2, [r7, #32]
 734 00e2 3B69     		ldr	r3, [r7, #16]
 735 00e4 1344     		add	r3, r3, r2
 736 00e6 3B62     		str	r3, [r7, #32]
 737              	.L24:
 587:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 588:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
 589:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (NumBytesRead) {
 738              		.loc 1 589 6
 739 00e8 7B6A     		ldr	r3, [r7, #36]
 740 00ea 002B     		cmp	r3, #0
 741 00ec 02D0     		beq	.L25
 590:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 742              		.loc 1 590 18
 743 00ee BB69     		ldr	r3, [r7, #24]
 744 00f0 3A6A     		ldr	r2, [r7, #32]
 745 00f2 1A61     		str	r2, [r3, #16]
 746              	.L25:
 591:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
 592:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 593:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return NumBytesRead;
 747              		.loc 1 593 10
 748 00f4 7B6A     		ldr	r3, [r7, #36]
 594:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 749              		.loc 1 594 1
 750 00f6 1846     		mov	r0, r3
 751 00f8 2837     		adds	r7, r7, #40
 752              	.LCFI30:
 753              		.cfi_def_cfa_offset 8
 754 00fa BD46     		mov	sp, r7
 755              	.LCFI31:
 756              		.cfi_def_cfa_register 13
 757              		@ sp needed
 758 00fc 80BD     		pop	{r7, pc}
 759              	.L28:
 760 00fe 00BF     		.align	2
 761              	.L27:
 762 0100 00000000 		.word	_SEGGER_RTT
 763              		.cfi_endproc
 764              	.LFE5:
 766              		.section	.text.SEGGER_RTT_Read,"ax",%progbits
 767              		.align	1
 768              		.global	SEGGER_RTT_Read
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 773              	SEGGER_RTT_Read:
 774              	.LFB6:
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 25


 595:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 596:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 597:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 598:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_Read
 599:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 600:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
 601:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 602:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    which have been previously stored by the host.
 603:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 604:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
 605:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 606:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
 607:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 608:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 609:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
 610:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Number of bytes that have been read.
 611:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 612:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_Read(unsigned BufferIndex, void* pBuffer, unsigned BufferSize) {
 775              		.loc 1 612 84
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 24
 778              		@ frame_needed = 1, uses_anonymous_args = 0
 779 0000 80B5     		push	{r7, lr}
 780              	.LCFI32:
 781              		.cfi_def_cfa_offset 8
 782              		.cfi_offset 7, -8
 783              		.cfi_offset 14, -4
 784 0002 86B0     		sub	sp, sp, #24
 785              	.LCFI33:
 786              		.cfi_def_cfa_offset 32
 787 0004 00AF     		add	r7, sp, #0
 788              	.LCFI34:
 789              		.cfi_def_cfa_register 7
 790 0006 F860     		str	r0, [r7, #12]
 791 0008 B960     		str	r1, [r7, #8]
 792 000a 7A60     		str	r2, [r7, #4]
 793              	.LBB2:
 613:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned NumBytesRead;
 614:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 615:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 794              		.loc 1 615 3
 795              		.syntax unified
 796              	@ 615 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 797 000c EFF31183 		mrs   r3, basepri  
 798 0010 4FF02001 		mov   r1, #32       
 799 0014 81F31188 		msr   basepri, r1  
 800              		
 801              	@ 0 "" 2
 802              		.thumb
 803              		.syntax unified
 804 0018 7B61     		str	r3, [r7, #20]
 616:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 617:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Call the non-locking read function
 618:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 619:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   NumBytesRead = SEGGER_RTT_ReadNoLock(BufferIndex, pBuffer, BufferSize);
 805              		.loc 1 619 18
 806 001a 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 26


 807 001c B968     		ldr	r1, [r7, #8]
 808 001e F868     		ldr	r0, [r7, #12]
 809 0020 FFF7FEFF 		bl	SEGGER_RTT_ReadNoLock
 810 0024 3861     		str	r0, [r7, #16]
 620:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 621:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Finish up.
 622:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 623:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 811              		.loc 1 623 3
 812 0026 7B69     		ldr	r3, [r7, #20]
 813              		.syntax unified
 814              	@ 623 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 815 0028 83F31188 		msr   basepri, r3  
 816              		
 817              	@ 0 "" 2
 818              		.thumb
 819              		.syntax unified
 820              	.LBE2:
 624:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 625:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return NumBytesRead;
 821              		.loc 1 625 10
 822 002c 3B69     		ldr	r3, [r7, #16]
 626:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 823              		.loc 1 626 1
 824 002e 1846     		mov	r0, r3
 825 0030 1837     		adds	r7, r7, #24
 826              	.LCFI35:
 827              		.cfi_def_cfa_offset 8
 828 0032 BD46     		mov	sp, r7
 829              	.LCFI36:
 830              		.cfi_def_cfa_register 13
 831              		@ sp needed
 832 0034 80BD     		pop	{r7, pc}
 833              		.cfi_endproc
 834              	.LFE6:
 836              		.section	.text.SEGGER_RTT_WriteWithOverwriteNoLock,"ax",%progbits
 837              		.align	1
 838              		.global	SEGGER_RTT_WriteWithOverwriteNoLock
 839              		.syntax unified
 840              		.thumb
 841              		.thumb_func
 843              	SEGGER_RTT_WriteWithOverwriteNoLock:
 844              	.LFB7:
 627:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 628:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 629:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 630:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_WriteWithOverwriteNoLock
 631:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 632:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
 633:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 634:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    control block.
 635:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    SEGGER_RTT_WriteWithOverwriteNoLock does not lock the application 
 636:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    and overwrites data if the data does not fit into the buffer.
 637:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 638:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
 639:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 640:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 27


 641:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 642:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 643:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Notes
 644:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, data is overwritten.
 645:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 646:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 647:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 648:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (3) Do not use SEGGER_RTT_WriteWithOverwriteNoLock if a J-Link 
 649:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *        connection reads RTT data.
 650:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 651:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** void SEGGER_RTT_WriteWithOverwriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumByt
 845              		.loc 1 651 104
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 32
 848              		@ frame_needed = 1, uses_anonymous_args = 0
 849 0000 80B5     		push	{r7, lr}
 850              	.LCFI37:
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 7, -8
 853              		.cfi_offset 14, -4
 854 0002 88B0     		sub	sp, sp, #32
 855              	.LCFI38:
 856              		.cfi_def_cfa_offset 40
 857 0004 00AF     		add	r7, sp, #0
 858              	.LCFI39:
 859              		.cfi_def_cfa_register 7
 860 0006 F860     		str	r0, [r7, #12]
 861 0008 B960     		str	r1, [r7, #8]
 862 000a 7A60     		str	r2, [r7, #4]
 652:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   const char*           pData;
 653:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 654:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned              Avail;
 655:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 656:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   char*                 pDst;
 657:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 658:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 659:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 863              		.loc 1 659 9
 864 000c BB68     		ldr	r3, [r7, #8]
 865 000e FB61     		str	r3, [r7, #28]
 660:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 661:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Get "to-host" ring buffer and copy some elements into local variables.
 662:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 663:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 866              		.loc 1 663 9
 867 0010 FB68     		ldr	r3, [r7, #12]
 868 0012 5A1C     		adds	r2, r3, #1
 869 0014 1346     		mov	r3, r2
 870 0016 5B00     		lsls	r3, r3, #1
 871 0018 1344     		add	r3, r3, r2
 872 001a DB00     		lsls	r3, r3, #3
 873 001c 3D4A     		ldr	r2, .L41
 874 001e 1344     		add	r3, r3, r2
 875 0020 7B61     		str	r3, [r7, #20]
 664:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 665:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Check if we will overwrite data and need to adjust the RdOff.
 666:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 28


 667:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (pRing->WrOff == pRing->RdOff) {
 876              		.loc 1 667 12
 877 0022 7B69     		ldr	r3, [r7, #20]
 878 0024 DA68     		ldr	r2, [r3, #12]
 879              		.loc 1 667 28
 880 0026 7B69     		ldr	r3, [r7, #20]
 881 0028 1B69     		ldr	r3, [r3, #16]
 882              		.loc 1 667 6
 883 002a 9A42     		cmp	r2, r3
 884 002c 04D1     		bne	.L32
 668:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u;
 885              		.loc 1 668 18
 886 002e 7B69     		ldr	r3, [r7, #20]
 887 0030 9B68     		ldr	r3, [r3, #8]
 888              		.loc 1 668 11
 889 0032 013B     		subs	r3, r3, #1
 890 0034 BB61     		str	r3, [r7, #24]
 891 0036 17E0     		b	.L33
 892              	.L32:
 669:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else if ( pRing->WrOff < pRing->RdOff) {
 893              		.loc 1 669 20
 894 0038 7B69     		ldr	r3, [r7, #20]
 895 003a DA68     		ldr	r2, [r3, #12]
 896              		.loc 1 669 35
 897 003c 7B69     		ldr	r3, [r7, #20]
 898 003e 1B69     		ldr	r3, [r3, #16]
 899              		.loc 1 669 13
 900 0040 9A42     		cmp	r2, r3
 901 0042 07D2     		bcs	.L34
 670:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u;
 902              		.loc 1 670 18
 903 0044 7B69     		ldr	r3, [r7, #20]
 904 0046 1A69     		ldr	r2, [r3, #16]
 905              		.loc 1 670 33
 906 0048 7B69     		ldr	r3, [r7, #20]
 907 004a DB68     		ldr	r3, [r3, #12]
 908              		.loc 1 670 26
 909 004c D31A     		subs	r3, r2, r3
 910              		.loc 1 670 11
 911 004e 013B     		subs	r3, r3, #1
 912 0050 BB61     		str	r3, [r7, #24]
 913 0052 09E0     		b	.L33
 914              	.L34:
 671:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
 672:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u + pRing->SizeOfBuffer;
 915              		.loc 1 672 18
 916 0054 7B69     		ldr	r3, [r7, #20]
 917 0056 1A69     		ldr	r2, [r3, #16]
 918              		.loc 1 672 33
 919 0058 7B69     		ldr	r3, [r7, #20]
 920 005a DB68     		ldr	r3, [r3, #12]
 921              		.loc 1 672 26
 922 005c D21A     		subs	r2, r2, r3
 923              		.loc 1 672 53
 924 005e 7B69     		ldr	r3, [r7, #20]
 925 0060 9B68     		ldr	r3, [r3, #8]
 926              		.loc 1 672 46
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 29


 927 0062 1344     		add	r3, r3, r2
 928              		.loc 1 672 11
 929 0064 013B     		subs	r3, r3, #1
 930 0066 BB61     		str	r3, [r7, #24]
 931              	.L33:
 673:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
 674:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (NumBytes > Avail) {
 932              		.loc 1 674 6
 933 0068 7A68     		ldr	r2, [r7, #4]
 934 006a BB69     		ldr	r3, [r7, #24]
 935 006c 9A42     		cmp	r2, r3
 936 006e 15D9     		bls	.L35
 675:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing->RdOff += (NumBytes - Avail);
 937              		.loc 1 675 18
 938 0070 7B69     		ldr	r3, [r7, #20]
 939 0072 1A69     		ldr	r2, [r3, #16]
 940              		.loc 1 675 31
 941 0074 7968     		ldr	r1, [r7, #4]
 942 0076 BB69     		ldr	r3, [r7, #24]
 943 0078 CB1A     		subs	r3, r1, r3
 944              		.loc 1 675 18
 945 007a 1A44     		add	r2, r2, r3
 946 007c 7B69     		ldr	r3, [r7, #20]
 947 007e 1A61     		str	r2, [r3, #16]
 676:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 948              		.loc 1 676 11
 949 0080 06E0     		b	.L36
 950              	.L37:
 677:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       pRing->RdOff -= pRing->SizeOfBuffer;
 951              		.loc 1 677 20
 952 0082 7B69     		ldr	r3, [r7, #20]
 953 0084 1A69     		ldr	r2, [r3, #16]
 954              		.loc 1 677 28
 955 0086 7B69     		ldr	r3, [r7, #20]
 956 0088 9B68     		ldr	r3, [r3, #8]
 957              		.loc 1 677 20
 958 008a D21A     		subs	r2, r2, r3
 959 008c 7B69     		ldr	r3, [r7, #20]
 960 008e 1A61     		str	r2, [r3, #16]
 961              	.L36:
 676:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 962              		.loc 1 676 17
 963 0090 7B69     		ldr	r3, [r7, #20]
 964 0092 1A69     		ldr	r2, [r3, #16]
 676:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 965              		.loc 1 676 33
 966 0094 7B69     		ldr	r3, [r7, #20]
 967 0096 9B68     		ldr	r3, [r3, #8]
 676:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 968              		.loc 1 676 25
 969 0098 9A42     		cmp	r2, r3
 970 009a F2D2     		bcs	.L37
 971              	.L35:
 678:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
 679:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
 680:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 681:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Write all data, no need to check the RdOff, but possibly handle multiple wrap-arounds
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 30


 682:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 683:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   Avail = pRing->SizeOfBuffer - pRing->WrOff;
 972              		.loc 1 683 16
 973 009c 7B69     		ldr	r3, [r7, #20]
 974 009e 9A68     		ldr	r2, [r3, #8]
 975              		.loc 1 683 38
 976 00a0 7B69     		ldr	r3, [r7, #20]
 977 00a2 DB68     		ldr	r3, [r3, #12]
 978              		.loc 1 683 9
 979 00a4 D31A     		subs	r3, r2, r3
 980 00a6 BB61     		str	r3, [r7, #24]
 981              	.L40:
 684:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   do {
 685:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     if (Avail > NumBytes) {
 982              		.loc 1 685 8
 983 00a8 BA69     		ldr	r2, [r7, #24]
 984 00aa 7B68     		ldr	r3, [r7, #4]
 985 00ac 9A42     		cmp	r2, r3
 986 00ae 10D9     		bls	.L38
 686:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       //
 687:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       // Last round
 688:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       //
 689:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 690:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       pDst = pRing->pBuffer + pRing->WrOff;
 691:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       Avail = NumBytes;
 692:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       while (NumBytes--) {
 693:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         *pDst++ = *pData++;
 694:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       };
 695:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       pRing->WrOff += Avail;
 696:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #else
 697:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       SEGGER_RTT_MEMCPY(pRing->pBuffer + pRing->WrOff, pData, NumBytes);
 987              		.loc 1 697 7
 988 00b0 7B69     		ldr	r3, [r7, #20]
 989 00b2 5A68     		ldr	r2, [r3, #4]
 990 00b4 7B69     		ldr	r3, [r7, #20]
 991 00b6 DB68     		ldr	r3, [r3, #12]
 992 00b8 1344     		add	r3, r3, r2
 993 00ba 7A68     		ldr	r2, [r7, #4]
 994 00bc F969     		ldr	r1, [r7, #28]
 995 00be 1846     		mov	r0, r3
 996 00c0 FFF7FEFF 		bl	memcpy
 698:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 997              		.loc 1 698 20
 998 00c4 7B69     		ldr	r3, [r7, #20]
 999 00c6 DA68     		ldr	r2, [r3, #12]
 1000 00c8 7B68     		ldr	r3, [r7, #4]
 1001 00ca 1A44     		add	r2, r2, r3
 1002 00cc 7B69     		ldr	r3, [r7, #20]
 1003 00ce DA60     		str	r2, [r3, #12]
 699:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 700:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       break;
 1004              		.loc 1 700 7
 1005 00d0 1CE0     		b	.L39
 1006              	.L38:
 701:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     } else {
 702:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       //
 703:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       //  Wrap-around necessary, write until wrap-around and reset WrOff
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 31


 704:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       //
 705:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 706:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       pDst = pRing->pBuffer + pRing->WrOff;
 707:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       NumBytes -= Avail;
 708:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       while (Avail--) {
 709:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         *pDst++ = *pData++;
 710:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       };
 711:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       pRing->WrOff = 0;
 712:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #else
 713:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       SEGGER_RTT_MEMCPY(pRing->pBuffer + pRing->WrOff, pData, Avail);
 1007              		.loc 1 713 7
 1008 00d2 7B69     		ldr	r3, [r7, #20]
 1009 00d4 5A68     		ldr	r2, [r3, #4]
 1010 00d6 7B69     		ldr	r3, [r7, #20]
 1011 00d8 DB68     		ldr	r3, [r3, #12]
 1012 00da 1344     		add	r3, r3, r2
 1013 00dc BA69     		ldr	r2, [r7, #24]
 1014 00de F969     		ldr	r1, [r7, #28]
 1015 00e0 1846     		mov	r0, r3
 1016 00e2 FFF7FEFF 		bl	memcpy
 714:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       pData += Avail;
 1017              		.loc 1 714 13
 1018 00e6 FA69     		ldr	r2, [r7, #28]
 1019 00e8 BB69     		ldr	r3, [r7, #24]
 1020 00ea 1344     		add	r3, r3, r2
 1021 00ec FB61     		str	r3, [r7, #28]
 715:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       pRing->WrOff = 0;
 1022              		.loc 1 715 20
 1023 00ee 7B69     		ldr	r3, [r7, #20]
 1024 00f0 0022     		movs	r2, #0
 1025 00f2 DA60     		str	r2, [r3, #12]
 716:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       NumBytes -= Avail;
 1026              		.loc 1 716 16
 1027 00f4 7A68     		ldr	r2, [r7, #4]
 1028 00f6 BB69     		ldr	r3, [r7, #24]
 1029 00f8 D31A     		subs	r3, r2, r3
 1030 00fa 7B60     		str	r3, [r7, #4]
 717:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 718:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       Avail = (pRing->SizeOfBuffer - 1);
 1031              		.loc 1 718 21
 1032 00fc 7B69     		ldr	r3, [r7, #20]
 1033 00fe 9B68     		ldr	r3, [r3, #8]
 1034              		.loc 1 718 13
 1035 0100 013B     		subs	r3, r3, #1
 1036 0102 BB61     		str	r3, [r7, #24]
 719:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
 720:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } while (NumBytes);
 1037              		.loc 1 720 12
 1038 0104 7B68     		ldr	r3, [r7, #4]
 1039 0106 002B     		cmp	r3, #0
 1040 0108 CED1     		bne	.L40
 721:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 1041              		.loc 1 721 1
 1042 010a 00BF     		nop
 1043              	.L39:
 1044 010c 00BF     		nop
 1045 010e 2037     		adds	r7, r7, #32
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 32


 1046              	.LCFI40:
 1047              		.cfi_def_cfa_offset 8
 1048 0110 BD46     		mov	sp, r7
 1049              	.LCFI41:
 1050              		.cfi_def_cfa_register 13
 1051              		@ sp needed
 1052 0112 80BD     		pop	{r7, pc}
 1053              	.L42:
 1054              		.align	2
 1055              	.L41:
 1056 0114 00000000 		.word	_SEGGER_RTT
 1057              		.cfi_endproc
 1058              	.LFE7:
 1060              		.section	.text.SEGGER_RTT_WriteNoLock,"ax",%progbits
 1061              		.align	1
 1062              		.global	SEGGER_RTT_WriteNoLock
 1063              		.syntax unified
 1064              		.thumb
 1065              		.thumb_func
 1067              	SEGGER_RTT_WriteNoLock:
 1068              	.LFB8:
 722:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 723:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 724:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 725:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_WriteSkipNoLock
 726:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 727:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
 728:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 729:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    control block which is then read by the host.
 730:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    SEGGER_RTT_WriteSkipNoLock does not lock the application and
 731:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    skips all data, if the data does not fit into the buffer.
 732:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 733:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
 734:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 735:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 736:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 737:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                 MUST be > 0!!!
 738:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *                 This is done for performance reasons, so no initial check has do be done.
 739:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 740:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
 741:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    1: Data has been copied
 742:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    0: No space, data has not been copied
 743:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 744:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Notes
 745:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, all data is dropped.
 746:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 747:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 748:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 749:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 750:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #if (RTT_USE_ASM == 0)
 751:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteSkipNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 752:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   const char*           pData;
 753:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 754:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned              Avail;
 755:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned              RdOff;
 756:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned              WrOff;
 757:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned              Rem;
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 33


 758:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 759:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Cases:
 760:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //   1) RdOff <= WrOff => Space until wrap-around is sufficient
 761:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //   2) RdOff <= WrOff => Space after wrap-around needed (copy in 2 chunks)
 762:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //   3) RdOff <  WrOff => No space in buf
 763:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //   4) RdOff >  WrOff => Space is sufficient
 764:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //   5) RdOff >  WrOff => No space in buf
 765:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 766:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // 1) is the most common case for large buffers and assuming that J-Link reads the data fast enou
 767:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 768:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 769:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 770:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 771:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 772:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (RdOff <= WrOff) {                                 // Case 1), 2) or 3)
 773:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - WrOff - 1u;           // Space until wrap-around (assume 1 byte n
 774:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     if (Avail >= NumBytes) {                            // Case 1)?
 775:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** CopyStraight:
 776:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       memcpy(pRing->pBuffer + WrOff, pData, NumBytes);
 777:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       pRing->WrOff = WrOff + NumBytes;
 778:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       return 1;
 779:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
 780:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Avail += RdOff;                                     // Space incl. wrap-around
 781:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     if (Avail >= NumBytes) {                            // Case 2? => If not, we have case 3) (does
 782:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       Rem = pRing->SizeOfBuffer - WrOff;                // Space until end of buffer
 783:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       memcpy(pRing->pBuffer + WrOff, pData, Rem);       // Copy 1st chunk
 784:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       NumBytes -= Rem;
 785:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       //
 786:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       // Special case: First check that assumed RdOff == 0 calculated that last element before wrap
 787:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       // But 2nd check (considering space until wrap-around and until RdOff) revealed that RdOff is
 788:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       // In this case, we may use a copy straight until buffer end anyway without needing to copy 2
 789:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       // Therefore, check if 2nd memcpy is necessary at all
 790:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       //
 791:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       if (NumBytes) {
 792:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         memcpy(pRing->pBuffer, pData + Rem, NumBytes);
 793:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       }
 794:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       pRing->WrOff = NumBytes;
 795:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       return 1;
 796:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
 797:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {                                             // Potential case 4)
 798:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Avail = RdOff - WrOff - 1u;
 799:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     if (Avail >= NumBytes) {                           // Case 4)? => If not, we have case 5) (does
 800:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       goto CopyStraight;
 801:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
 802:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
 803:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return 0;     // No space in buffer
 804:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 805:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** #endif
 806:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 807:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 808:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 809:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_WriteNoLock
 810:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 811:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
 812:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 813:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    control block which is then read by the host.
 814:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    SEGGER_RTT_WriteNoLock does not lock the application.
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 34


 815:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 816:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
 817:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 818:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 819:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 820:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 821:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
 822:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 823:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 824:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Notes
 825:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
 826:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 827:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 828:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 829:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 830:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1069              		.loc 1 830 95
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 32
 1072              		@ frame_needed = 1, uses_anonymous_args = 0
 1073 0000 80B5     		push	{r7, lr}
 1074              	.LCFI42:
 1075              		.cfi_def_cfa_offset 8
 1076              		.cfi_offset 7, -8
 1077              		.cfi_offset 14, -4
 1078 0002 88B0     		sub	sp, sp, #32
 1079              	.LCFI43:
 1080              		.cfi_def_cfa_offset 40
 1081 0004 00AF     		add	r7, sp, #0
 1082              	.LCFI44:
 1083              		.cfi_def_cfa_register 7
 1084 0006 F860     		str	r0, [r7, #12]
 1085 0008 B960     		str	r1, [r7, #8]
 1086 000a 7A60     		str	r2, [r7, #4]
 831:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned              Status;
 832:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned              Avail;
 833:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   const char*           pData;
 834:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 835:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 836:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 1087              		.loc 1 836 9
 1088 000c BB68     		ldr	r3, [r7, #8]
 1089 000e BB61     		str	r3, [r7, #24]
 837:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 838:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
 839:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 840:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 1090              		.loc 1 840 9
 1091 0010 FB68     		ldr	r3, [r7, #12]
 1092 0012 5A1C     		adds	r2, r3, #1
 1093 0014 1346     		mov	r3, r2
 1094 0016 5B00     		lsls	r3, r3, #1
 1095 0018 1344     		add	r3, r3, r2
 1096 001a DB00     		lsls	r3, r3, #3
 1097 001c 1F4A     		ldr	r2, .L52
 1098 001e 1344     		add	r3, r3, r2
 1099 0020 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 35


 841:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 842:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // How we output depends upon the mode...
 843:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 844:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   switch (pRing->Flags) {
 1100              		.loc 1 844 16
 1101 0022 7B69     		ldr	r3, [r7, #20]
 1102 0024 5B69     		ldr	r3, [r3, #20]
 1103              		.loc 1 844 3
 1104 0026 022B     		cmp	r3, #2
 1105 0028 29D0     		beq	.L44
 1106 002a 022B     		cmp	r3, #2
 1107 002c 2ED8     		bhi	.L45
 1108 002e 002B     		cmp	r3, #0
 1109 0030 02D0     		beq	.L46
 1110 0032 012B     		cmp	r3, #1
 1111 0034 13D0     		beq	.L47
 1112 0036 29E0     		b	.L45
 1113              	.L46:
 845:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 846:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
 847:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     // If we are in skip mode and there is no space for the whole
 848:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     // of this output, don't bother.
 849:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
 850:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 1114              		.loc 1 850 13
 1115 0038 7869     		ldr	r0, [r7, #20]
 1116 003a FFF7FEFF 		bl	_GetAvailWriteSpace
 1117 003e 3861     		str	r0, [r7, #16]
 851:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 1118              		.loc 1 851 8
 1119 0040 3A69     		ldr	r2, [r7, #16]
 1120 0042 7B68     		ldr	r3, [r7, #4]
 1121 0044 9A42     		cmp	r2, r3
 1122 0046 02D2     		bcs	.L48
 852:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       Status = 0u;
 1123              		.loc 1 852 14
 1124 0048 0023     		movs	r3, #0
 1125 004a FB61     		str	r3, [r7, #28]
 853:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     } else {
 854:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       Status = NumBytes;
 855:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 856:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
 857:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     break;
 1126              		.loc 1 857 5
 1127 004c 21E0     		b	.L50
 1128              	.L48:
 854:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 1129              		.loc 1 854 14
 1130 004e 7B68     		ldr	r3, [r7, #4]
 1131 0050 FB61     		str	r3, [r7, #28]
 855:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
 1132              		.loc 1 855 7
 1133 0052 7A68     		ldr	r2, [r7, #4]
 1134 0054 B969     		ldr	r1, [r7, #24]
 1135 0056 7869     		ldr	r0, [r7, #20]
 1136 0058 FFF7FEFF 		bl	_WriteNoCheck
 1137              		.loc 1 857 5
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 36


 1138 005c 19E0     		b	.L50
 1139              	.L47:
 858:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
 859:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
 860:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     // If we are in trim mode, trim to what we can output without blocking.
 861:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
 862:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 1140              		.loc 1 862 13
 1141 005e 7869     		ldr	r0, [r7, #20]
 1142 0060 FFF7FEFF 		bl	_GetAvailWriteSpace
 1143 0064 3861     		str	r0, [r7, #16]
 863:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 1144              		.loc 1 863 12
 1145 0066 7A68     		ldr	r2, [r7, #4]
 1146 0068 3B69     		ldr	r3, [r7, #16]
 1147 006a 9342     		cmp	r3, r2
 1148 006c 28BF     		it	cs
 1149 006e 1346     		movcs	r3, r2
 1150 0070 FB61     		str	r3, [r7, #28]
 864:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 1151              		.loc 1 864 5
 1152 0072 FA69     		ldr	r2, [r7, #28]
 1153 0074 B969     		ldr	r1, [r7, #24]
 1154 0076 7869     		ldr	r0, [r7, #20]
 1155 0078 FFF7FEFF 		bl	_WriteNoCheck
 865:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     break;
 1156              		.loc 1 865 5
 1157 007c 09E0     		b	.L50
 1158              	.L44:
 866:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
 867:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
 868:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     // If we are in blocking mode, output everything.
 869:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
 870:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Status = _WriteBlocking(pRing, pData, NumBytes);
 1159              		.loc 1 870 14
 1160 007e 7A68     		ldr	r2, [r7, #4]
 1161 0080 B969     		ldr	r1, [r7, #24]
 1162 0082 7869     		ldr	r0, [r7, #20]
 1163 0084 FFF7FEFF 		bl	_WriteBlocking
 1164 0088 F861     		str	r0, [r7, #28]
 871:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     break;
 1165              		.loc 1 871 5
 1166 008a 02E0     		b	.L50
 1167              	.L45:
 872:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   default:
 873:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Status = 0u;
 1168              		.loc 1 873 12
 1169 008c 0023     		movs	r3, #0
 1170 008e FB61     		str	r3, [r7, #28]
 874:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     break;
 1171              		.loc 1 874 5
 1172 0090 00BF     		nop
 1173              	.L50:
 875:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
 876:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 877:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Finish up.
 878:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 37


 879:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return Status;
 1174              		.loc 1 879 10
 1175 0092 FB69     		ldr	r3, [r7, #28]
 880:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 1176              		.loc 1 880 1
 1177 0094 1846     		mov	r0, r3
 1178 0096 2037     		adds	r7, r7, #32
 1179              	.LCFI45:
 1180              		.cfi_def_cfa_offset 8
 1181 0098 BD46     		mov	sp, r7
 1182              	.LCFI46:
 1183              		.cfi_def_cfa_register 13
 1184              		@ sp needed
 1185 009a 80BD     		pop	{r7, pc}
 1186              	.L53:
 1187              		.align	2
 1188              	.L52:
 1189 009c 00000000 		.word	_SEGGER_RTT
 1190              		.cfi_endproc
 1191              	.LFE8:
 1193              		.section	.text.SEGGER_RTT_Write,"ax",%progbits
 1194              		.align	1
 1195              		.global	SEGGER_RTT_Write
 1196              		.syntax unified
 1197              		.thumb
 1198              		.thumb_func
 1200              	SEGGER_RTT_Write:
 1201              	.LFB9:
 881:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 882:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 883:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 884:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_Write
 885:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 886:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
 887:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 888:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    control block which is then read by the host.
 889:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 890:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
 891:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 892:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 893:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 894:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 895:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
 896:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 897:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 898:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Notes
 899:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
 900:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 901:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_Write(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1202              		.loc 1 901 89
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 24
 1205              		@ frame_needed = 1, uses_anonymous_args = 0
 1206 0000 80B5     		push	{r7, lr}
 1207              	.LCFI47:
 1208              		.cfi_def_cfa_offset 8
 1209              		.cfi_offset 7, -8
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 38


 1210              		.cfi_offset 14, -4
 1211 0002 86B0     		sub	sp, sp, #24
 1212              	.LCFI48:
 1213              		.cfi_def_cfa_offset 32
 1214 0004 00AF     		add	r7, sp, #0
 1215              	.LCFI49:
 1216              		.cfi_def_cfa_register 7
 1217 0006 F860     		str	r0, [r7, #12]
 1218 0008 B960     		str	r1, [r7, #8]
 1219 000a 7A60     		str	r2, [r7, #4]
 902:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned Status;
 903:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 904:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   INIT();
 1220              		.loc 1 904 3
 1221 000c 0D4B     		ldr	r3, .L57
 1222 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1223 0010 002B     		cmp	r3, #0
 1224 0012 01D1     		bne	.L55
 1225              		.loc 1 904 3 is_stmt 0 discriminator 1
 1226 0014 FFF7FEFF 		bl	_DoInit
 1227              	.L55:
 1228              	.LBB3:
 905:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1229              		.loc 1 905 3 is_stmt 1
 1230              		.syntax unified
 1231              	@ 905 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 1232 0018 EFF31183 		mrs   r3, basepri  
 1233 001c 4FF02001 		mov   r1, #32       
 1234 0020 81F31188 		msr   basepri, r1  
 1235              		
 1236              	@ 0 "" 2
 1237              		.thumb
 1238              		.syntax unified
 1239 0024 7B61     		str	r3, [r7, #20]
 906:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 907:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Call the non-locking write function
 908:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 909:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);
 1240              		.loc 1 909 12
 1241 0026 7A68     		ldr	r2, [r7, #4]
 1242 0028 B968     		ldr	r1, [r7, #8]
 1243 002a F868     		ldr	r0, [r7, #12]
 1244 002c FFF7FEFF 		bl	SEGGER_RTT_WriteNoLock
 1245 0030 3861     		str	r0, [r7, #16]
 910:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 911:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Finish up.
 912:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 913:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1246              		.loc 1 913 3
 1247 0032 7B69     		ldr	r3, [r7, #20]
 1248              		.syntax unified
 1249              	@ 913 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 1250 0034 83F31188 		msr   basepri, r3  
 1251              		
 1252              	@ 0 "" 2
 1253              		.thumb
 1254              		.syntax unified
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 39


 1255              	.LBE3:
 914:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 915:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return Status;
 1256              		.loc 1 915 10
 1257 0038 3B69     		ldr	r3, [r7, #16]
 916:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 1258              		.loc 1 916 1
 1259 003a 1846     		mov	r0, r3
 1260 003c 1837     		adds	r7, r7, #24
 1261              	.LCFI50:
 1262              		.cfi_def_cfa_offset 8
 1263 003e BD46     		mov	sp, r7
 1264              	.LCFI51:
 1265              		.cfi_def_cfa_register 13
 1266              		@ sp needed
 1267 0040 80BD     		pop	{r7, pc}
 1268              	.L58:
 1269 0042 00BF     		.align	2
 1270              	.L57:
 1271 0044 00000000 		.word	_SEGGER_RTT
 1272              		.cfi_endproc
 1273              	.LFE9:
 1275              		.section	.text.SEGGER_RTT_WriteString,"ax",%progbits
 1276              		.align	1
 1277              		.global	SEGGER_RTT_WriteString
 1278              		.syntax unified
 1279              		.thumb
 1280              		.thumb_func
 1282              	SEGGER_RTT_WriteString:
 1283              	.LFB10:
 917:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 918:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 919:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 920:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_WriteString
 921:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 922:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
 923:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Stores string in SEGGER RTT control block.
 924:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    This data is read by the host.
 925:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 926:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
 927:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 928:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    s            Pointer to string.
 929:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 930:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
 931:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 932:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 933:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Notes
 934:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
 935:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (2) String passed to this function has to be \0 terminated
 936:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (3) \0 termination character is *not* stored in RTT buffer
 937:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 938:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteString(unsigned BufferIndex, const char* s) {
 1284              		.loc 1 938 70
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 16
 1287              		@ frame_needed = 1, uses_anonymous_args = 0
 1288 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 40


 1289              	.LCFI52:
 1290              		.cfi_def_cfa_offset 8
 1291              		.cfi_offset 7, -8
 1292              		.cfi_offset 14, -4
 1293 0002 84B0     		sub	sp, sp, #16
 1294              	.LCFI53:
 1295              		.cfi_def_cfa_offset 24
 1296 0004 00AF     		add	r7, sp, #0
 1297              	.LCFI54:
 1298              		.cfi_def_cfa_register 7
 1299 0006 7860     		str	r0, [r7, #4]
 1300 0008 3960     		str	r1, [r7]
 939:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned Len;
 940:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 941:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   Len = STRLEN(s);
 1301              		.loc 1 941 9
 1302 000a 3868     		ldr	r0, [r7]
 1303 000c FFF7FEFF 		bl	strlen
 1304 0010 F860     		str	r0, [r7, #12]
 942:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return SEGGER_RTT_Write(BufferIndex, s, Len);
 1305              		.loc 1 942 10
 1306 0012 FA68     		ldr	r2, [r7, #12]
 1307 0014 3968     		ldr	r1, [r7]
 1308 0016 7868     		ldr	r0, [r7, #4]
 1309 0018 FFF7FEFF 		bl	SEGGER_RTT_Write
 1310 001c 0346     		mov	r3, r0
 943:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 1311              		.loc 1 943 1
 1312 001e 1846     		mov	r0, r3
 1313 0020 1037     		adds	r7, r7, #16
 1314              	.LCFI55:
 1315              		.cfi_def_cfa_offset 8
 1316 0022 BD46     		mov	sp, r7
 1317              	.LCFI56:
 1318              		.cfi_def_cfa_register 13
 1319              		@ sp needed
 1320 0024 80BD     		pop	{r7, pc}
 1321              		.cfi_endproc
 1322              	.LFE10:
 1324              		.section	.text.SEGGER_RTT_PutCharSkipNoLock,"ax",%progbits
 1325              		.align	1
 1326              		.global	SEGGER_RTT_PutCharSkipNoLock
 1327              		.syntax unified
 1328              		.thumb
 1329              		.thumb_func
 1331              	SEGGER_RTT_PutCharSkipNoLock:
 1332              	.LFB11:
 944:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 945:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 946:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 947:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_PutCharSkipNoLock
 948:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 949:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
 950:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
 951:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    SEGGER_RTT_PutCharSkipNoLock does not lock the application and
 952:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    skips the byte, if it does not fit into the buffer.
 953:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 41


 954:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
 955:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 956:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    c            Byte to be stored.
 957:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 958:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
 959:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 960:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 961:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Notes
 962:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, the character is dropped.
 963:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 964:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 965:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 966:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
 967:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 968:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_PutCharSkipNoLock(unsigned BufferIndex, char c) {
 1333              		.loc 1 968 69
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 24
 1336              		@ frame_needed = 1, uses_anonymous_args = 0
 1337              		@ link register save eliminated.
 1338 0000 80B4     		push	{r7}
 1339              	.LCFI57:
 1340              		.cfi_def_cfa_offset 4
 1341              		.cfi_offset 7, -4
 1342 0002 87B0     		sub	sp, sp, #28
 1343              	.LCFI58:
 1344              		.cfi_def_cfa_offset 32
 1345 0004 00AF     		add	r7, sp, #0
 1346              	.LCFI59:
 1347              		.cfi_def_cfa_register 7
 1348 0006 7860     		str	r0, [r7, #4]
 1349 0008 0B46     		mov	r3, r1
 1350 000a FB70     		strb	r3, [r7, #3]
 969:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 970:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned              WrOff;
 971:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned              Status;
 972:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 973:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
 974:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 975:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 1351              		.loc 1 975 9
 1352 000c 7B68     		ldr	r3, [r7, #4]
 1353 000e 5A1C     		adds	r2, r3, #1
 1354 0010 1346     		mov	r3, r2
 1355 0012 5B00     		lsls	r3, r3, #1
 1356 0014 1344     		add	r3, r3, r2
 1357 0016 DB00     		lsls	r3, r3, #3
 1358 0018 144A     		ldr	r2, .L66
 1359 001a 1344     		add	r3, r3, r2
 1360 001c FB60     		str	r3, [r7, #12]
 976:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 977:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
 978:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 979:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 1361              		.loc 1 979 16
 1362 001e FB68     		ldr	r3, [r7, #12]
 1363 0020 DB68     		ldr	r3, [r3, #12]
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 42


 1364              		.loc 1 979 9
 1365 0022 0133     		adds	r3, r3, #1
 1366 0024 7B61     		str	r3, [r7, #20]
 980:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 1367              		.loc 1 980 21
 1368 0026 FB68     		ldr	r3, [r7, #12]
 1369 0028 9B68     		ldr	r3, [r3, #8]
 1370              		.loc 1 980 6
 1371 002a 7A69     		ldr	r2, [r7, #20]
 1372 002c 9A42     		cmp	r2, r3
 1373 002e 01D1     		bne	.L62
 981:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     WrOff = 0;
 1374              		.loc 1 981 11
 1375 0030 0023     		movs	r3, #0
 1376 0032 7B61     		str	r3, [r7, #20]
 1377              	.L62:
 982:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
 983:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 984:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Output byte if free space is available
 985:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 986:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 1378              		.loc 1 986 21
 1379 0034 FB68     		ldr	r3, [r7, #12]
 1380 0036 1B69     		ldr	r3, [r3, #16]
 1381              		.loc 1 986 6
 1382 0038 7A69     		ldr	r2, [r7, #20]
 1383 003a 9A42     		cmp	r2, r3
 1384 003c 0CD0     		beq	.L63
 987:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing->pBuffer[pRing->WrOff] = c;
 1385              		.loc 1 987 10
 1386 003e FB68     		ldr	r3, [r7, #12]
 1387 0040 5A68     		ldr	r2, [r3, #4]
 1388              		.loc 1 987 25
 1389 0042 FB68     		ldr	r3, [r7, #12]
 1390 0044 DB68     		ldr	r3, [r3, #12]
 1391              		.loc 1 987 19
 1392 0046 1344     		add	r3, r3, r2
 1393              		.loc 1 987 34
 1394 0048 FA78     		ldrb	r2, [r7, #3]
 1395 004a 1A70     		strb	r2, [r3]
 988:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 1396              		.loc 1 988 18
 1397 004c FB68     		ldr	r3, [r7, #12]
 1398 004e 7A69     		ldr	r2, [r7, #20]
 1399 0050 DA60     		str	r2, [r3, #12]
 989:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Status = 1;
 1400              		.loc 1 989 12
 1401 0052 0123     		movs	r3, #1
 1402 0054 3B61     		str	r3, [r7, #16]
 1403 0056 01E0     		b	.L64
 1404              	.L63:
 990:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
 991:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Status = 0;
 1405              		.loc 1 991 12
 1406 0058 0023     		movs	r3, #0
 1407 005a 3B61     		str	r3, [r7, #16]
 1408              	.L64:
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 43


 992:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
 993:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
 994:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return Status;
 1409              		.loc 1 994 10
 1410 005c 3B69     		ldr	r3, [r7, #16]
 995:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 1411              		.loc 1 995 1
 1412 005e 1846     		mov	r0, r3
 1413 0060 1C37     		adds	r7, r7, #28
 1414              	.LCFI60:
 1415              		.cfi_def_cfa_offset 4
 1416 0062 BD46     		mov	sp, r7
 1417              	.LCFI61:
 1418              		.cfi_def_cfa_register 13
 1419              		@ sp needed
 1420 0064 5DF8047B 		ldr	r7, [sp], #4
 1421              	.LCFI62:
 1422              		.cfi_restore 7
 1423              		.cfi_def_cfa_offset 0
 1424 0068 7047     		bx	lr
 1425              	.L67:
 1426 006a 00BF     		.align	2
 1427              	.L66:
 1428 006c 00000000 		.word	_SEGGER_RTT
 1429              		.cfi_endproc
 1430              	.LFE11:
 1432              		.section	.text.SEGGER_RTT_PutCharSkip,"ax",%progbits
 1433              		.align	1
 1434              		.global	SEGGER_RTT_PutCharSkip
 1435              		.syntax unified
 1436              		.thumb
 1437              		.thumb_func
 1439              	SEGGER_RTT_PutCharSkip:
 1440              	.LFB12:
 996:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
 997:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 998:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
 999:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_PutCharSkip
1000:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1001:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1002:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1003:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1004:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
1005:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1006:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    c            Byte to be stored.
1007:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1008:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
1009:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1010:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1011:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Notes
1012:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, the character is dropped.
1013:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
1014:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1015:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_PutCharSkip(unsigned BufferIndex, char c) {
 1441              		.loc 1 1015 63
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 44


 1444              		@ frame_needed = 1, uses_anonymous_args = 0
 1445 0000 80B5     		push	{r7, lr}
 1446              	.LCFI63:
 1447              		.cfi_def_cfa_offset 8
 1448              		.cfi_offset 7, -8
 1449              		.cfi_offset 14, -4
 1450 0002 86B0     		sub	sp, sp, #24
 1451              	.LCFI64:
 1452              		.cfi_def_cfa_offset 32
 1453 0004 00AF     		add	r7, sp, #0
 1454              	.LCFI65:
 1455              		.cfi_def_cfa_register 7
 1456 0006 7860     		str	r0, [r7, #4]
 1457 0008 0B46     		mov	r3, r1
 1458 000a FB70     		strb	r3, [r7, #3]
1016:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
1017:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned              WrOff;
1018:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned              Status;
1019:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1020:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Prepare
1021:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1022:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   INIT();
 1459              		.loc 1 1022 3
 1460 000c 1E4B     		ldr	r3, .L74
 1461 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1462 0010 002B     		cmp	r3, #0
 1463 0012 01D1     		bne	.L69
 1464              		.loc 1 1022 3 is_stmt 0 discriminator 1
 1465 0014 FFF7FEFF 		bl	_DoInit
 1466              	.L69:
 1467              	.LBB4:
1023:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1468              		.loc 1 1023 3 is_stmt 1
 1469              		.syntax unified
 1470              	@ 1023 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 1471 0018 EFF31183 		mrs   r3, basepri  
 1472 001c 4FF02001 		mov   r1, #32       
 1473 0020 81F31188 		msr   basepri, r1  
 1474              		
 1475              	@ 0 "" 2
 1476              		.thumb
 1477              		.syntax unified
 1478 0024 FB60     		str	r3, [r7, #12]
1024:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1025:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1026:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1027:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 1479              		.loc 1 1027 9
 1480 0026 7B68     		ldr	r3, [r7, #4]
 1481 0028 5A1C     		adds	r2, r3, #1
 1482 002a 1346     		mov	r3, r2
 1483 002c 5B00     		lsls	r3, r3, #1
 1484 002e 1344     		add	r3, r3, r2
 1485 0030 DB00     		lsls	r3, r3, #3
 1486 0032 154A     		ldr	r2, .L74
 1487 0034 1344     		add	r3, r3, r2
 1488 0036 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 45


1028:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1029:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1030:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1031:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 1489              		.loc 1 1031 16
 1490 0038 BB68     		ldr	r3, [r7, #8]
 1491 003a DB68     		ldr	r3, [r3, #12]
 1492              		.loc 1 1031 9
 1493 003c 0133     		adds	r3, r3, #1
 1494 003e 7B61     		str	r3, [r7, #20]
1032:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 1495              		.loc 1 1032 21
 1496 0040 BB68     		ldr	r3, [r7, #8]
 1497 0042 9B68     		ldr	r3, [r3, #8]
 1498              		.loc 1 1032 6
 1499 0044 7A69     		ldr	r2, [r7, #20]
 1500 0046 9A42     		cmp	r2, r3
 1501 0048 01D1     		bne	.L70
1033:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     WrOff = 0;
 1502              		.loc 1 1033 11
 1503 004a 0023     		movs	r3, #0
 1504 004c 7B61     		str	r3, [r7, #20]
 1505              	.L70:
1034:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1035:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1036:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Output byte if free space is available
1037:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1038:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 1506              		.loc 1 1038 21
 1507 004e BB68     		ldr	r3, [r7, #8]
 1508 0050 1B69     		ldr	r3, [r3, #16]
 1509              		.loc 1 1038 6
 1510 0052 7A69     		ldr	r2, [r7, #20]
 1511 0054 9A42     		cmp	r2, r3
 1512 0056 0CD0     		beq	.L71
1039:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing->pBuffer[pRing->WrOff] = c;
 1513              		.loc 1 1039 10
 1514 0058 BB68     		ldr	r3, [r7, #8]
 1515 005a 5A68     		ldr	r2, [r3, #4]
 1516              		.loc 1 1039 25
 1517 005c BB68     		ldr	r3, [r7, #8]
 1518 005e DB68     		ldr	r3, [r3, #12]
 1519              		.loc 1 1039 19
 1520 0060 1344     		add	r3, r3, r2
 1521              		.loc 1 1039 34
 1522 0062 FA78     		ldrb	r2, [r7, #3]
 1523 0064 1A70     		strb	r2, [r3]
1040:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 1524              		.loc 1 1040 18
 1525 0066 BB68     		ldr	r3, [r7, #8]
 1526 0068 7A69     		ldr	r2, [r7, #20]
 1527 006a DA60     		str	r2, [r3, #12]
1041:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Status = 1;
 1528              		.loc 1 1041 12
 1529 006c 0123     		movs	r3, #1
 1530 006e 3B61     		str	r3, [r7, #16]
 1531 0070 01E0     		b	.L72
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 46


 1532              	.L71:
1042:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
1043:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Status = 0;
 1533              		.loc 1 1043 12
 1534 0072 0023     		movs	r3, #0
 1535 0074 3B61     		str	r3, [r7, #16]
 1536              	.L72:
1044:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1045:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1046:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Finish up.
1047:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1048:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1537              		.loc 1 1048 3
 1538 0076 FB68     		ldr	r3, [r7, #12]
 1539              		.syntax unified
 1540              	@ 1048 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 1541 0078 83F31188 		msr   basepri, r3  
 1542              		
 1543              	@ 0 "" 2
 1544              		.thumb
 1545              		.syntax unified
 1546              	.LBE4:
1049:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1050:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return Status;
 1547              		.loc 1 1050 10
 1548 007c 3B69     		ldr	r3, [r7, #16]
1051:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 1549              		.loc 1 1051 1
 1550 007e 1846     		mov	r0, r3
 1551 0080 1837     		adds	r7, r7, #24
 1552              	.LCFI66:
 1553              		.cfi_def_cfa_offset 8
 1554 0082 BD46     		mov	sp, r7
 1555              	.LCFI67:
 1556              		.cfi_def_cfa_register 13
 1557              		@ sp needed
 1558 0084 80BD     		pop	{r7, pc}
 1559              	.L75:
 1560 0086 00BF     		.align	2
 1561              	.L74:
 1562 0088 00000000 		.word	_SEGGER_RTT
 1563              		.cfi_endproc
 1564              	.LFE12:
 1566              		.section	.text.SEGGER_RTT_PutChar,"ax",%progbits
 1567              		.align	1
 1568              		.global	SEGGER_RTT_PutChar
 1569              		.syntax unified
 1570              		.thumb
 1571              		.thumb_func
 1573              	SEGGER_RTT_PutChar:
 1574              	.LFB13:
1052:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1053:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****  /*********************************************************************
1054:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1055:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_PutChar
1056:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1057:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 47


1058:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1059:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1060:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
1061:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1062:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    c            Byte to be stored.
1063:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1064:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
1065:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1066:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1067:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Notes
1068:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1069:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
1070:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1071:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_PutChar(unsigned BufferIndex, char c) {
 1575              		.loc 1 1071 59
 1576              		.cfi_startproc
 1577              		@ args = 0, pretend = 0, frame = 24
 1578              		@ frame_needed = 1, uses_anonymous_args = 0
 1579 0000 80B5     		push	{r7, lr}
 1580              	.LCFI68:
 1581              		.cfi_def_cfa_offset 8
 1582              		.cfi_offset 7, -8
 1583              		.cfi_offset 14, -4
 1584 0002 86B0     		sub	sp, sp, #24
 1585              	.LCFI69:
 1586              		.cfi_def_cfa_offset 32
 1587 0004 00AF     		add	r7, sp, #0
 1588              	.LCFI70:
 1589              		.cfi_def_cfa_register 7
 1590 0006 7860     		str	r0, [r7, #4]
 1591 0008 0B46     		mov	r3, r1
 1592 000a FB70     		strb	r3, [r7, #3]
1072:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
1073:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned              WrOff;
1074:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned              Status;
1075:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1076:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Prepare
1077:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1078:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   INIT();
 1593              		.loc 1 1078 3
 1594 000c 234B     		ldr	r3, .L84
 1595 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1596 0010 002B     		cmp	r3, #0
 1597 0012 01D1     		bne	.L77
 1598              		.loc 1 1078 3 is_stmt 0 discriminator 1
 1599 0014 FFF7FEFF 		bl	_DoInit
 1600              	.L77:
 1601              	.LBB5:
1079:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1602              		.loc 1 1079 3 is_stmt 1
 1603              		.syntax unified
 1604              	@ 1079 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 1605 0018 EFF31183 		mrs   r3, basepri  
 1606 001c 4FF02001 		mov   r1, #32       
 1607 0020 81F31188 		msr   basepri, r1  
 1608              		
 1609              	@ 0 "" 2
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 48


 1610              		.thumb
 1611              		.syntax unified
 1612 0024 FB60     		str	r3, [r7, #12]
1080:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1081:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1082:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1083:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 1613              		.loc 1 1083 9
 1614 0026 7B68     		ldr	r3, [r7, #4]
 1615 0028 5A1C     		adds	r2, r3, #1
 1616 002a 1346     		mov	r3, r2
 1617 002c 5B00     		lsls	r3, r3, #1
 1618 002e 1344     		add	r3, r3, r2
 1619 0030 DB00     		lsls	r3, r3, #3
 1620 0032 1A4A     		ldr	r2, .L84
 1621 0034 1344     		add	r3, r3, r2
 1622 0036 BB60     		str	r3, [r7, #8]
1084:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1085:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1086:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1087:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 1623              		.loc 1 1087 16
 1624 0038 BB68     		ldr	r3, [r7, #8]
 1625 003a DB68     		ldr	r3, [r3, #12]
 1626              		.loc 1 1087 9
 1627 003c 0133     		adds	r3, r3, #1
 1628 003e 7B61     		str	r3, [r7, #20]
1088:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 1629              		.loc 1 1088 21
 1630 0040 BB68     		ldr	r3, [r7, #8]
 1631 0042 9B68     		ldr	r3, [r3, #8]
 1632              		.loc 1 1088 6
 1633 0044 7A69     		ldr	r2, [r7, #20]
 1634 0046 9A42     		cmp	r2, r3
 1635 0048 01D1     		bne	.L78
1089:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     WrOff = 0;
 1636              		.loc 1 1089 11
 1637 004a 0023     		movs	r3, #0
 1638 004c 7B61     		str	r3, [r7, #20]
 1639              	.L78:
1090:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1091:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1092:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Wait for free space if mode is set to blocking
1093:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1094:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (pRing->Flags == SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL) {
 1640              		.loc 1 1094 12
 1641 004e BB68     		ldr	r3, [r7, #8]
 1642 0050 5B69     		ldr	r3, [r3, #20]
 1643              		.loc 1 1094 6
 1644 0052 022B     		cmp	r3, #2
 1645 0054 05D1     		bne	.L79
1095:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     while (WrOff == pRing->RdOff) {
 1646              		.loc 1 1095 11
 1647 0056 00BF     		nop
 1648              	.L80:
 1649              		.loc 1 1095 26 discriminator 1
 1650 0058 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 49


 1651 005a 1B69     		ldr	r3, [r3, #16]
 1652              		.loc 1 1095 18 discriminator 1
 1653 005c 7A69     		ldr	r2, [r7, #20]
 1654 005e 9A42     		cmp	r2, r3
 1655 0060 FAD0     		beq	.L80
 1656              	.L79:
1096:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       ;
1097:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
1098:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1099:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1100:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Output byte if free space is available
1101:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1102:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 1657              		.loc 1 1102 21
 1658 0062 BB68     		ldr	r3, [r7, #8]
 1659 0064 1B69     		ldr	r3, [r3, #16]
 1660              		.loc 1 1102 6
 1661 0066 7A69     		ldr	r2, [r7, #20]
 1662 0068 9A42     		cmp	r2, r3
 1663 006a 0CD0     		beq	.L81
1103:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing->pBuffer[pRing->WrOff] = c;
 1664              		.loc 1 1103 10
 1665 006c BB68     		ldr	r3, [r7, #8]
 1666 006e 5A68     		ldr	r2, [r3, #4]
 1667              		.loc 1 1103 25
 1668 0070 BB68     		ldr	r3, [r7, #8]
 1669 0072 DB68     		ldr	r3, [r3, #12]
 1670              		.loc 1 1103 19
 1671 0074 1344     		add	r3, r3, r2
 1672              		.loc 1 1103 34
 1673 0076 FA78     		ldrb	r2, [r7, #3]
 1674 0078 1A70     		strb	r2, [r3]
1104:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 1675              		.loc 1 1104 18
 1676 007a BB68     		ldr	r3, [r7, #8]
 1677 007c 7A69     		ldr	r2, [r7, #20]
 1678 007e DA60     		str	r2, [r3, #12]
1105:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Status = 1;
 1679              		.loc 1 1105 12
 1680 0080 0123     		movs	r3, #1
 1681 0082 3B61     		str	r3, [r7, #16]
 1682 0084 01E0     		b	.L82
 1683              	.L81:
1106:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
1107:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Status = 0;
 1684              		.loc 1 1107 12
 1685 0086 0023     		movs	r3, #0
 1686 0088 3B61     		str	r3, [r7, #16]
 1687              	.L82:
1108:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1109:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1110:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Finish up.
1111:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1112:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1688              		.loc 1 1112 3
 1689 008a FB68     		ldr	r3, [r7, #12]
 1690              		.syntax unified
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 50


 1691              	@ 1112 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 1692 008c 83F31188 		msr   basepri, r3  
 1693              		
 1694              	@ 0 "" 2
 1695              		.thumb
 1696              		.syntax unified
 1697              	.LBE5:
1113:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1114:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return Status;
 1698              		.loc 1 1114 10
 1699 0090 3B69     		ldr	r3, [r7, #16]
1115:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 1700              		.loc 1 1115 1
 1701 0092 1846     		mov	r0, r3
 1702 0094 1837     		adds	r7, r7, #24
 1703              	.LCFI71:
 1704              		.cfi_def_cfa_offset 8
 1705 0096 BD46     		mov	sp, r7
 1706              	.LCFI72:
 1707              		.cfi_def_cfa_register 13
 1708              		@ sp needed
 1709 0098 80BD     		pop	{r7, pc}
 1710              	.L85:
 1711 009a 00BF     		.align	2
 1712              	.L84:
 1713 009c 00000000 		.word	_SEGGER_RTT
 1714              		.cfi_endproc
 1715              	.LFE13:
 1717              		.section	.text.SEGGER_RTT_GetKey,"ax",%progbits
 1718              		.align	1
 1719              		.global	SEGGER_RTT_GetKey
 1720              		.syntax unified
 1721              		.thumb
 1722              		.thumb_func
 1724              	SEGGER_RTT_GetKey:
 1725              	.LFB14:
1116:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1117:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1118:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1119:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_GetKey
1120:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1121:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1122:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Reads one character from the SEGGER RTT buffer.
1123:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Host has previously stored data there.
1124:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1125:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
1126:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    <  0 -   No character available (buffer empty).
1127:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    >= 0 -   Character which has been read. (Possible values: 0 - 255)
1128:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1129:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Notes
1130:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0.
1131:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
1132:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_GetKey(void) {
 1726              		.loc 1 1132 29
 1727              		.cfi_startproc
 1728              		@ args = 0, pretend = 0, frame = 8
 1729              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 51


 1730 0000 80B5     		push	{r7, lr}
 1731              	.LCFI73:
 1732              		.cfi_def_cfa_offset 8
 1733              		.cfi_offset 7, -8
 1734              		.cfi_offset 14, -4
 1735 0002 82B0     		sub	sp, sp, #8
 1736              	.LCFI74:
 1737              		.cfi_def_cfa_offset 16
 1738 0004 00AF     		add	r7, sp, #0
 1739              	.LCFI75:
 1740              		.cfi_def_cfa_register 7
1133:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   char c;
1134:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   int r;
1135:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1136:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   r = (int)SEGGER_RTT_Read(0u, &c, 1u);
 1741              		.loc 1 1136 12
 1742 0006 FB1C     		adds	r3, r7, #3
 1743 0008 0122     		movs	r2, #1
 1744 000a 1946     		mov	r1, r3
 1745 000c 0020     		movs	r0, #0
 1746 000e FFF7FEFF 		bl	SEGGER_RTT_Read
 1747 0012 0346     		mov	r3, r0
 1748              		.loc 1 1136 5
 1749 0014 7B60     		str	r3, [r7, #4]
1137:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (r == 1) {
 1750              		.loc 1 1137 6
 1751 0016 7B68     		ldr	r3, [r7, #4]
 1752 0018 012B     		cmp	r3, #1
 1753 001a 02D1     		bne	.L87
1138:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 1754              		.loc 1 1138 9
 1755 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1756              		.loc 1 1138 7
 1757 001e 7B60     		str	r3, [r7, #4]
 1758 0020 02E0     		b	.L88
 1759              	.L87:
1139:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
1140:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r = -1;
 1760              		.loc 1 1140 7
 1761 0022 4FF0FF33 		mov	r3, #-1
 1762 0026 7B60     		str	r3, [r7, #4]
 1763              	.L88:
1141:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1142:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return r;
 1764              		.loc 1 1142 10
 1765 0028 7B68     		ldr	r3, [r7, #4]
1143:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 1766              		.loc 1 1143 1
 1767 002a 1846     		mov	r0, r3
 1768 002c 0837     		adds	r7, r7, #8
 1769              	.LCFI76:
 1770              		.cfi_def_cfa_offset 8
 1771 002e BD46     		mov	sp, r7
 1772              	.LCFI77:
 1773              		.cfi_def_cfa_register 13
 1774              		@ sp needed
 1775 0030 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 52


 1776              		.cfi_endproc
 1777              	.LFE14:
 1779              		.section	.text.SEGGER_RTT_WaitKey,"ax",%progbits
 1780              		.align	1
 1781              		.global	SEGGER_RTT_WaitKey
 1782              		.syntax unified
 1783              		.thumb
 1784              		.thumb_func
 1786              	SEGGER_RTT_WaitKey:
 1787              	.LFB15:
1144:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1145:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1146:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1147:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_WaitKey
1148:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1149:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1150:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Waits until at least one character is avaible in the SEGGER RTT buffer.
1151:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Once a character is available, it is read and this function returns.
1152:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1153:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
1154:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    >=0 -   Character which has been read.
1155:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1156:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Notes
1157:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
1158:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (2) This function is blocking if no character is present in RTT buffer
1159:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
1160:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_WaitKey(void) {
 1788              		.loc 1 1160 30
 1789              		.cfi_startproc
 1790              		@ args = 0, pretend = 0, frame = 8
 1791              		@ frame_needed = 1, uses_anonymous_args = 0
 1792 0000 80B5     		push	{r7, lr}
 1793              	.LCFI78:
 1794              		.cfi_def_cfa_offset 8
 1795              		.cfi_offset 7, -8
 1796              		.cfi_offset 14, -4
 1797 0002 82B0     		sub	sp, sp, #8
 1798              	.LCFI79:
 1799              		.cfi_def_cfa_offset 16
 1800 0004 00AF     		add	r7, sp, #0
 1801              	.LCFI80:
 1802              		.cfi_def_cfa_register 7
 1803              	.L91:
1161:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   int r;
1162:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1163:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   do {
1164:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r = SEGGER_RTT_GetKey();
 1804              		.loc 1 1164 9 discriminator 1
 1805 0006 FFF7FEFF 		bl	SEGGER_RTT_GetKey
 1806 000a 7860     		str	r0, [r7, #4]
1165:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } while (r < 0);
 1807              		.loc 1 1165 14 discriminator 1
 1808 000c 7B68     		ldr	r3, [r7, #4]
 1809 000e 002B     		cmp	r3, #0
 1810 0010 F9DB     		blt	.L91
1166:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return r;
 1811              		.loc 1 1166 10
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 53


 1812 0012 7B68     		ldr	r3, [r7, #4]
1167:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 1813              		.loc 1 1167 1
 1814 0014 1846     		mov	r0, r3
 1815 0016 0837     		adds	r7, r7, #8
 1816              	.LCFI81:
 1817              		.cfi_def_cfa_offset 8
 1818 0018 BD46     		mov	sp, r7
 1819              	.LCFI82:
 1820              		.cfi_def_cfa_register 13
 1821              		@ sp needed
 1822 001a 80BD     		pop	{r7, pc}
 1823              		.cfi_endproc
 1824              	.LFE15:
 1826              		.section	.text.SEGGER_RTT_HasKey,"ax",%progbits
 1827              		.align	1
 1828              		.global	SEGGER_RTT_HasKey
 1829              		.syntax unified
 1830              		.thumb
 1831              		.thumb_func
 1833              	SEGGER_RTT_HasKey:
 1834              	.LFB16:
1168:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1169:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1170:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1171:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_HasKey
1172:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1173:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1174:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Checks if at least one character for reading is available in the SEGGER RTT buffer.
1175:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1176:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
1177:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    == 0 -     No characters are available to read.
1178:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    == 1 -     At least one character is available.
1179:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1180:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Notes
1181:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
1182:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
1183:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_HasKey(void) {
 1835              		.loc 1 1183 29
 1836              		.cfi_startproc
 1837              		@ args = 0, pretend = 0, frame = 8
 1838              		@ frame_needed = 1, uses_anonymous_args = 0
 1839 0000 80B5     		push	{r7, lr}
 1840              	.LCFI83:
 1841              		.cfi_def_cfa_offset 8
 1842              		.cfi_offset 7, -8
 1843              		.cfi_offset 14, -4
 1844 0002 82B0     		sub	sp, sp, #8
 1845              	.LCFI84:
 1846              		.cfi_def_cfa_offset 16
 1847 0004 00AF     		add	r7, sp, #0
 1848              	.LCFI85:
 1849              		.cfi_def_cfa_register 7
1184:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned RdOff;
1185:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   int r;
1186:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1187:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   INIT();
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 54


 1850              		.loc 1 1187 3
 1851 0006 0C4B     		ldr	r3, .L98
 1852 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1853 000a 002B     		cmp	r3, #0
 1854 000c 01D1     		bne	.L94
 1855              		.loc 1 1187 3 is_stmt 0 discriminator 1
 1856 000e FFF7FEFF 		bl	_DoInit
 1857              	.L94:
1188:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   RdOff = _SEGGER_RTT.aDown[0].RdOff;
 1858              		.loc 1 1188 9 is_stmt 1
 1859 0012 094B     		ldr	r3, .L98
 1860 0014 1B6F     		ldr	r3, [r3, #112]
 1861 0016 3B60     		str	r3, [r7]
1189:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (RdOff != _SEGGER_RTT.aDown[0].WrOff) {
 1862              		.loc 1 1189 36
 1863 0018 074B     		ldr	r3, .L98
 1864 001a DB6E     		ldr	r3, [r3, #108]
 1865              		.loc 1 1189 6
 1866 001c 3A68     		ldr	r2, [r7]
 1867 001e 9A42     		cmp	r2, r3
 1868 0020 02D0     		beq	.L95
1190:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r = 1;
 1869              		.loc 1 1190 7
 1870 0022 0123     		movs	r3, #1
 1871 0024 7B60     		str	r3, [r7, #4]
 1872 0026 01E0     		b	.L96
 1873              	.L95:
1191:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
1192:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r = 0;
 1874              		.loc 1 1192 7
 1875 0028 0023     		movs	r3, #0
 1876 002a 7B60     		str	r3, [r7, #4]
 1877              	.L96:
1193:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1194:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return r;
 1878              		.loc 1 1194 10
 1879 002c 7B68     		ldr	r3, [r7, #4]
1195:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 1880              		.loc 1 1195 1
 1881 002e 1846     		mov	r0, r3
 1882 0030 0837     		adds	r7, r7, #8
 1883              	.LCFI86:
 1884              		.cfi_def_cfa_offset 8
 1885 0032 BD46     		mov	sp, r7
 1886              	.LCFI87:
 1887              		.cfi_def_cfa_register 13
 1888              		@ sp needed
 1889 0034 80BD     		pop	{r7, pc}
 1890              	.L99:
 1891 0036 00BF     		.align	2
 1892              	.L98:
 1893 0038 00000000 		.word	_SEGGER_RTT
 1894              		.cfi_endproc
 1895              	.LFE16:
 1897              		.section	.text.SEGGER_RTT_HasData,"ax",%progbits
 1898              		.align	1
 1899              		.global	SEGGER_RTT_HasData
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 55


 1900              		.syntax unified
 1901              		.thumb
 1902              		.thumb_func
 1904              	SEGGER_RTT_HasData:
 1905              	.LFB17:
1196:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1197:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1198:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1199:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_HasData
1200:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1201:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1202:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Check if there is data from the host in the given buffer.
1203:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1204:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value:
1205:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  ==0:  No data
1206:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  !=0:  Data in buffer
1207:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1208:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
1209:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_HasData(unsigned BufferIndex) {
 1906              		.loc 1 1209 51
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 16
 1909              		@ frame_needed = 1, uses_anonymous_args = 0
 1910              		@ link register save eliminated.
 1911 0000 80B4     		push	{r7}
 1912              	.LCFI88:
 1913              		.cfi_def_cfa_offset 4
 1914              		.cfi_offset 7, -4
 1915 0002 85B0     		sub	sp, sp, #20
 1916              	.LCFI89:
 1917              		.cfi_def_cfa_offset 24
 1918 0004 00AF     		add	r7, sp, #0
 1919              	.LCFI90:
 1920              		.cfi_def_cfa_register 7
 1921 0006 7860     		str	r0, [r7, #4]
1210:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
1211:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned                v;
1212:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1213:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aDown[BufferIndex];
 1922              		.loc 1 1213 9
 1923 0008 7A68     		ldr	r2, [r7, #4]
 1924 000a 1346     		mov	r3, r2
 1925 000c 5B00     		lsls	r3, r3, #1
 1926 000e 1344     		add	r3, r3, r2
 1927 0010 DB00     		lsls	r3, r3, #3
 1928 0012 6033     		adds	r3, r3, #96
 1929 0014 074A     		ldr	r2, .L102
 1930 0016 1344     		add	r3, r3, r2
 1931 0018 FB60     		str	r3, [r7, #12]
1214:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   v = pRing->WrOff;
 1932              		.loc 1 1214 5
 1933 001a FB68     		ldr	r3, [r7, #12]
 1934 001c DB68     		ldr	r3, [r3, #12]
 1935 001e BB60     		str	r3, [r7, #8]
1215:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return v - pRing->RdOff;
 1936              		.loc 1 1215 19
 1937 0020 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 56


 1938 0022 1B69     		ldr	r3, [r3, #16]
 1939              		.loc 1 1215 12
 1940 0024 BA68     		ldr	r2, [r7, #8]
 1941 0026 D31A     		subs	r3, r2, r3
1216:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 1942              		.loc 1 1216 1
 1943 0028 1846     		mov	r0, r3
 1944 002a 1437     		adds	r7, r7, #20
 1945              	.LCFI91:
 1946              		.cfi_def_cfa_offset 4
 1947 002c BD46     		mov	sp, r7
 1948              	.LCFI92:
 1949              		.cfi_def_cfa_register 13
 1950              		@ sp needed
 1951 002e 5DF8047B 		ldr	r7, [sp], #4
 1952              	.LCFI93:
 1953              		.cfi_restore 7
 1954              		.cfi_def_cfa_offset 0
 1955 0032 7047     		bx	lr
 1956              	.L103:
 1957              		.align	2
 1958              	.L102:
 1959 0034 00000000 		.word	_SEGGER_RTT
 1960              		.cfi_endproc
 1961              	.LFE17:
 1963              		.section	.text.SEGGER_RTT_HasDataUp,"ax",%progbits
 1964              		.align	1
 1965              		.global	SEGGER_RTT_HasDataUp
 1966              		.syntax unified
 1967              		.thumb
 1968              		.thumb_func
 1970              	SEGGER_RTT_HasDataUp:
 1971              	.LFB18:
1217:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1218:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1219:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1220:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_HasDataUp
1221:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1222:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1223:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Check if there is data remaining to be sent in the given buffer.
1224:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1225:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value:
1226:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  ==0:  No data
1227:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  !=0:  Data in buffer
1228:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1229:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
1230:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_HasDataUp(unsigned BufferIndex) {
 1972              		.loc 1 1230 53
 1973              		.cfi_startproc
 1974              		@ args = 0, pretend = 0, frame = 16
 1975              		@ frame_needed = 1, uses_anonymous_args = 0
 1976              		@ link register save eliminated.
 1977 0000 80B4     		push	{r7}
 1978              	.LCFI94:
 1979              		.cfi_def_cfa_offset 4
 1980              		.cfi_offset 7, -4
 1981 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 57


 1982              	.LCFI95:
 1983              		.cfi_def_cfa_offset 24
 1984 0004 00AF     		add	r7, sp, #0
 1985              	.LCFI96:
 1986              		.cfi_def_cfa_register 7
 1987 0006 7860     		str	r0, [r7, #4]
1231:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
1232:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned                v;
1233:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1234:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 1988              		.loc 1 1234 9
 1989 0008 7B68     		ldr	r3, [r7, #4]
 1990 000a 5A1C     		adds	r2, r3, #1
 1991 000c 1346     		mov	r3, r2
 1992 000e 5B00     		lsls	r3, r3, #1
 1993 0010 1344     		add	r3, r3, r2
 1994 0012 DB00     		lsls	r3, r3, #3
 1995 0014 074A     		ldr	r2, .L106
 1996 0016 1344     		add	r3, r3, r2
 1997 0018 FB60     		str	r3, [r7, #12]
1235:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   v = pRing->RdOff;
 1998              		.loc 1 1235 5
 1999 001a FB68     		ldr	r3, [r7, #12]
 2000 001c 1B69     		ldr	r3, [r3, #16]
 2001 001e BB60     		str	r3, [r7, #8]
1236:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return pRing->WrOff - v;
 2002              		.loc 1 1236 15
 2003 0020 FB68     		ldr	r3, [r7, #12]
 2004 0022 DA68     		ldr	r2, [r3, #12]
 2005              		.loc 1 1236 23
 2006 0024 BB68     		ldr	r3, [r7, #8]
 2007 0026 D31A     		subs	r3, r2, r3
1237:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 2008              		.loc 1 1237 1
 2009 0028 1846     		mov	r0, r3
 2010 002a 1437     		adds	r7, r7, #20
 2011              	.LCFI97:
 2012              		.cfi_def_cfa_offset 4
 2013 002c BD46     		mov	sp, r7
 2014              	.LCFI98:
 2015              		.cfi_def_cfa_register 13
 2016              		@ sp needed
 2017 002e 5DF8047B 		ldr	r7, [sp], #4
 2018              	.LCFI99:
 2019              		.cfi_restore 7
 2020              		.cfi_def_cfa_offset 0
 2021 0032 7047     		bx	lr
 2022              	.L107:
 2023              		.align	2
 2024              	.L106:
 2025 0034 00000000 		.word	_SEGGER_RTT
 2026              		.cfi_endproc
 2027              	.LFE18:
 2029              		.section	.text.SEGGER_RTT_AllocDownBuffer,"ax",%progbits
 2030              		.align	1
 2031              		.global	SEGGER_RTT_AllocDownBuffer
 2032              		.syntax unified
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 58


 2033              		.thumb
 2034              		.thumb_func
 2036              	SEGGER_RTT_AllocDownBuffer:
 2037              	.LFB19:
1238:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1239:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1240:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1241:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_AllocDownBuffer
1242:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1243:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1244:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of the next down-buffer (H->T).
1245:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1246:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1247:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1248:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
1249:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1250:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1251:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1252:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1253:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1254:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
1255:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
1256:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *     < 0 - Error
1257:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
1258:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_AllocDownBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flag
 2038              		.loc 1 1258 103
 2039              		.cfi_startproc
 2040              		@ args = 0, pretend = 0, frame = 24
 2041              		@ frame_needed = 1, uses_anonymous_args = 0
 2042 0000 80B5     		push	{r7, lr}
 2043              	.LCFI100:
 2044              		.cfi_def_cfa_offset 8
 2045              		.cfi_offset 7, -8
 2046              		.cfi_offset 14, -4
 2047 0002 86B0     		sub	sp, sp, #24
 2048              	.LCFI101:
 2049              		.cfi_def_cfa_offset 32
 2050 0004 00AF     		add	r7, sp, #0
 2051              	.LCFI102:
 2052              		.cfi_def_cfa_register 7
 2053 0006 F860     		str	r0, [r7, #12]
 2054 0008 B960     		str	r1, [r7, #8]
 2055 000a 7A60     		str	r2, [r7, #4]
 2056 000c 3B60     		str	r3, [r7]
1259:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   int BufferIndex;
1260:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1261:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   INIT();
 2057              		.loc 1 1261 3
 2058 000e 384B     		ldr	r3, .L117
 2059 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2060 0012 002B     		cmp	r3, #0
 2061 0014 01D1     		bne	.L109
 2062              		.loc 1 1261 3 is_stmt 0 discriminator 1
 2063 0016 FFF7FEFF 		bl	_DoInit
 2064              	.L109:
 2065              	.LBB6:
1262:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 59


 2066              		.loc 1 1262 3 is_stmt 1
 2067              		.syntax unified
 2068              	@ 1262 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 2069 001a EFF31183 		mrs   r3, basepri  
 2070 001e 4FF02001 		mov   r1, #32       
 2071 0022 81F31188 		msr   basepri, r1  
 2072              		
 2073              	@ 0 "" 2
 2074              		.thumb
 2075              		.syntax unified
 2076 0026 3B61     		str	r3, [r7, #16]
1263:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   BufferIndex = 0;
 2077              		.loc 1 1263 15
 2078 0028 0023     		movs	r3, #0
 2079 002a 7B61     		str	r3, [r7, #20]
 2080              	.L112:
1264:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   do {
1265:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     if (_SEGGER_RTT.aDown[BufferIndex].pBuffer == NULL) {
 2081              		.loc 1 1265 39
 2082 002c 3049     		ldr	r1, .L117
 2083 002e 7A69     		ldr	r2, [r7, #20]
 2084 0030 1346     		mov	r3, r2
 2085 0032 5B00     		lsls	r3, r3, #1
 2086 0034 1344     		add	r3, r3, r2
 2087 0036 DB00     		lsls	r3, r3, #3
 2088 0038 0B44     		add	r3, r3, r1
 2089 003a 6433     		adds	r3, r3, #100
 2090 003c 1B68     		ldr	r3, [r3]
 2091              		.loc 1 1265 8
 2092 003e 002B     		cmp	r3, #0
 2093 0040 08D0     		beq	.L116
1266:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       break;
1267:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
1268:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     BufferIndex++;
 2094              		.loc 1 1268 16
 2095 0042 7B69     		ldr	r3, [r7, #20]
 2096 0044 0133     		adds	r3, r3, #1
 2097 0046 7B61     		str	r3, [r7, #20]
1269:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } while (BufferIndex < _SEGGER_RTT.MaxNumDownBuffers);
 2098              		.loc 1 1269 37
 2099 0048 294B     		ldr	r3, .L117
 2100 004a 5B69     		ldr	r3, [r3, #20]
 2101              		.loc 1 1269 24
 2102 004c 7A69     		ldr	r2, [r7, #20]
 2103 004e 9A42     		cmp	r2, r3
 2104 0050 ECDB     		blt	.L112
 2105 0052 00E0     		b	.L111
 2106              	.L116:
1266:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       break;
 2107              		.loc 1 1266 7
 2108 0054 00BF     		nop
 2109              	.L111:
1270:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < _SEGGER_RTT.MaxNumDownBuffers) {
 2110              		.loc 1 1270 32
 2111 0056 264B     		ldr	r3, .L117
 2112 0058 5B69     		ldr	r3, [r3, #20]
 2113              		.loc 1 1270 6
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 60


 2114 005a 7A69     		ldr	r2, [r7, #20]
 2115 005c 9A42     		cmp	r2, r3
 2116 005e 3CDA     		bge	.L113
1271:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].sName        = sName;
 2117              		.loc 1 1271 49
 2118 0060 2349     		ldr	r1, .L117
 2119 0062 7A69     		ldr	r2, [r7, #20]
 2120 0064 1346     		mov	r3, r2
 2121 0066 5B00     		lsls	r3, r3, #1
 2122 0068 1344     		add	r3, r3, r2
 2123 006a DB00     		lsls	r3, r3, #3
 2124 006c 0B44     		add	r3, r3, r1
 2125 006e 6033     		adds	r3, r3, #96
 2126 0070 FA68     		ldr	r2, [r7, #12]
 2127 0072 1A60     		str	r2, [r3]
1272:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].pBuffer      = (char*)pBuffer;
 2128              		.loc 1 1272 49
 2129 0074 1E49     		ldr	r1, .L117
 2130 0076 7A69     		ldr	r2, [r7, #20]
 2131 0078 1346     		mov	r3, r2
 2132 007a 5B00     		lsls	r3, r3, #1
 2133 007c 1344     		add	r3, r3, r2
 2134 007e DB00     		lsls	r3, r3, #3
 2135 0080 0B44     		add	r3, r3, r1
 2136 0082 6433     		adds	r3, r3, #100
 2137 0084 BA68     		ldr	r2, [r7, #8]
 2138 0086 1A60     		str	r2, [r3]
1273:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].SizeOfBuffer = BufferSize;
 2139              		.loc 1 1273 49
 2140 0088 1949     		ldr	r1, .L117
 2141 008a 7A69     		ldr	r2, [r7, #20]
 2142 008c 1346     		mov	r3, r2
 2143 008e 5B00     		lsls	r3, r3, #1
 2144 0090 1344     		add	r3, r3, r2
 2145 0092 DB00     		lsls	r3, r3, #3
 2146 0094 0B44     		add	r3, r3, r1
 2147 0096 6833     		adds	r3, r3, #104
 2148 0098 7A68     		ldr	r2, [r7, #4]
 2149 009a 1A60     		str	r2, [r3]
1274:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].RdOff        = 0u;
 2150              		.loc 1 1274 49
 2151 009c 1449     		ldr	r1, .L117
 2152 009e 7A69     		ldr	r2, [r7, #20]
 2153 00a0 1346     		mov	r3, r2
 2154 00a2 5B00     		lsls	r3, r3, #1
 2155 00a4 1344     		add	r3, r3, r2
 2156 00a6 DB00     		lsls	r3, r3, #3
 2157 00a8 0B44     		add	r3, r3, r1
 2158 00aa 7033     		adds	r3, r3, #112
 2159 00ac 0022     		movs	r2, #0
 2160 00ae 1A60     		str	r2, [r3]
1275:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].WrOff        = 0u;
 2161              		.loc 1 1275 49
 2162 00b0 0F49     		ldr	r1, .L117
 2163 00b2 7A69     		ldr	r2, [r7, #20]
 2164 00b4 1346     		mov	r3, r2
 2165 00b6 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 61


 2166 00b8 1344     		add	r3, r3, r2
 2167 00ba DB00     		lsls	r3, r3, #3
 2168 00bc 0B44     		add	r3, r3, r1
 2169 00be 6C33     		adds	r3, r3, #108
 2170 00c0 0022     		movs	r2, #0
 2171 00c2 1A60     		str	r2, [r3]
1276:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].Flags        = Flags;
 2172              		.loc 1 1276 49
 2173 00c4 0A49     		ldr	r1, .L117
 2174 00c6 7A69     		ldr	r2, [r7, #20]
 2175 00c8 1346     		mov	r3, r2
 2176 00ca 5B00     		lsls	r3, r3, #1
 2177 00cc 1344     		add	r3, r3, r2
 2178 00ce DB00     		lsls	r3, r3, #3
 2179 00d0 0B44     		add	r3, r3, r1
 2180 00d2 7433     		adds	r3, r3, #116
 2181 00d4 3A68     		ldr	r2, [r7]
 2182 00d6 1A60     		str	r2, [r3]
 2183 00d8 02E0     		b	.L114
 2184              	.L113:
1277:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
1278:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     BufferIndex = -1;
 2185              		.loc 1 1278 17
 2186 00da 4FF0FF33 		mov	r3, #-1
 2187 00de 7B61     		str	r3, [r7, #20]
 2188              	.L114:
1279:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1280:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 2189              		.loc 1 1280 3
 2190 00e0 3B69     		ldr	r3, [r7, #16]
 2191              		.syntax unified
 2192              	@ 1280 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 2193 00e2 83F31188 		msr   basepri, r3  
 2194              		
 2195              	@ 0 "" 2
 2196              		.thumb
 2197              		.syntax unified
 2198              	.LBE6:
1281:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return BufferIndex;
 2199              		.loc 1 1281 10
 2200 00e6 7B69     		ldr	r3, [r7, #20]
1282:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 2201              		.loc 1 1282 1
 2202 00e8 1846     		mov	r0, r3
 2203 00ea 1837     		adds	r7, r7, #24
 2204              	.LCFI103:
 2205              		.cfi_def_cfa_offset 8
 2206 00ec BD46     		mov	sp, r7
 2207              	.LCFI104:
 2208              		.cfi_def_cfa_register 13
 2209              		@ sp needed
 2210 00ee 80BD     		pop	{r7, pc}
 2211              	.L118:
 2212              		.align	2
 2213              	.L117:
 2214 00f0 00000000 		.word	_SEGGER_RTT
 2215              		.cfi_endproc
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 62


 2216              	.LFE19:
 2218              		.section	.text.SEGGER_RTT_AllocUpBuffer,"ax",%progbits
 2219              		.align	1
 2220              		.global	SEGGER_RTT_AllocUpBuffer
 2221              		.syntax unified
 2222              		.thumb
 2223              		.thumb_func
 2225              	SEGGER_RTT_AllocUpBuffer:
 2226              	.LFB20:
1283:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1284:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1285:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1286:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_AllocUpBuffer
1287:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1288:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1289:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of the next up-buffer (T->H).
1290:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1291:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1292:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1293:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
1294:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1295:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1296:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1297:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1298:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1299:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
1300:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
1301:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *     < 0 - Error
1302:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
1303:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_AllocUpBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flags)
 2227              		.loc 1 1303 101
 2228              		.cfi_startproc
 2229              		@ args = 0, pretend = 0, frame = 24
 2230              		@ frame_needed = 1, uses_anonymous_args = 0
 2231 0000 80B5     		push	{r7, lr}
 2232              	.LCFI105:
 2233              		.cfi_def_cfa_offset 8
 2234              		.cfi_offset 7, -8
 2235              		.cfi_offset 14, -4
 2236 0002 86B0     		sub	sp, sp, #24
 2237              	.LCFI106:
 2238              		.cfi_def_cfa_offset 32
 2239 0004 00AF     		add	r7, sp, #0
 2240              	.LCFI107:
 2241              		.cfi_def_cfa_register 7
 2242 0006 F860     		str	r0, [r7, #12]
 2243 0008 B960     		str	r1, [r7, #8]
 2244 000a 7A60     		str	r2, [r7, #4]
 2245 000c 3B60     		str	r3, [r7]
1304:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   int BufferIndex;
1305:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1306:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   INIT();
 2246              		.loc 1 1306 3
 2247 000e 394B     		ldr	r3, .L128
 2248 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2249 0012 002B     		cmp	r3, #0
 2250 0014 01D1     		bne	.L120
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 63


 2251              		.loc 1 1306 3 is_stmt 0 discriminator 1
 2252 0016 FFF7FEFF 		bl	_DoInit
 2253              	.L120:
 2254              	.LBB7:
1307:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2255              		.loc 1 1307 3 is_stmt 1
 2256              		.syntax unified
 2257              	@ 1307 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 2258 001a EFF31183 		mrs   r3, basepri  
 2259 001e 4FF02001 		mov   r1, #32       
 2260 0022 81F31188 		msr   basepri, r1  
 2261              		
 2262              	@ 0 "" 2
 2263              		.thumb
 2264              		.syntax unified
 2265 0026 3B61     		str	r3, [r7, #16]
1308:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   BufferIndex = 0;
 2266              		.loc 1 1308 15
 2267 0028 0023     		movs	r3, #0
 2268 002a 7B61     		str	r3, [r7, #20]
 2269              	.L123:
1309:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   do {
1310:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     if (_SEGGER_RTT.aUp[BufferIndex].pBuffer == NULL) {
 2270              		.loc 1 1310 37
 2271 002c 3149     		ldr	r1, .L128
 2272 002e 7B69     		ldr	r3, [r7, #20]
 2273 0030 5A1C     		adds	r2, r3, #1
 2274 0032 1346     		mov	r3, r2
 2275 0034 5B00     		lsls	r3, r3, #1
 2276 0036 1344     		add	r3, r3, r2
 2277 0038 DB00     		lsls	r3, r3, #3
 2278 003a 0B44     		add	r3, r3, r1
 2279 003c 0433     		adds	r3, r3, #4
 2280 003e 1B68     		ldr	r3, [r3]
 2281              		.loc 1 1310 8
 2282 0040 002B     		cmp	r3, #0
 2283 0042 08D0     		beq	.L127
1311:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       break;
1312:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
1313:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     BufferIndex++;
 2284              		.loc 1 1313 16
 2285 0044 7B69     		ldr	r3, [r7, #20]
 2286 0046 0133     		adds	r3, r3, #1
 2287 0048 7B61     		str	r3, [r7, #20]
1314:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } while (BufferIndex < _SEGGER_RTT.MaxNumUpBuffers);
 2288              		.loc 1 1314 37
 2289 004a 2A4B     		ldr	r3, .L128
 2290 004c 1B69     		ldr	r3, [r3, #16]
 2291              		.loc 1 1314 24
 2292 004e 7A69     		ldr	r2, [r7, #20]
 2293 0050 9A42     		cmp	r2, r3
 2294 0052 EBDB     		blt	.L123
 2295 0054 00E0     		b	.L122
 2296              	.L127:
1311:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       break;
 2297              		.loc 1 1311 7
 2298 0056 00BF     		nop
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 64


 2299              	.L122:
1315:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < _SEGGER_RTT.MaxNumUpBuffers) {
 2300              		.loc 1 1315 32
 2301 0058 264B     		ldr	r3, .L128
 2302 005a 1B69     		ldr	r3, [r3, #16]
 2303              		.loc 1 1315 6
 2304 005c 7A69     		ldr	r2, [r7, #20]
 2305 005e 9A42     		cmp	r2, r3
 2306 0060 3DDA     		bge	.L124
1316:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].sName        = sName;
 2307              		.loc 1 1316 47
 2308 0062 2449     		ldr	r1, .L128
 2309 0064 7B69     		ldr	r3, [r7, #20]
 2310 0066 5A1C     		adds	r2, r3, #1
 2311 0068 1346     		mov	r3, r2
 2312 006a 5B00     		lsls	r3, r3, #1
 2313 006c 1344     		add	r3, r3, r2
 2314 006e DB00     		lsls	r3, r3, #3
 2315 0070 0B44     		add	r3, r3, r1
 2316 0072 FA68     		ldr	r2, [r7, #12]
 2317 0074 1A60     		str	r2, [r3]
1317:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].pBuffer      = (char*)pBuffer;
 2318              		.loc 1 1317 47
 2319 0076 1F49     		ldr	r1, .L128
 2320 0078 7B69     		ldr	r3, [r7, #20]
 2321 007a 5A1C     		adds	r2, r3, #1
 2322 007c 1346     		mov	r3, r2
 2323 007e 5B00     		lsls	r3, r3, #1
 2324 0080 1344     		add	r3, r3, r2
 2325 0082 DB00     		lsls	r3, r3, #3
 2326 0084 0B44     		add	r3, r3, r1
 2327 0086 0433     		adds	r3, r3, #4
 2328 0088 BA68     		ldr	r2, [r7, #8]
 2329 008a 1A60     		str	r2, [r3]
1318:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].SizeOfBuffer = BufferSize;
 2330              		.loc 1 1318 47
 2331 008c 1949     		ldr	r1, .L128
 2332 008e 7A69     		ldr	r2, [r7, #20]
 2333 0090 1346     		mov	r3, r2
 2334 0092 5B00     		lsls	r3, r3, #1
 2335 0094 1344     		add	r3, r3, r2
 2336 0096 DB00     		lsls	r3, r3, #3
 2337 0098 0B44     		add	r3, r3, r1
 2338 009a 2033     		adds	r3, r3, #32
 2339 009c 7A68     		ldr	r2, [r7, #4]
 2340 009e 1A60     		str	r2, [r3]
1319:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].RdOff        = 0u;
 2341              		.loc 1 1319 47
 2342 00a0 1449     		ldr	r1, .L128
 2343 00a2 7A69     		ldr	r2, [r7, #20]
 2344 00a4 1346     		mov	r3, r2
 2345 00a6 5B00     		lsls	r3, r3, #1
 2346 00a8 1344     		add	r3, r3, r2
 2347 00aa DB00     		lsls	r3, r3, #3
 2348 00ac 0B44     		add	r3, r3, r1
 2349 00ae 2833     		adds	r3, r3, #40
 2350 00b0 0022     		movs	r2, #0
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 65


 2351 00b2 1A60     		str	r2, [r3]
1320:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].WrOff        = 0u;
 2352              		.loc 1 1320 47
 2353 00b4 0F49     		ldr	r1, .L128
 2354 00b6 7A69     		ldr	r2, [r7, #20]
 2355 00b8 1346     		mov	r3, r2
 2356 00ba 5B00     		lsls	r3, r3, #1
 2357 00bc 1344     		add	r3, r3, r2
 2358 00be DB00     		lsls	r3, r3, #3
 2359 00c0 0B44     		add	r3, r3, r1
 2360 00c2 2433     		adds	r3, r3, #36
 2361 00c4 0022     		movs	r2, #0
 2362 00c6 1A60     		str	r2, [r3]
1321:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].Flags        = Flags;
 2363              		.loc 1 1321 47
 2364 00c8 0A49     		ldr	r1, .L128
 2365 00ca 7A69     		ldr	r2, [r7, #20]
 2366 00cc 1346     		mov	r3, r2
 2367 00ce 5B00     		lsls	r3, r3, #1
 2368 00d0 1344     		add	r3, r3, r2
 2369 00d2 DB00     		lsls	r3, r3, #3
 2370 00d4 0B44     		add	r3, r3, r1
 2371 00d6 2C33     		adds	r3, r3, #44
 2372 00d8 3A68     		ldr	r2, [r7]
 2373 00da 1A60     		str	r2, [r3]
 2374 00dc 02E0     		b	.L125
 2375              	.L124:
1322:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
1323:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     BufferIndex = -1;
 2376              		.loc 1 1323 17
 2377 00de 4FF0FF33 		mov	r3, #-1
 2378 00e2 7B61     		str	r3, [r7, #20]
 2379              	.L125:
1324:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1325:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 2380              		.loc 1 1325 3
 2381 00e4 3B69     		ldr	r3, [r7, #16]
 2382              		.syntax unified
 2383              	@ 1325 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 2384 00e6 83F31188 		msr   basepri, r3  
 2385              		
 2386              	@ 0 "" 2
 2387              		.thumb
 2388              		.syntax unified
 2389              	.LBE7:
1326:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return BufferIndex;
 2390              		.loc 1 1326 10
 2391 00ea 7B69     		ldr	r3, [r7, #20]
1327:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 2392              		.loc 1 1327 1
 2393 00ec 1846     		mov	r0, r3
 2394 00ee 1837     		adds	r7, r7, #24
 2395              	.LCFI108:
 2396              		.cfi_def_cfa_offset 8
 2397 00f0 BD46     		mov	sp, r7
 2398              	.LCFI109:
 2399              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 66


 2400              		@ sp needed
 2401 00f2 80BD     		pop	{r7, pc}
 2402              	.L129:
 2403              		.align	2
 2404              	.L128:
 2405 00f4 00000000 		.word	_SEGGER_RTT
 2406              		.cfi_endproc
 2407              	.LFE20:
 2409              		.section	.text.SEGGER_RTT_ConfigUpBuffer,"ax",%progbits
 2410              		.align	1
 2411              		.global	SEGGER_RTT_ConfigUpBuffer
 2412              		.syntax unified
 2413              		.thumb
 2414              		.thumb_func
 2416              	SEGGER_RTT_ConfigUpBuffer:
 2417              	.LFB21:
1328:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1329:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1330:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1331:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_ConfigUpBuffer
1332:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1333:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1334:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer (T->H).
1335:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1336:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1337:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1338:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
1339:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1340:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1341:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1342:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1343:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1344:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1345:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
1346:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    >= 0 - O.K.
1347:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *     < 0 - Error
1348:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1349:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Additional information
1350:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1351:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    May only be called once per buffer.
1352:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1353:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
1354:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_ConfigUpBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Buff
 2418              		.loc 1 1354 124
 2419              		.cfi_startproc
 2420              		@ args = 4, pretend = 0, frame = 24
 2421              		@ frame_needed = 1, uses_anonymous_args = 0
 2422 0000 80B5     		push	{r7, lr}
 2423              	.LCFI110:
 2424              		.cfi_def_cfa_offset 8
 2425              		.cfi_offset 7, -8
 2426              		.cfi_offset 14, -4
 2427 0002 86B0     		sub	sp, sp, #24
 2428              	.LCFI111:
 2429              		.cfi_def_cfa_offset 32
 2430 0004 00AF     		add	r7, sp, #0
 2431              	.LCFI112:
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 67


 2432              		.cfi_def_cfa_register 7
 2433 0006 F860     		str	r0, [r7, #12]
 2434 0008 B960     		str	r1, [r7, #8]
 2435 000a 7A60     		str	r2, [r7, #4]
 2436 000c 3B60     		str	r3, [r7]
1355:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   int r;
1356:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1357:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   INIT();
 2437              		.loc 1 1357 3
 2438 000e 304B     		ldr	r3, .L136
 2439 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2440 0012 002B     		cmp	r3, #0
 2441 0014 01D1     		bne	.L131
 2442              		.loc 1 1357 3 is_stmt 0 discriminator 1
 2443 0016 FFF7FEFF 		bl	_DoInit
 2444              	.L131:
1358:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumUpBuffers) {
 2445              		.loc 1 1358 42 is_stmt 1
 2446 001a 2D4B     		ldr	r3, .L136
 2447 001c 1B69     		ldr	r3, [r3, #16]
 2448              		.loc 1 1358 21
 2449 001e 1A46     		mov	r2, r3
 2450              		.loc 1 1358 6
 2451 0020 FB68     		ldr	r3, [r7, #12]
 2452 0022 9342     		cmp	r3, r2
 2453 0024 4CD2     		bcs	.L132
 2454              	.LBB8:
1359:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2455              		.loc 1 1359 5
 2456              		.syntax unified
 2457              	@ 1359 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 2458 0026 EFF31183 		mrs   r3, basepri  
 2459 002a 4FF02001 		mov   r1, #32       
 2460 002e 81F31188 		msr   basepri, r1  
 2461              		
 2462              	@ 0 "" 2
 2463              		.thumb
 2464              		.syntax unified
 2465 0032 3B61     		str	r3, [r7, #16]
1360:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     if (BufferIndex > 0u) {
 2466              		.loc 1 1360 8
 2467 0034 FB68     		ldr	r3, [r7, #12]
 2468 0036 002B     		cmp	r3, #0
 2469 0038 32D0     		beq	.L133
1361:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].sName        = sName;
 2470              		.loc 1 1361 49
 2471 003a 2549     		ldr	r1, .L136
 2472 003c FB68     		ldr	r3, [r7, #12]
 2473 003e 5A1C     		adds	r2, r3, #1
 2474 0040 1346     		mov	r3, r2
 2475 0042 5B00     		lsls	r3, r3, #1
 2476 0044 1344     		add	r3, r3, r2
 2477 0046 DB00     		lsls	r3, r3, #3
 2478 0048 0B44     		add	r3, r3, r1
 2479 004a BA68     		ldr	r2, [r7, #8]
 2480 004c 1A60     		str	r2, [r3]
1362:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].pBuffer      = (char*)pBuffer;
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 68


 2481              		.loc 1 1362 49
 2482 004e 2049     		ldr	r1, .L136
 2483 0050 FB68     		ldr	r3, [r7, #12]
 2484 0052 5A1C     		adds	r2, r3, #1
 2485 0054 1346     		mov	r3, r2
 2486 0056 5B00     		lsls	r3, r3, #1
 2487 0058 1344     		add	r3, r3, r2
 2488 005a DB00     		lsls	r3, r3, #3
 2489 005c 0B44     		add	r3, r3, r1
 2490 005e 0433     		adds	r3, r3, #4
 2491 0060 7A68     		ldr	r2, [r7, #4]
 2492 0062 1A60     		str	r2, [r3]
1363:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].SizeOfBuffer = BufferSize;
 2493              		.loc 1 1363 49
 2494 0064 1A49     		ldr	r1, .L136
 2495 0066 FA68     		ldr	r2, [r7, #12]
 2496 0068 1346     		mov	r3, r2
 2497 006a 5B00     		lsls	r3, r3, #1
 2498 006c 1344     		add	r3, r3, r2
 2499 006e DB00     		lsls	r3, r3, #3
 2500 0070 0B44     		add	r3, r3, r1
 2501 0072 2033     		adds	r3, r3, #32
 2502 0074 3A68     		ldr	r2, [r7]
 2503 0076 1A60     		str	r2, [r3]
1364:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].RdOff        = 0u;
 2504              		.loc 1 1364 49
 2505 0078 1549     		ldr	r1, .L136
 2506 007a FA68     		ldr	r2, [r7, #12]
 2507 007c 1346     		mov	r3, r2
 2508 007e 5B00     		lsls	r3, r3, #1
 2509 0080 1344     		add	r3, r3, r2
 2510 0082 DB00     		lsls	r3, r3, #3
 2511 0084 0B44     		add	r3, r3, r1
 2512 0086 2833     		adds	r3, r3, #40
 2513 0088 0022     		movs	r2, #0
 2514 008a 1A60     		str	r2, [r3]
1365:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].WrOff        = 0u;
 2515              		.loc 1 1365 49
 2516 008c 1049     		ldr	r1, .L136
 2517 008e FA68     		ldr	r2, [r7, #12]
 2518 0090 1346     		mov	r3, r2
 2519 0092 5B00     		lsls	r3, r3, #1
 2520 0094 1344     		add	r3, r3, r2
 2521 0096 DB00     		lsls	r3, r3, #3
 2522 0098 0B44     		add	r3, r3, r1
 2523 009a 2433     		adds	r3, r3, #36
 2524 009c 0022     		movs	r2, #0
 2525 009e 1A60     		str	r2, [r3]
 2526              	.L133:
1366:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
1367:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].Flags          = Flags;
 2527              		.loc 1 1367 49
 2528 00a0 0B49     		ldr	r1, .L136
 2529 00a2 FA68     		ldr	r2, [r7, #12]
 2530 00a4 1346     		mov	r3, r2
 2531 00a6 5B00     		lsls	r3, r3, #1
 2532 00a8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 69


 2533 00aa DB00     		lsls	r3, r3, #3
 2534 00ac 0B44     		add	r3, r3, r1
 2535 00ae 2C33     		adds	r3, r3, #44
 2536 00b0 3A6A     		ldr	r2, [r7, #32]
 2537 00b2 1A60     		str	r2, [r3]
1368:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2538              		.loc 1 1368 5
 2539 00b4 3B69     		ldr	r3, [r7, #16]
 2540              		.syntax unified
 2541              	@ 1368 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 2542 00b6 83F31188 		msr   basepri, r3  
 2543              		
 2544              	@ 0 "" 2
 2545              		.thumb
 2546              		.syntax unified
 2547              	.LBE8:
1369:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r =  0;
 2548              		.loc 1 1369 7
 2549 00ba 0023     		movs	r3, #0
 2550 00bc 7B61     		str	r3, [r7, #20]
 2551 00be 02E0     		b	.L134
 2552              	.L132:
1370:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
1371:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r = -1;
 2553              		.loc 1 1371 7
 2554 00c0 4FF0FF33 		mov	r3, #-1
 2555 00c4 7B61     		str	r3, [r7, #20]
 2556              	.L134:
1372:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1373:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return r;
 2557              		.loc 1 1373 10
 2558 00c6 7B69     		ldr	r3, [r7, #20]
1374:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 2559              		.loc 1 1374 1
 2560 00c8 1846     		mov	r0, r3
 2561 00ca 1837     		adds	r7, r7, #24
 2562              	.LCFI113:
 2563              		.cfi_def_cfa_offset 8
 2564 00cc BD46     		mov	sp, r7
 2565              	.LCFI114:
 2566              		.cfi_def_cfa_register 13
 2567              		@ sp needed
 2568 00ce 80BD     		pop	{r7, pc}
 2569              	.L137:
 2570              		.align	2
 2571              	.L136:
 2572 00d0 00000000 		.word	_SEGGER_RTT
 2573              		.cfi_endproc
 2574              	.LFE21:
 2576              		.section	.text.SEGGER_RTT_ConfigDownBuffer,"ax",%progbits
 2577              		.align	1
 2578              		.global	SEGGER_RTT_ConfigDownBuffer
 2579              		.syntax unified
 2580              		.thumb
 2581              		.thumb_func
 2583              	SEGGER_RTT_ConfigDownBuffer:
 2584              	.LFB22:
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 70


1375:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1376:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1377:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1378:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_ConfigDownBuffer
1379:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1380:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1381:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of a specific down-buffer (H->T).
1382:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1383:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1384:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1385:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
1386:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1387:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1388:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1389:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1390:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1391:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1392:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
1393:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1394:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *     < 0  Error
1395:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1396:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Additional information
1397:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1398:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    May only be called once per buffer.
1399:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1400:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
1401:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_ConfigDownBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Bu
 2585              		.loc 1 1401 126
 2586              		.cfi_startproc
 2587              		@ args = 4, pretend = 0, frame = 24
 2588              		@ frame_needed = 1, uses_anonymous_args = 0
 2589 0000 80B5     		push	{r7, lr}
 2590              	.LCFI115:
 2591              		.cfi_def_cfa_offset 8
 2592              		.cfi_offset 7, -8
 2593              		.cfi_offset 14, -4
 2594 0002 86B0     		sub	sp, sp, #24
 2595              	.LCFI116:
 2596              		.cfi_def_cfa_offset 32
 2597 0004 00AF     		add	r7, sp, #0
 2598              	.LCFI117:
 2599              		.cfi_def_cfa_register 7
 2600 0006 F860     		str	r0, [r7, #12]
 2601 0008 B960     		str	r1, [r7, #8]
 2602 000a 7A60     		str	r2, [r7, #4]
 2603 000c 3B60     		str	r3, [r7]
1402:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   int r;
1403:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1404:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   INIT();
 2604              		.loc 1 1404 3
 2605 000e 304B     		ldr	r3, .L144
 2606 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2607 0012 002B     		cmp	r3, #0
 2608 0014 01D1     		bne	.L139
 2609              		.loc 1 1404 3 is_stmt 0 discriminator 1
 2610 0016 FFF7FEFF 		bl	_DoInit
 2611              	.L139:
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 71


1405:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumDownBuffers) {
 2612              		.loc 1 1405 42 is_stmt 1
 2613 001a 2D4B     		ldr	r3, .L144
 2614 001c 5B69     		ldr	r3, [r3, #20]
 2615              		.loc 1 1405 21
 2616 001e 1A46     		mov	r2, r3
 2617              		.loc 1 1405 6
 2618 0020 FB68     		ldr	r3, [r7, #12]
 2619 0022 9342     		cmp	r3, r2
 2620 0024 4BD2     		bcs	.L140
 2621              	.LBB9:
1406:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2622              		.loc 1 1406 5
 2623              		.syntax unified
 2624              	@ 1406 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 2625 0026 EFF31183 		mrs   r3, basepri  
 2626 002a 4FF02001 		mov   r1, #32       
 2627 002e 81F31188 		msr   basepri, r1  
 2628              		
 2629              	@ 0 "" 2
 2630              		.thumb
 2631              		.syntax unified
 2632 0032 3B61     		str	r3, [r7, #16]
1407:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     if (BufferIndex > 0u) {
 2633              		.loc 1 1407 8
 2634 0034 FB68     		ldr	r3, [r7, #12]
 2635 0036 002B     		cmp	r3, #0
 2636 0038 31D0     		beq	.L141
1408:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].sName        = sName;
 2637              		.loc 1 1408 51
 2638 003a 2549     		ldr	r1, .L144
 2639 003c FA68     		ldr	r2, [r7, #12]
 2640 003e 1346     		mov	r3, r2
 2641 0040 5B00     		lsls	r3, r3, #1
 2642 0042 1344     		add	r3, r3, r2
 2643 0044 DB00     		lsls	r3, r3, #3
 2644 0046 0B44     		add	r3, r3, r1
 2645 0048 6033     		adds	r3, r3, #96
 2646 004a BA68     		ldr	r2, [r7, #8]
 2647 004c 1A60     		str	r2, [r3]
1409:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].pBuffer      = (char*)pBuffer;
 2648              		.loc 1 1409 51
 2649 004e 2049     		ldr	r1, .L144
 2650 0050 FA68     		ldr	r2, [r7, #12]
 2651 0052 1346     		mov	r3, r2
 2652 0054 5B00     		lsls	r3, r3, #1
 2653 0056 1344     		add	r3, r3, r2
 2654 0058 DB00     		lsls	r3, r3, #3
 2655 005a 0B44     		add	r3, r3, r1
 2656 005c 6433     		adds	r3, r3, #100
 2657 005e 7A68     		ldr	r2, [r7, #4]
 2658 0060 1A60     		str	r2, [r3]
1410:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].SizeOfBuffer = BufferSize;
 2659              		.loc 1 1410 51
 2660 0062 1B49     		ldr	r1, .L144
 2661 0064 FA68     		ldr	r2, [r7, #12]
 2662 0066 1346     		mov	r3, r2
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 72


 2663 0068 5B00     		lsls	r3, r3, #1
 2664 006a 1344     		add	r3, r3, r2
 2665 006c DB00     		lsls	r3, r3, #3
 2666 006e 0B44     		add	r3, r3, r1
 2667 0070 6833     		adds	r3, r3, #104
 2668 0072 3A68     		ldr	r2, [r7]
 2669 0074 1A60     		str	r2, [r3]
1411:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].RdOff        = 0u;
 2670              		.loc 1 1411 51
 2671 0076 1649     		ldr	r1, .L144
 2672 0078 FA68     		ldr	r2, [r7, #12]
 2673 007a 1346     		mov	r3, r2
 2674 007c 5B00     		lsls	r3, r3, #1
 2675 007e 1344     		add	r3, r3, r2
 2676 0080 DB00     		lsls	r3, r3, #3
 2677 0082 0B44     		add	r3, r3, r1
 2678 0084 7033     		adds	r3, r3, #112
 2679 0086 0022     		movs	r2, #0
 2680 0088 1A60     		str	r2, [r3]
1412:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].WrOff        = 0u;
 2681              		.loc 1 1412 51
 2682 008a 1149     		ldr	r1, .L144
 2683 008c FA68     		ldr	r2, [r7, #12]
 2684 008e 1346     		mov	r3, r2
 2685 0090 5B00     		lsls	r3, r3, #1
 2686 0092 1344     		add	r3, r3, r2
 2687 0094 DB00     		lsls	r3, r3, #3
 2688 0096 0B44     		add	r3, r3, r1
 2689 0098 6C33     		adds	r3, r3, #108
 2690 009a 0022     		movs	r2, #0
 2691 009c 1A60     		str	r2, [r3]
 2692              	.L141:
1413:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
1414:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].Flags          = Flags;
 2693              		.loc 1 1414 51
 2694 009e 0C49     		ldr	r1, .L144
 2695 00a0 FA68     		ldr	r2, [r7, #12]
 2696 00a2 1346     		mov	r3, r2
 2697 00a4 5B00     		lsls	r3, r3, #1
 2698 00a6 1344     		add	r3, r3, r2
 2699 00a8 DB00     		lsls	r3, r3, #3
 2700 00aa 0B44     		add	r3, r3, r1
 2701 00ac 7433     		adds	r3, r3, #116
 2702 00ae 3A6A     		ldr	r2, [r7, #32]
 2703 00b0 1A60     		str	r2, [r3]
1415:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2704              		.loc 1 1415 5
 2705 00b2 3B69     		ldr	r3, [r7, #16]
 2706              		.syntax unified
 2707              	@ 1415 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 2708 00b4 83F31188 		msr   basepri, r3  
 2709              		
 2710              	@ 0 "" 2
 2711              		.thumb
 2712              		.syntax unified
 2713              	.LBE9:
1416:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r =  0;
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 73


 2714              		.loc 1 1416 7
 2715 00b8 0023     		movs	r3, #0
 2716 00ba 7B61     		str	r3, [r7, #20]
 2717 00bc 02E0     		b	.L142
 2718              	.L140:
1417:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
1418:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r = -1;
 2719              		.loc 1 1418 7
 2720 00be 4FF0FF33 		mov	r3, #-1
 2721 00c2 7B61     		str	r3, [r7, #20]
 2722              	.L142:
1419:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1420:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return r;
 2723              		.loc 1 1420 10
 2724 00c4 7B69     		ldr	r3, [r7, #20]
1421:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 2725              		.loc 1 1421 1
 2726 00c6 1846     		mov	r0, r3
 2727 00c8 1837     		adds	r7, r7, #24
 2728              	.LCFI118:
 2729              		.cfi_def_cfa_offset 8
 2730 00ca BD46     		mov	sp, r7
 2731              	.LCFI119:
 2732              		.cfi_def_cfa_register 13
 2733              		@ sp needed
 2734 00cc 80BD     		pop	{r7, pc}
 2735              	.L145:
 2736 00ce 00BF     		.align	2
 2737              	.L144:
 2738 00d0 00000000 		.word	_SEGGER_RTT
 2739              		.cfi_endproc
 2740              	.LFE22:
 2742              		.section	.text.SEGGER_RTT_SetNameUpBuffer,"ax",%progbits
 2743              		.align	1
 2744              		.global	SEGGER_RTT_SetNameUpBuffer
 2745              		.syntax unified
 2746              		.thumb
 2747              		.thumb_func
 2749              	SEGGER_RTT_SetNameUpBuffer:
 2750              	.LFB23:
1422:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1423:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1424:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1425:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_SetNameUpBuffer
1426:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1427:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1428:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer name (T->H).
1429:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1430:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1431:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
1432:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1433:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1434:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1435:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
1436:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1437:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *     < 0  Error
1438:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 74


1439:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_SetNameUpBuffer(unsigned BufferIndex, const char* sName) {
 2751              		.loc 1 1439 73
 2752              		.cfi_startproc
 2753              		@ args = 0, pretend = 0, frame = 16
 2754              		@ frame_needed = 1, uses_anonymous_args = 0
 2755 0000 80B5     		push	{r7, lr}
 2756              	.LCFI120:
 2757              		.cfi_def_cfa_offset 8
 2758              		.cfi_offset 7, -8
 2759              		.cfi_offset 14, -4
 2760 0002 84B0     		sub	sp, sp, #16
 2761              	.LCFI121:
 2762              		.cfi_def_cfa_offset 24
 2763 0004 00AF     		add	r7, sp, #0
 2764              	.LCFI122:
 2765              		.cfi_def_cfa_register 7
 2766 0006 7860     		str	r0, [r7, #4]
 2767 0008 3960     		str	r1, [r7]
1440:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   int r;
1441:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1442:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   INIT();
 2768              		.loc 1 1442 3
 2769 000a 154B     		ldr	r3, .L151
 2770 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2771 000e 002B     		cmp	r3, #0
 2772 0010 01D1     		bne	.L147
 2773              		.loc 1 1442 3 is_stmt 0 discriminator 1
 2774 0012 FFF7FEFF 		bl	_DoInit
 2775              	.L147:
1443:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumUpBuffers) {
 2776              		.loc 1 1443 42 is_stmt 1
 2777 0016 124B     		ldr	r3, .L151
 2778 0018 1B69     		ldr	r3, [r3, #16]
 2779              		.loc 1 1443 21
 2780 001a 1A46     		mov	r2, r3
 2781              		.loc 1 1443 6
 2782 001c 7B68     		ldr	r3, [r7, #4]
 2783 001e 9342     		cmp	r3, r2
 2784 0020 16D2     		bcs	.L148
 2785              	.LBB10:
1444:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2786              		.loc 1 1444 5
 2787              		.syntax unified
 2788              	@ 1444 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 2789 0022 EFF31183 		mrs   r3, basepri  
 2790 0026 4FF02001 		mov   r1, #32       
 2791 002a 81F31188 		msr   basepri, r1  
 2792              		
 2793              	@ 0 "" 2
 2794              		.thumb
 2795              		.syntax unified
 2796 002e BB60     		str	r3, [r7, #8]
1445:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].sName = sName;
 2797              		.loc 1 1445 40
 2798 0030 0B49     		ldr	r1, .L151
 2799 0032 7B68     		ldr	r3, [r7, #4]
 2800 0034 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 75


 2801 0036 1346     		mov	r3, r2
 2802 0038 5B00     		lsls	r3, r3, #1
 2803 003a 1344     		add	r3, r3, r2
 2804 003c DB00     		lsls	r3, r3, #3
 2805 003e 0B44     		add	r3, r3, r1
 2806 0040 3A68     		ldr	r2, [r7]
 2807 0042 1A60     		str	r2, [r3]
1446:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2808              		.loc 1 1446 5
 2809 0044 BB68     		ldr	r3, [r7, #8]
 2810              		.syntax unified
 2811              	@ 1446 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 2812 0046 83F31188 		msr   basepri, r3  
 2813              		
 2814              	@ 0 "" 2
 2815              		.thumb
 2816              		.syntax unified
 2817              	.LBE10:
1447:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r =  0;
 2818              		.loc 1 1447 7
 2819 004a 0023     		movs	r3, #0
 2820 004c FB60     		str	r3, [r7, #12]
 2821 004e 02E0     		b	.L149
 2822              	.L148:
1448:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
1449:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r = -1;
 2823              		.loc 1 1449 7
 2824 0050 4FF0FF33 		mov	r3, #-1
 2825 0054 FB60     		str	r3, [r7, #12]
 2826              	.L149:
1450:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1451:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return r;
 2827              		.loc 1 1451 10
 2828 0056 FB68     		ldr	r3, [r7, #12]
1452:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 2829              		.loc 1 1452 1
 2830 0058 1846     		mov	r0, r3
 2831 005a 1037     		adds	r7, r7, #16
 2832              	.LCFI123:
 2833              		.cfi_def_cfa_offset 8
 2834 005c BD46     		mov	sp, r7
 2835              	.LCFI124:
 2836              		.cfi_def_cfa_register 13
 2837              		@ sp needed
 2838 005e 80BD     		pop	{r7, pc}
 2839              	.L152:
 2840              		.align	2
 2841              	.L151:
 2842 0060 00000000 		.word	_SEGGER_RTT
 2843              		.cfi_endproc
 2844              	.LFE23:
 2846              		.section	.text.SEGGER_RTT_SetNameDownBuffer,"ax",%progbits
 2847              		.align	1
 2848              		.global	SEGGER_RTT_SetNameDownBuffer
 2849              		.syntax unified
 2850              		.thumb
 2851              		.thumb_func
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 76


 2853              	SEGGER_RTT_SetNameDownBuffer:
 2854              	.LFB24:
1453:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1454:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1455:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1456:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_SetNameDownBuffer
1457:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1458:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1459:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of a specific Down-buffer name (T->H).
1460:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1461:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1462:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
1463:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1464:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1465:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1466:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
1467:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1468:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *     < 0  Error
1469:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
1470:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_SetNameDownBuffer(unsigned BufferIndex, const char* sName) {
 2855              		.loc 1 1470 75
 2856              		.cfi_startproc
 2857              		@ args = 0, pretend = 0, frame = 16
 2858              		@ frame_needed = 1, uses_anonymous_args = 0
 2859 0000 80B5     		push	{r7, lr}
 2860              	.LCFI125:
 2861              		.cfi_def_cfa_offset 8
 2862              		.cfi_offset 7, -8
 2863              		.cfi_offset 14, -4
 2864 0002 84B0     		sub	sp, sp, #16
 2865              	.LCFI126:
 2866              		.cfi_def_cfa_offset 24
 2867 0004 00AF     		add	r7, sp, #0
 2868              	.LCFI127:
 2869              		.cfi_def_cfa_register 7
 2870 0006 7860     		str	r0, [r7, #4]
 2871 0008 3960     		str	r1, [r7]
1471:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   int r;
1472:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1473:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   INIT();
 2872              		.loc 1 1473 3
 2873 000a 154B     		ldr	r3, .L158
 2874 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2875 000e 002B     		cmp	r3, #0
 2876 0010 01D1     		bne	.L154
 2877              		.loc 1 1473 3 is_stmt 0 discriminator 1
 2878 0012 FFF7FEFF 		bl	_DoInit
 2879              	.L154:
1474:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumDownBuffers) {
 2880              		.loc 1 1474 42 is_stmt 1
 2881 0016 124B     		ldr	r3, .L158
 2882 0018 5B69     		ldr	r3, [r3, #20]
 2883              		.loc 1 1474 21
 2884 001a 1A46     		mov	r2, r3
 2885              		.loc 1 1474 6
 2886 001c 7B68     		ldr	r3, [r7, #4]
 2887 001e 9342     		cmp	r3, r2
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 77


 2888 0020 16D2     		bcs	.L155
 2889              	.LBB11:
1475:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2890              		.loc 1 1475 5
 2891              		.syntax unified
 2892              	@ 1475 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 2893 0022 EFF31183 		mrs   r3, basepri  
 2894 0026 4FF02001 		mov   r1, #32       
 2895 002a 81F31188 		msr   basepri, r1  
 2896              		
 2897              	@ 0 "" 2
 2898              		.thumb
 2899              		.syntax unified
 2900 002e BB60     		str	r3, [r7, #8]
1476:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].sName = sName;
 2901              		.loc 1 1476 42
 2902 0030 0B49     		ldr	r1, .L158
 2903 0032 7A68     		ldr	r2, [r7, #4]
 2904 0034 1346     		mov	r3, r2
 2905 0036 5B00     		lsls	r3, r3, #1
 2906 0038 1344     		add	r3, r3, r2
 2907 003a DB00     		lsls	r3, r3, #3
 2908 003c 0B44     		add	r3, r3, r1
 2909 003e 6033     		adds	r3, r3, #96
 2910 0040 3A68     		ldr	r2, [r7]
 2911 0042 1A60     		str	r2, [r3]
1477:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2912              		.loc 1 1477 5
 2913 0044 BB68     		ldr	r3, [r7, #8]
 2914              		.syntax unified
 2915              	@ 1477 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 2916 0046 83F31188 		msr   basepri, r3  
 2917              		
 2918              	@ 0 "" 2
 2919              		.thumb
 2920              		.syntax unified
 2921              	.LBE11:
1478:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r =  0;
 2922              		.loc 1 1478 7
 2923 004a 0023     		movs	r3, #0
 2924 004c FB60     		str	r3, [r7, #12]
 2925 004e 02E0     		b	.L156
 2926              	.L155:
1479:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
1480:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r = -1;
 2927              		.loc 1 1480 7
 2928 0050 4FF0FF33 		mov	r3, #-1
 2929 0054 FB60     		str	r3, [r7, #12]
 2930              	.L156:
1481:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1482:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return r;
 2931              		.loc 1 1482 10
 2932 0056 FB68     		ldr	r3, [r7, #12]
1483:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 2933              		.loc 1 1483 1
 2934 0058 1846     		mov	r0, r3
 2935 005a 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 78


 2936              	.LCFI128:
 2937              		.cfi_def_cfa_offset 8
 2938 005c BD46     		mov	sp, r7
 2939              	.LCFI129:
 2940              		.cfi_def_cfa_register 13
 2941              		@ sp needed
 2942 005e 80BD     		pop	{r7, pc}
 2943              	.L159:
 2944              		.align	2
 2945              	.L158:
 2946 0060 00000000 		.word	_SEGGER_RTT
 2947              		.cfi_endproc
 2948              	.LFE24:
 2950              		.section	.text.SEGGER_RTT_SetFlagsUpBuffer,"ax",%progbits
 2951              		.align	1
 2952              		.global	SEGGER_RTT_SetFlagsUpBuffer
 2953              		.syntax unified
 2954              		.thumb
 2955              		.thumb_func
 2957              	SEGGER_RTT_SetFlagsUpBuffer:
 2958              	.LFB25:
1484:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1485:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1486:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1487:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsUpBuffer
1488:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1489:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1490:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of specific up-buffer flags (T->H).
1491:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1492:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1493:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
1494:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer.
1495:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1496:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1497:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
1498:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1499:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *     < 0  Error
1500:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
1501:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsUpBuffer(unsigned BufferIndex, unsigned Flags) {
 2959              		.loc 1 1501 71
 2960              		.cfi_startproc
 2961              		@ args = 0, pretend = 0, frame = 16
 2962              		@ frame_needed = 1, uses_anonymous_args = 0
 2963 0000 80B5     		push	{r7, lr}
 2964              	.LCFI130:
 2965              		.cfi_def_cfa_offset 8
 2966              		.cfi_offset 7, -8
 2967              		.cfi_offset 14, -4
 2968 0002 84B0     		sub	sp, sp, #16
 2969              	.LCFI131:
 2970              		.cfi_def_cfa_offset 24
 2971 0004 00AF     		add	r7, sp, #0
 2972              	.LCFI132:
 2973              		.cfi_def_cfa_register 7
 2974 0006 7860     		str	r0, [r7, #4]
 2975 0008 3960     		str	r1, [r7]
1502:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   int r;
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 79


1503:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1504:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   INIT();
 2976              		.loc 1 1504 3
 2977 000a 154B     		ldr	r3, .L165
 2978 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2979 000e 002B     		cmp	r3, #0
 2980 0010 01D1     		bne	.L161
 2981              		.loc 1 1504 3 is_stmt 0 discriminator 1
 2982 0012 FFF7FEFF 		bl	_DoInit
 2983              	.L161:
1505:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumUpBuffers) {
 2984              		.loc 1 1505 42 is_stmt 1
 2985 0016 124B     		ldr	r3, .L165
 2986 0018 1B69     		ldr	r3, [r3, #16]
 2987              		.loc 1 1505 21
 2988 001a 1A46     		mov	r2, r3
 2989              		.loc 1 1505 6
 2990 001c 7B68     		ldr	r3, [r7, #4]
 2991 001e 9342     		cmp	r3, r2
 2992 0020 16D2     		bcs	.L162
 2993              	.LBB12:
1506:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2994              		.loc 1 1506 5
 2995              		.syntax unified
 2996              	@ 1506 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 2997 0022 EFF31183 		mrs   r3, basepri  
 2998 0026 4FF02001 		mov   r1, #32       
 2999 002a 81F31188 		msr   basepri, r1  
 3000              		
 3001              	@ 0 "" 2
 3002              		.thumb
 3003              		.syntax unified
 3004 002e BB60     		str	r3, [r7, #8]
1507:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].Flags = Flags;
 3005              		.loc 1 1507 40
 3006 0030 0B49     		ldr	r1, .L165
 3007 0032 7A68     		ldr	r2, [r7, #4]
 3008 0034 1346     		mov	r3, r2
 3009 0036 5B00     		lsls	r3, r3, #1
 3010 0038 1344     		add	r3, r3, r2
 3011 003a DB00     		lsls	r3, r3, #3
 3012 003c 0B44     		add	r3, r3, r1
 3013 003e 2C33     		adds	r3, r3, #44
 3014 0040 3A68     		ldr	r2, [r7]
 3015 0042 1A60     		str	r2, [r3]
1508:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3016              		.loc 1 1508 5
 3017 0044 BB68     		ldr	r3, [r7, #8]
 3018              		.syntax unified
 3019              	@ 1508 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 3020 0046 83F31188 		msr   basepri, r3  
 3021              		
 3022              	@ 0 "" 2
 3023              		.thumb
 3024              		.syntax unified
 3025              	.LBE12:
1509:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r =  0;
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 80


 3026              		.loc 1 1509 7
 3027 004a 0023     		movs	r3, #0
 3028 004c FB60     		str	r3, [r7, #12]
 3029 004e 02E0     		b	.L163
 3030              	.L162:
1510:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
1511:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r = -1;
 3031              		.loc 1 1511 7
 3032 0050 4FF0FF33 		mov	r3, #-1
 3033 0054 FB60     		str	r3, [r7, #12]
 3034              	.L163:
1512:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1513:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return r;
 3035              		.loc 1 1513 10
 3036 0056 FB68     		ldr	r3, [r7, #12]
1514:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 3037              		.loc 1 1514 1
 3038 0058 1846     		mov	r0, r3
 3039 005a 1037     		adds	r7, r7, #16
 3040              	.LCFI133:
 3041              		.cfi_def_cfa_offset 8
 3042 005c BD46     		mov	sp, r7
 3043              	.LCFI134:
 3044              		.cfi_def_cfa_register 13
 3045              		@ sp needed
 3046 005e 80BD     		pop	{r7, pc}
 3047              	.L166:
 3048              		.align	2
 3049              	.L165:
 3050 0060 00000000 		.word	_SEGGER_RTT
 3051              		.cfi_endproc
 3052              	.LFE25:
 3054              		.section	.text.SEGGER_RTT_SetFlagsDownBuffer,"ax",%progbits
 3055              		.align	1
 3056              		.global	SEGGER_RTT_SetFlagsDownBuffer
 3057              		.syntax unified
 3058              		.thumb
 3059              		.thumb_func
 3061              	SEGGER_RTT_SetFlagsDownBuffer:
 3062              	.LFB26:
1515:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1516:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1517:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1518:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsDownBuffer
1519:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1520:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1521:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of specific Down-buffer flags (T->H).
1522:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1523:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1524:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
1525:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1526:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1527:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1528:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
1529:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1530:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *     < 0  Error
1531:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 81


1532:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsDownBuffer(unsigned BufferIndex, unsigned Flags) {
 3063              		.loc 1 1532 73
 3064              		.cfi_startproc
 3065              		@ args = 0, pretend = 0, frame = 16
 3066              		@ frame_needed = 1, uses_anonymous_args = 0
 3067 0000 80B5     		push	{r7, lr}
 3068              	.LCFI135:
 3069              		.cfi_def_cfa_offset 8
 3070              		.cfi_offset 7, -8
 3071              		.cfi_offset 14, -4
 3072 0002 84B0     		sub	sp, sp, #16
 3073              	.LCFI136:
 3074              		.cfi_def_cfa_offset 24
 3075 0004 00AF     		add	r7, sp, #0
 3076              	.LCFI137:
 3077              		.cfi_def_cfa_register 7
 3078 0006 7860     		str	r0, [r7, #4]
 3079 0008 3960     		str	r1, [r7]
1533:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   int r;
1534:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1535:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   INIT();
 3080              		.loc 1 1535 3
 3081 000a 154B     		ldr	r3, .L172
 3082 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3083 000e 002B     		cmp	r3, #0
 3084 0010 01D1     		bne	.L168
 3085              		.loc 1 1535 3 is_stmt 0 discriminator 1
 3086 0012 FFF7FEFF 		bl	_DoInit
 3087              	.L168:
1536:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumDownBuffers) {
 3088              		.loc 1 1536 42 is_stmt 1
 3089 0016 124B     		ldr	r3, .L172
 3090 0018 5B69     		ldr	r3, [r3, #20]
 3091              		.loc 1 1536 21
 3092 001a 1A46     		mov	r2, r3
 3093              		.loc 1 1536 6
 3094 001c 7B68     		ldr	r3, [r7, #4]
 3095 001e 9342     		cmp	r3, r2
 3096 0020 16D2     		bcs	.L169
 3097              	.LBB13:
1537:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3098              		.loc 1 1537 5
 3099              		.syntax unified
 3100              	@ 1537 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 3101 0022 EFF31183 		mrs   r3, basepri  
 3102 0026 4FF02001 		mov   r1, #32       
 3103 002a 81F31188 		msr   basepri, r1  
 3104              		
 3105              	@ 0 "" 2
 3106              		.thumb
 3107              		.syntax unified
 3108 002e BB60     		str	r3, [r7, #8]
1538:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].Flags = Flags;
 3109              		.loc 1 1538 42
 3110 0030 0B49     		ldr	r1, .L172
 3111 0032 7A68     		ldr	r2, [r7, #4]
 3112 0034 1346     		mov	r3, r2
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 82


 3113 0036 5B00     		lsls	r3, r3, #1
 3114 0038 1344     		add	r3, r3, r2
 3115 003a DB00     		lsls	r3, r3, #3
 3116 003c 0B44     		add	r3, r3, r1
 3117 003e 7433     		adds	r3, r3, #116
 3118 0040 3A68     		ldr	r2, [r7]
 3119 0042 1A60     		str	r2, [r3]
1539:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3120              		.loc 1 1539 5
 3121 0044 BB68     		ldr	r3, [r7, #8]
 3122              		.syntax unified
 3123              	@ 1539 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 3124 0046 83F31188 		msr   basepri, r3  
 3125              		
 3126              	@ 0 "" 2
 3127              		.thumb
 3128              		.syntax unified
 3129              	.LBE13:
1540:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r =  0;
 3130              		.loc 1 1540 7
 3131 004a 0023     		movs	r3, #0
 3132 004c FB60     		str	r3, [r7, #12]
 3133 004e 02E0     		b	.L170
 3134              	.L169:
1541:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
1542:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r = -1;
 3135              		.loc 1 1542 7
 3136 0050 4FF0FF33 		mov	r3, #-1
 3137 0054 FB60     		str	r3, [r7, #12]
 3138              	.L170:
1543:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1544:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return r;
 3139              		.loc 1 1544 10
 3140 0056 FB68     		ldr	r3, [r7, #12]
1545:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 3141              		.loc 1 1545 1
 3142 0058 1846     		mov	r0, r3
 3143 005a 1037     		adds	r7, r7, #16
 3144              	.LCFI138:
 3145              		.cfi_def_cfa_offset 8
 3146 005c BD46     		mov	sp, r7
 3147              	.LCFI139:
 3148              		.cfi_def_cfa_register 13
 3149              		@ sp needed
 3150 005e 80BD     		pop	{r7, pc}
 3151              	.L173:
 3152              		.align	2
 3153              	.L172:
 3154 0060 00000000 		.word	_SEGGER_RTT
 3155              		.cfi_endproc
 3156              	.LFE26:
 3158              		.section	.text.SEGGER_RTT_Init,"ax",%progbits
 3159              		.align	1
 3160              		.global	SEGGER_RTT_Init
 3161              		.syntax unified
 3162              		.thumb
 3163              		.thumb_func
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 83


 3165              	SEGGER_RTT_Init:
 3166              	.LFB27:
1546:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1547:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1548:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1549:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_Init
1550:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1551:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1552:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Initializes the RTT Control Block.
1553:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Should be used in RAM targets, at start of the application.
1554:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1555:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
1556:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** void SEGGER_RTT_Init (void) {
 3167              		.loc 1 1556 29
 3168              		.cfi_startproc
 3169              		@ args = 0, pretend = 0, frame = 0
 3170              		@ frame_needed = 1, uses_anonymous_args = 0
 3171 0000 80B5     		push	{r7, lr}
 3172              	.LCFI140:
 3173              		.cfi_def_cfa_offset 8
 3174              		.cfi_offset 7, -8
 3175              		.cfi_offset 14, -4
 3176 0002 00AF     		add	r7, sp, #0
 3177              	.LCFI141:
 3178              		.cfi_def_cfa_register 7
1557:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   _DoInit();
 3179              		.loc 1 1557 3
 3180 0004 FFF7FEFF 		bl	_DoInit
1558:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 3181              		.loc 1 1558 1
 3182 0008 00BF     		nop
 3183 000a 80BD     		pop	{r7, pc}
 3184              		.cfi_endproc
 3185              	.LFE27:
 3187              		.section	.text.SEGGER_RTT_SetTerminal,"ax",%progbits
 3188              		.align	1
 3189              		.global	SEGGER_RTT_SetTerminal
 3190              		.syntax unified
 3191              		.thumb
 3192              		.thumb_func
 3194              	SEGGER_RTT_SetTerminal:
 3195              	.LFB28:
1559:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1560:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1561:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1562:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_SetTerminal
1563:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1564:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1565:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Sets the terminal to be used for output on channel 0.
1566:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1567:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
1568:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    TerminalId  Index of the terminal.
1569:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1570:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
1571:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1572:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *     < 0  Error (e.g. if RTT is configured for non-blocking mode and there was no space in the buf
1573:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 84


1574:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_SetTerminal (char TerminalId) {
 3196              		.loc 1 1574 46
 3197              		.cfi_startproc
 3198              		@ args = 0, pretend = 0, frame = 32
 3199              		@ frame_needed = 1, uses_anonymous_args = 0
 3200 0000 80B5     		push	{r7, lr}
 3201              	.LCFI142:
 3202              		.cfi_def_cfa_offset 8
 3203              		.cfi_offset 7, -8
 3204              		.cfi_offset 14, -4
 3205 0002 88B0     		sub	sp, sp, #32
 3206              	.LCFI143:
 3207              		.cfi_def_cfa_offset 40
 3208 0004 00AF     		add	r7, sp, #0
 3209              	.LCFI144:
 3210              		.cfi_def_cfa_register 7
 3211 0006 0346     		mov	r3, r0
 3212 0008 FB71     		strb	r3, [r7, #7]
1575:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned char         ac[2];
1576:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
1577:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned Avail;
1578:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   int r;
1579:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1580:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   INIT();
 3213              		.loc 1 1580 3
 3214 000a 264B     		ldr	r3, .L183
 3215 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3216 000e 002B     		cmp	r3, #0
 3217 0010 01D1     		bne	.L176
 3218              		.loc 1 1580 3 is_stmt 0 discriminator 1
 3219 0012 FFF7FEFF 		bl	_DoInit
 3220              	.L176:
1581:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1582:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   r = 0;
 3221              		.loc 1 1582 5 is_stmt 1
 3222 0016 0023     		movs	r3, #0
 3223 0018 FB61     		str	r3, [r7, #28]
1583:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 3224              		.loc 1 1583 9
 3225 001a FF23     		movs	r3, #255
 3226 001c 3B73     		strb	r3, [r7, #12]
1584:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if ((unsigned char)TerminalId < (unsigned char)sizeof(_aTerminalId)) { // We only support a certa
 3227              		.loc 1 1584 6
 3228 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3229 0020 0F2B     		cmp	r3, #15
 3230 0022 36D8     		bhi	.L177
1585:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     ac[1] = _aTerminalId[(unsigned char)TerminalId];
 3231              		.loc 1 1585 26
 3232 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3233              		.loc 1 1585 25
 3234 0026 204A     		ldr	r2, .L183+4
 3235 0028 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3236              		.loc 1 1585 11
 3237 002a 7B73     		strb	r3, [r7, #13]
1586:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing = &_SEGGER_RTT.aUp[0];    // Buffer 0 is always reserved for terminal I/O, so we can use 
 3238              		.loc 1 1586 11
 3239 002c 1F4B     		ldr	r3, .L183+8
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 85


 3240 002e BB61     		str	r3, [r7, #24]
 3241              	.LBB14:
1587:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();    // Lock to make sure that no other task is writing into buffer, while we 
 3242              		.loc 1 1587 5
 3243              		.syntax unified
 3244              	@ 1587 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 3245 0030 EFF31183 		mrs   r3, basepri  
 3246 0034 4FF02001 		mov   r1, #32       
 3247 0038 81F31188 		msr   basepri, r1  
 3248              		
 3249              	@ 0 "" 2
 3250              		.thumb
 3251              		.syntax unified
 3252 003c 7B61     		str	r3, [r7, #20]
1588:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     if ((pRing->Flags & SEGGER_RTT_MODE_MASK) == SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL) {
 3253              		.loc 1 1588 15
 3254 003e BB69     		ldr	r3, [r7, #24]
 3255 0040 5B69     		ldr	r3, [r3, #20]
 3256              		.loc 1 1588 23
 3257 0042 03F00303 		and	r3, r3, #3
 3258              		.loc 1 1588 8
 3259 0046 022B     		cmp	r3, #2
 3260 0048 0AD1     		bne	.L178
1589:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _ActiveTerminal = TerminalId;
 3261              		.loc 1 1589 23
 3262 004a 194A     		ldr	r2, .L183+12
 3263 004c FB79     		ldrb	r3, [r7, #7]
 3264 004e 1370     		strb	r3, [r2]
1590:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
 3265              		.loc 1 1590 7
 3266 0050 07F10C03 		add	r3, r7, #12
 3267 0054 0222     		movs	r2, #2
 3268 0056 1946     		mov	r1, r3
 3269 0058 B869     		ldr	r0, [r7, #24]
 3270 005a FFF7FEFF 		bl	_WriteBlocking
 3271 005e 14E0     		b	.L179
 3272              	.L178:
1591:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     } else {                                                                            // Skipping
1592:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       Avail = _GetAvailWriteSpace(pRing);
 3273              		.loc 1 1592 15
 3274 0060 B869     		ldr	r0, [r7, #24]
 3275 0062 FFF7FEFF 		bl	_GetAvailWriteSpace
 3276 0066 3861     		str	r0, [r7, #16]
1593:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       if (Avail >= 2) {
 3277              		.loc 1 1593 10
 3278 0068 3B69     		ldr	r3, [r7, #16]
 3279 006a 012B     		cmp	r3, #1
 3280 006c 0AD9     		bls	.L180
1594:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         _ActiveTerminal = TerminalId;    // Only change active terminal in case of success
 3281              		.loc 1 1594 25
 3282 006e 104A     		ldr	r2, .L183+12
 3283 0070 FB79     		ldrb	r3, [r7, #7]
 3284 0072 1370     		strb	r3, [r2]
1595:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
 3285              		.loc 1 1595 9
 3286 0074 07F10C03 		add	r3, r7, #12
 3287 0078 0222     		movs	r2, #2
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 86


 3288 007a 1946     		mov	r1, r3
 3289 007c B869     		ldr	r0, [r7, #24]
 3290 007e FFF7FEFF 		bl	_WriteNoCheck
 3291 0082 02E0     		b	.L179
 3292              	.L180:
1596:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       } else {
1597:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         r = -1;
 3293              		.loc 1 1597 11
 3294 0084 4FF0FF33 		mov	r3, #-1
 3295 0088 FB61     		str	r3, [r7, #28]
 3296              	.L179:
1598:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       }
1599:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
1600:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3297              		.loc 1 1600 5
 3298 008a 7B69     		ldr	r3, [r7, #20]
 3299              		.syntax unified
 3300              	@ 1600 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 3301 008c 83F31188 		msr   basepri, r3  
 3302              		
 3303              	@ 0 "" 2
 3304              		.thumb
 3305              		.syntax unified
 3306              	.LBE14:
 3307 0090 02E0     		b	.L181
 3308              	.L177:
1601:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
1602:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     r = -1;
 3309              		.loc 1 1602 7
 3310 0092 4FF0FF33 		mov	r3, #-1
 3311 0096 FB61     		str	r3, [r7, #28]
 3312              	.L181:
1603:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1604:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return r;
 3313              		.loc 1 1604 10
 3314 0098 FB69     		ldr	r3, [r7, #28]
1605:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 3315              		.loc 1 1605 1
 3316 009a 1846     		mov	r0, r3
 3317 009c 2037     		adds	r7, r7, #32
 3318              	.LCFI145:
 3319              		.cfi_def_cfa_offset 8
 3320 009e BD46     		mov	sp, r7
 3321              	.LCFI146:
 3322              		.cfi_def_cfa_register 13
 3323              		@ sp needed
 3324 00a0 80BD     		pop	{r7, pc}
 3325              	.L184:
 3326 00a2 00BF     		.align	2
 3327              	.L183:
 3328 00a4 00000000 		.word	_SEGGER_RTT
 3329 00a8 00000000 		.word	_aTerminalId
 3330 00ac 18000000 		.word	_SEGGER_RTT+24
 3331 00b0 00000000 		.word	_ActiveTerminal
 3332              		.cfi_endproc
 3333              	.LFE28:
 3335              		.section	.text.SEGGER_RTT_TerminalOut,"ax",%progbits
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 87


 3336              		.align	1
 3337              		.global	SEGGER_RTT_TerminalOut
 3338              		.syntax unified
 3339              		.thumb
 3340              		.thumb_func
 3342              	SEGGER_RTT_TerminalOut:
 3343              	.LFB29:
1606:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** 
1607:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1608:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1609:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_TerminalOut
1610:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1611:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Function description
1612:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    Writes a string to the given terminal
1613:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *     without changing the terminal for channel 0.
1614:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1615:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Parameters
1616:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    TerminalId   Index of the terminal.
1617:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    s            String to be printed on the terminal.
1618:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1619:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *  Return value
1620:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *    >= 0 - Number of bytes written.
1621:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *     < 0 - Error.
1622:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** *
1623:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** */
1624:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_TerminalOut (char TerminalId, const char* s) {
 3344              		.loc 1 1624 61
 3345              		.cfi_startproc
 3346              		@ args = 0, pretend = 0, frame = 32
 3347              		@ frame_needed = 1, uses_anonymous_args = 0
 3348 0000 80B5     		push	{r7, lr}
 3349              	.LCFI147:
 3350              		.cfi_def_cfa_offset 8
 3351              		.cfi_offset 7, -8
 3352              		.cfi_offset 14, -4
 3353 0002 88B0     		sub	sp, sp, #32
 3354              	.LCFI148:
 3355              		.cfi_def_cfa_offset 40
 3356 0004 00AF     		add	r7, sp, #0
 3357              	.LCFI149:
 3358              		.cfi_def_cfa_register 7
 3359 0006 0346     		mov	r3, r0
 3360 0008 3960     		str	r1, [r7]
 3361 000a FB71     		strb	r3, [r7, #7]
1625:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   int                   Status;
1626:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned              FragLen;
1627:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   unsigned              Avail;
1628:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
1629:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1630:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   INIT();
 3362              		.loc 1 1630 3
 3363 000c 424B     		ldr	r3, .L199
 3364 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3365 0010 002B     		cmp	r3, #0
 3366 0012 01D1     		bne	.L186
 3367              		.loc 1 1630 3 is_stmt 0 discriminator 1
 3368 0014 FFF7FEFF 		bl	_DoInit
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 88


 3369              	.L186:
1631:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1632:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   // Validate terminal ID.
1633:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   //
1634:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   if (TerminalId < (char)sizeof(_aTerminalId)) { // We only support a certain number of channels
 3370              		.loc 1 1634 6 is_stmt 1
 3371 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3372 001a 0F2B     		cmp	r3, #15
 3373 001c 73D8     		bhi	.L187
1635:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
1636:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     // Get "to-host" ring buffer.
1637:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
1638:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     pRing = &_SEGGER_RTT.aUp[0];
 3374              		.loc 1 1638 11
 3375 001e 3F4B     		ldr	r3, .L199+4
 3376 0020 BB61     		str	r3, [r7, #24]
1639:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
1640:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     // Need to be able to change terminal, write data, change back.
1641:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     // Compute the fixed and variable sizes.
1642:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
1643:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     FragLen = STRLEN(s);
 3377              		.loc 1 1643 15
 3378 0022 3868     		ldr	r0, [r7]
 3379 0024 FFF7FEFF 		bl	strlen
 3380 0028 7861     		str	r0, [r7, #20]
 3381              	.LBB15:
1644:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
1645:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     // How we output depends upon the mode...
1646:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
1647:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3382              		.loc 1 1647 5
 3383              		.syntax unified
 3384              	@ 1647 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 3385 002a EFF31183 		mrs   r3, basepri  
 3386 002e 4FF02001 		mov   r1, #32       
 3387 0032 81F31188 		msr   basepri, r1  
 3388              		
 3389              	@ 0 "" 2
 3390              		.thumb
 3391              		.syntax unified
 3392 0036 3B61     		str	r3, [r7, #16]
1648:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 3393              		.loc 1 1648 13
 3394 0038 B869     		ldr	r0, [r7, #24]
 3395 003a FFF7FEFF 		bl	_GetAvailWriteSpace
 3396 003e F860     		str	r0, [r7, #12]
1649:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     switch (pRing->Flags & SEGGER_RTT_MODE_MASK) {
 3397              		.loc 1 1649 18
 3398 0040 BB69     		ldr	r3, [r7, #24]
 3399 0042 5B69     		ldr	r3, [r3, #20]
 3400              		.loc 1 1649 26
 3401 0044 03F00303 		and	r3, r3, #3
 3402              		.loc 1 1649 5
 3403 0048 022B     		cmp	r3, #2
 3404 004a 41D0     		beq	.L188
 3405 004c 022B     		cmp	r3, #2
 3406 004e 52D8     		bhi	.L189
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 89


 3407 0050 002B     		cmp	r3, #0
 3408 0052 02D0     		beq	.L190
 3409 0054 012B     		cmp	r3, #1
 3410 0056 1BD0     		beq	.L191
 3411 0058 4DE0     		b	.L189
 3412              	.L190:
1650:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1651:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       //
1652:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       // If we are in skip mode and there is no space for the whole
1653:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       // of this output, don't bother switching terminals at all.
1654:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       //
1655:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       if (Avail < (FragLen + 4u)) {
 3413              		.loc 1 1655 28
 3414 005a 7B69     		ldr	r3, [r7, #20]
 3415 005c 0433     		adds	r3, r3, #4
 3416              		.loc 1 1655 10
 3417 005e FA68     		ldr	r2, [r7, #12]
 3418 0060 9A42     		cmp	r2, r3
 3419 0062 02D2     		bcs	.L192
1656:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         Status = 0;
 3420              		.loc 1 1656 16
 3421 0064 0023     		movs	r3, #0
 3422 0066 FB61     		str	r3, [r7, #28]
1657:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       } else {
1658:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
1659:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
1660:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
1661:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       }
1662:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       break;
 3423              		.loc 1 1662 7
 3424 0068 49E0     		b	.L194
 3425              	.L192:
1658:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
 3426              		.loc 1 1658 9
 3427 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3428 006c 1946     		mov	r1, r3
 3429 006e B869     		ldr	r0, [r7, #24]
 3430 0070 FFF7FEFF 		bl	_PostTerminalSwitch
1659:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3431              		.loc 1 1659 23
 3432 0074 7A69     		ldr	r2, [r7, #20]
 3433 0076 3968     		ldr	r1, [r7]
 3434 0078 B869     		ldr	r0, [r7, #24]
 3435 007a FFF7FEFF 		bl	_WriteBlocking
 3436 007e 0346     		mov	r3, r0
1659:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3437              		.loc 1 1659 16
 3438 0080 FB61     		str	r3, [r7, #28]
1660:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       }
 3439              		.loc 1 1660 9
 3440 0082 274B     		ldr	r3, .L199+8
 3441 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3442 0086 1946     		mov	r1, r3
 3443 0088 B869     		ldr	r0, [r7, #24]
 3444 008a FFF7FEFF 		bl	_PostTerminalSwitch
 3445              		.loc 1 1662 7
 3446 008e 36E0     		b	.L194
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 90


 3447              	.L191:
1663:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
1664:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       //
1665:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       // If we are in trim mode and there is not enough space for everything,
1666:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       // trim the output but always include the terminal switch.  If no room
1667:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       // for terminal switch, skip that totally.
1668:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       //
1669:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       if (Avail < 4u) {
 3448              		.loc 1 1669 10
 3449 0090 FB68     		ldr	r3, [r7, #12]
 3450 0092 032B     		cmp	r3, #3
 3451 0094 03D8     		bhi	.L195
1670:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         Status = -1;
 3452              		.loc 1 1670 16
 3453 0096 4FF0FF33 		mov	r3, #-1
 3454 009a FB61     		str	r3, [r7, #28]
1671:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       } else {
1672:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
1673:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
1674:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
1675:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       }
1676:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       break;
 3455              		.loc 1 1676 7
 3456 009c 2FE0     		b	.L194
 3457              	.L195:
1672:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
 3458              		.loc 1 1672 9
 3459 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3460 00a0 1946     		mov	r1, r3
 3461 00a2 B869     		ldr	r0, [r7, #24]
 3462 00a4 FFF7FEFF 		bl	_PostTerminalSwitch
1673:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3463              		.loc 1 1673 66
 3464 00a8 FB68     		ldr	r3, [r7, #12]
 3465 00aa 1A1F     		subs	r2, r3, #4
1673:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3466              		.loc 1 1673 23
 3467 00ac 7B69     		ldr	r3, [r7, #20]
 3468 00ae 9342     		cmp	r3, r2
 3469 00b0 28BF     		it	cs
 3470 00b2 1346     		movcs	r3, r2
 3471 00b4 1A46     		mov	r2, r3
 3472 00b6 3968     		ldr	r1, [r7]
 3473 00b8 B869     		ldr	r0, [r7, #24]
 3474 00ba FFF7FEFF 		bl	_WriteBlocking
 3475 00be 0346     		mov	r3, r0
1673:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3476              		.loc 1 1673 16
 3477 00c0 FB61     		str	r3, [r7, #28]
1674:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       }
 3478              		.loc 1 1674 9
 3479 00c2 174B     		ldr	r3, .L199+8
 3480 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3481 00c6 1946     		mov	r1, r3
 3482 00c8 B869     		ldr	r0, [r7, #24]
 3483 00ca FFF7FEFF 		bl	_PostTerminalSwitch
 3484              		.loc 1 1676 7
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 91


 3485 00ce 16E0     		b	.L194
 3486              	.L188:
1677:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
1678:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       //
1679:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       // If we are in blocking mode, output everything.
1680:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       //
1681:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, TerminalId);
 3487              		.loc 1 1681 7
 3488 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3489 00d2 1946     		mov	r1, r3
 3490 00d4 B869     		ldr	r0, [r7, #24]
 3491 00d6 FFF7FEFF 		bl	_PostTerminalSwitch
1682:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       Status = (int)_WriteBlocking(pRing, s, FragLen);
 3492              		.loc 1 1682 21
 3493 00da 7A69     		ldr	r2, [r7, #20]
 3494 00dc 3968     		ldr	r1, [r7]
 3495 00de B869     		ldr	r0, [r7, #24]
 3496 00e0 FFF7FEFF 		bl	_WriteBlocking
 3497 00e4 0346     		mov	r3, r0
 3498              		.loc 1 1682 14
 3499 00e6 FB61     		str	r3, [r7, #28]
1683:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
 3500              		.loc 1 1683 7
 3501 00e8 0D4B     		ldr	r3, .L199+8
 3502 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3503 00ec 1946     		mov	r1, r3
 3504 00ee B869     		ldr	r0, [r7, #24]
 3505 00f0 FFF7FEFF 		bl	_PostTerminalSwitch
1684:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       break;
 3506              		.loc 1 1684 7
 3507 00f4 03E0     		b	.L194
 3508              	.L189:
1685:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     default:
1686:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       Status = -1;
 3509              		.loc 1 1686 14
 3510 00f6 4FF0FF33 		mov	r3, #-1
 3511 00fa FB61     		str	r3, [r7, #28]
1687:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****       break;
 3512              		.loc 1 1687 7
 3513 00fc 00BF     		nop
 3514              	.L194:
1688:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     }
1689:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
1690:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     // Finish up.
1691:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     //
1692:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3515              		.loc 1 1692 5
 3516 00fe 3B69     		ldr	r3, [r7, #16]
 3517              		.syntax unified
 3518              	@ 1692 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.c" 1
 3519 0100 83F31188 		msr   basepri, r3  
 3520              		
 3521              	@ 0 "" 2
 3522              		.thumb
 3523              		.syntax unified
 3524              	.LBE15:
 3525 0104 02E0     		b	.L197
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 92


 3526              	.L187:
1693:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   } else {
1694:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****     Status = -1;
 3527              		.loc 1 1694 12
 3528 0106 4FF0FF33 		mov	r3, #-1
 3529 010a FB61     		str	r3, [r7, #28]
 3530              	.L197:
1695:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   }
1696:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c ****   return Status;
 3531              		.loc 1 1696 10
 3532 010c FB69     		ldr	r3, [r7, #28]
1697:Middlewares/Third_Party/SEGGER/SEGGER_RTT.c **** }
 3533              		.loc 1 1697 1
 3534 010e 1846     		mov	r0, r3
 3535 0110 2037     		adds	r7, r7, #32
 3536              	.LCFI150:
 3537              		.cfi_def_cfa_offset 8
 3538 0112 BD46     		mov	sp, r7
 3539              	.LCFI151:
 3540              		.cfi_def_cfa_register 13
 3541              		@ sp needed
 3542 0114 80BD     		pop	{r7, pc}
 3543              	.L200:
 3544 0116 00BF     		.align	2
 3545              	.L199:
 3546 0118 00000000 		.word	_SEGGER_RTT
 3547 011c 18000000 		.word	_SEGGER_RTT+24
 3548 0120 00000000 		.word	_ActiveTerminal
 3549              		.cfi_endproc
 3550              	.LFE29:
 3552              		.text
 3553              	.Letext0:
 3554              		.file 2 "Middlewares/Third_Party/SEGGER/SEGGER_RTT.h"
 3555              		.file 3 "c:\\dev\\tool\\gcc-arm-11.2-2022.02-mingw-w64-i686-arm-none-eabi\\lib\\gcc\\arm-none-eabi
 3556              		.file 4 "c:\\dev\\tool\\gcc-arm-11.2-2022.02-mingw-w64-i686-arm-none-eabi\\arm-none-eabi\\include\
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 93


DEFINED SYMBOLS
                            *ABS*:00000000 SEGGER_RTT.c
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:20     .data._aTerminalId:00000000 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:23     .data._aTerminalId:00000000 _aTerminalId
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:30     .bss._SEGGER_RTT:00000000 _SEGGER_RTT
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:27     .bss._SEGGER_RTT:00000000 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:33     .bss._acUpBuffer:00000000 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:36     .bss._acUpBuffer:00000000 _acUpBuffer
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:39     .bss._acDownBuffer:00000000 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:42     .bss._acDownBuffer:00000000 _acDownBuffer
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:47     .bss._ActiveTerminal:00000000 _ActiveTerminal
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:48     .bss._ActiveTerminal:00000000 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:50     .rodata:00000000 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:60     .text._DoInit:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:65     .text._DoInit:00000000 _DoInit
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:178    .text._DoInit:0000008c $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:188    .text._WriteBlocking:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:193    .text._WriteBlocking:00000000 _WriteBlocking
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:334    .text._WriteNoCheck:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:339    .text._WriteNoCheck:00000000 _WriteNoCheck
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:439    .text._PostTerminalSwitch:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:444    .text._PostTerminalSwitch:00000000 _PostTerminalSwitch
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:492    .text._PostTerminalSwitch:00000030 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:497    .text._GetAvailWriteSpace:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:502    .text._GetAvailWriteSpace:00000000 _GetAvailWriteSpace
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:575    .text.SEGGER_RTT_ReadNoLock:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:581    .text.SEGGER_RTT_ReadNoLock:00000000 SEGGER_RTT_ReadNoLock
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:762    .text.SEGGER_RTT_ReadNoLock:00000100 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:767    .text.SEGGER_RTT_Read:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:773    .text.SEGGER_RTT_Read:00000000 SEGGER_RTT_Read
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:837    .text.SEGGER_RTT_WriteWithOverwriteNoLock:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:843    .text.SEGGER_RTT_WriteWithOverwriteNoLock:00000000 SEGGER_RTT_WriteWithOverwriteNoLock
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1056   .text.SEGGER_RTT_WriteWithOverwriteNoLock:00000114 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1061   .text.SEGGER_RTT_WriteNoLock:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1067   .text.SEGGER_RTT_WriteNoLock:00000000 SEGGER_RTT_WriteNoLock
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1189   .text.SEGGER_RTT_WriteNoLock:0000009c $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1194   .text.SEGGER_RTT_Write:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1200   .text.SEGGER_RTT_Write:00000000 SEGGER_RTT_Write
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1271   .text.SEGGER_RTT_Write:00000044 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1276   .text.SEGGER_RTT_WriteString:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1282   .text.SEGGER_RTT_WriteString:00000000 SEGGER_RTT_WriteString
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1325   .text.SEGGER_RTT_PutCharSkipNoLock:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1331   .text.SEGGER_RTT_PutCharSkipNoLock:00000000 SEGGER_RTT_PutCharSkipNoLock
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1428   .text.SEGGER_RTT_PutCharSkipNoLock:0000006c $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1433   .text.SEGGER_RTT_PutCharSkip:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1439   .text.SEGGER_RTT_PutCharSkip:00000000 SEGGER_RTT_PutCharSkip
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1562   .text.SEGGER_RTT_PutCharSkip:00000088 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1567   .text.SEGGER_RTT_PutChar:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1573   .text.SEGGER_RTT_PutChar:00000000 SEGGER_RTT_PutChar
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1713   .text.SEGGER_RTT_PutChar:0000009c $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1718   .text.SEGGER_RTT_GetKey:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1724   .text.SEGGER_RTT_GetKey:00000000 SEGGER_RTT_GetKey
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1780   .text.SEGGER_RTT_WaitKey:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1786   .text.SEGGER_RTT_WaitKey:00000000 SEGGER_RTT_WaitKey
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1827   .text.SEGGER_RTT_HasKey:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1833   .text.SEGGER_RTT_HasKey:00000000 SEGGER_RTT_HasKey
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1893   .text.SEGGER_RTT_HasKey:00000038 $d
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 94


C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1898   .text.SEGGER_RTT_HasData:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1904   .text.SEGGER_RTT_HasData:00000000 SEGGER_RTT_HasData
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1959   .text.SEGGER_RTT_HasData:00000034 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1964   .text.SEGGER_RTT_HasDataUp:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:1970   .text.SEGGER_RTT_HasDataUp:00000000 SEGGER_RTT_HasDataUp
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2025   .text.SEGGER_RTT_HasDataUp:00000034 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2030   .text.SEGGER_RTT_AllocDownBuffer:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2036   .text.SEGGER_RTT_AllocDownBuffer:00000000 SEGGER_RTT_AllocDownBuffer
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2214   .text.SEGGER_RTT_AllocDownBuffer:000000f0 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2219   .text.SEGGER_RTT_AllocUpBuffer:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2225   .text.SEGGER_RTT_AllocUpBuffer:00000000 SEGGER_RTT_AllocUpBuffer
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2405   .text.SEGGER_RTT_AllocUpBuffer:000000f4 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2410   .text.SEGGER_RTT_ConfigUpBuffer:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2416   .text.SEGGER_RTT_ConfigUpBuffer:00000000 SEGGER_RTT_ConfigUpBuffer
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2572   .text.SEGGER_RTT_ConfigUpBuffer:000000d0 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2577   .text.SEGGER_RTT_ConfigDownBuffer:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2583   .text.SEGGER_RTT_ConfigDownBuffer:00000000 SEGGER_RTT_ConfigDownBuffer
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2738   .text.SEGGER_RTT_ConfigDownBuffer:000000d0 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2743   .text.SEGGER_RTT_SetNameUpBuffer:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2749   .text.SEGGER_RTT_SetNameUpBuffer:00000000 SEGGER_RTT_SetNameUpBuffer
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2842   .text.SEGGER_RTT_SetNameUpBuffer:00000060 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2847   .text.SEGGER_RTT_SetNameDownBuffer:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2853   .text.SEGGER_RTT_SetNameDownBuffer:00000000 SEGGER_RTT_SetNameDownBuffer
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2946   .text.SEGGER_RTT_SetNameDownBuffer:00000060 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2951   .text.SEGGER_RTT_SetFlagsUpBuffer:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:2957   .text.SEGGER_RTT_SetFlagsUpBuffer:00000000 SEGGER_RTT_SetFlagsUpBuffer
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:3050   .text.SEGGER_RTT_SetFlagsUpBuffer:00000060 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:3055   .text.SEGGER_RTT_SetFlagsDownBuffer:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:3061   .text.SEGGER_RTT_SetFlagsDownBuffer:00000000 SEGGER_RTT_SetFlagsDownBuffer
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:3154   .text.SEGGER_RTT_SetFlagsDownBuffer:00000060 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:3159   .text.SEGGER_RTT_Init:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:3165   .text.SEGGER_RTT_Init:00000000 SEGGER_RTT_Init
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:3188   .text.SEGGER_RTT_SetTerminal:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:3194   .text.SEGGER_RTT_SetTerminal:00000000 SEGGER_RTT_SetTerminal
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:3328   .text.SEGGER_RTT_SetTerminal:000000a4 $d
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:3336   .text.SEGGER_RTT_TerminalOut:00000000 $t
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:3342   .text.SEGGER_RTT_TerminalOut:00000000 SEGGER_RTT_TerminalOut
C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s:3546   .text.SEGGER_RTT_TerminalOut:00000118 $d
                           .group:00000000 wm4.0.adf14caa46e67022f385f91b18884ae8
                           .group:00000000 wm4.SEGGER_RTT_Conf.h.64.9cfee438ca91c6442e3803195d3c0ec8
                           .group:00000000 wm4.ieeefp.h.77.c88535c35f465c05b101960cf0179075
                           .group:00000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:00000000 wm4.newlib.h.18.efd6f55802c49f72b3c697ccf45db7f0
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:00000000 wm4.stddef.h.39.cf3ebec0bc8c9e3d2f276a64e0fe5e7a
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.c0958401bd0ce484d507ee19aacab817
                           .group:00000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:00000000 wm4.cdefs.h.49.39045112216f6a021dbdffe3bf5accce
ARM GAS  C:\Users\Bunyamin\AppData\Local\Temp\ccTaZoAo.s 			page 95


                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.stdarg.h.31.b55da1089056868966f25de5dbfc7d3c
                           .group:00000000 wm4.SEGGER_RTT.h.186.da8062c611e87c38c368ee967113912a
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29

UNDEFINED SYMBOLS
memcpy
strlen
